
type Object {
  id: String!
}


type Phenotype_info__high {
  text: String
  high__OF__phenotype_info: String
}


type Gene__go_term {
  go_term: Go_term
  go_code: Go_code
  go_term__OF__gene: Gene
}


type Interaction__molecule_interactor {
  molecule: Molecule
  molecule_interactor__OF__interaction: Interaction
}


type Analysis {
  species_in_analysis: [Species]
  sample: [Condition]
  independent_variable: [String]
  url: [String]
  based_on_wb_release: [Int]
  reference: [Paper]
  title: [String]
  database: [Analysis__database]
  conducted_by: [Person]
  id: String
  description: [String]
  project: [Analysis]
  based_on_db_release: [String]
  rnaseq__OF__expr_pattern: [Expr_pattern]
  rnaseq__OF__expression_cluster: [Expression_cluster]
  contributed_by__OF__go_annotation: [Go_annotation]
  tiling_array__OF__expression_cluster: [Expression_cluster]
  from_analysis__OF__evidence: [String]
  analysis__OF__feature__VIA__defined_by_analysis: [Feature__defined_by_analysis]
  tiling_array__OF__expr_pattern: [Expr_pattern]
  analysis__OF__variation: [Variation]
  qpcr__OF__expression_cluster: [Expression_cluster]
  analysis__OF__gene_cluster: [Gene_cluster]
  project__OF__analysis: [Analysis]
  analysis__OF__sequence: [Sequence]
  analysis__OF__splice_confirmation__VIA__rnaseq: [Splice_confirmation__rnaseq]
}


type Feature__associated_with_operon {
  operon: Operon
  associated_with_operon__OF__feature: Feature
}


type Transcript__provisional_description {
  text: String
  provisional_description__OF__transcript: Transcript
}


type Transcript__rnaseq {
  stage: Life_stage
  fpkm: Float
  rnaseq__OF__transcript: Transcript
}


type Gene__expression {
  text: String
  expression__OF__gene: Gene
}


type Clone__negative_gene {
  gene: Gene
  negative_gene__OF__clone: Clone
}


type Treenode {
  description: [String]
  show_bootstrap: Boolean
  id: String
  hide_bootstraps: Boolean
  bootstrap: Float
  tree: Tree
  xid: Int
  taxon: Boolean
  distance: Float
  type: String
  hide: Boolean
  colour: String
  embedded_tree: [Tree]
  anatomy_term: Anatomy_term
  label: String
  parent: Treenode
  root__OF__tree: [Tree]
  parent__OF__treenode: [Treenode]
}


type Role__phd {
  to: String
  from: String
  phd__OF__role: String
}


type Operon__reference {
  paper: Paper
  reference__OF__operon: Operon
}


type Expr_pattern__life_stage {
  life_stage: Life_stage
  life_stage__OF__expr_pattern: Expr_pattern
}


type Rearrangement__phenotype_not_observed {
  phenotype: Phenotype
  phenotype_not_observed__OF__rearrangement: Rearrangement
}


type Reconcellinfo__timepoint {
  float: Float
  timepoint__OF__reconcellinfo: String
}


type Phenotype__primary_name {
  text: String
  primary_name__OF__phenotype: Phenotype
}


type Map__map {
  map: Map
  map__OF__map: Map
}


type Phenotype_info__cold_sensitive {
  text: String
  cold_sensitive__OF__phenotype_info: String
}


type Expr_profile__remark {
  text: String
  remark__OF__expr_profile: Expr_profile
}


type Gene__corresponding_cds {
  cds: Cds
  corresponding_cds__OF__gene: Gene
}


type Sequence__overlap_right {
  int: Int
  sequence: Sequence
  overlap_right__OF__sequence: Sequence
}


type Operon__split_into {
  operon: Operon
  split_into__OF__operon: Operon
}


type Transposon {
  old_name: [Transposon__old_name]
  species: Species
  from_laboratory: Laboratory
  member_of: [Transposon_family]
  evidence: String
  id: String
  corresponding_pseudogene: [Transposon__corresponding_pseudogene]
  corresponding_cds: [Transposon__corresponding_cds]
  ltr_region: [Transposon__ltr_region]
  remark: [Transposon__remark]
  copy_status: Transposon__copy_status
  transposon__OF__gene__VIA__corresponding_transposon: [Gene__corresponding_transposon]
  transposon__OF__feature__VIA__associated_with_transposon: [Feature__associated_with_transposon]
}


type Anatomy_function__gene {
  gene: Gene
  gene__OF__anatomy_function: Anatomy_function
}


type Locus__remark {
  text: String
  remark__OF__locus: Locus
}


type Motif__database {
  accession: String
  field: Database_field
  database: Database
  database__OF__motif: Motif
}


type Clone__does_not_hybridize_to {
  clone: Clone
  grid: Grid
  does_not_hybridize_to__OF__clone: Clone
}


type Expression_cluster__expr_pattern {
  expr_pattern: Expr_pattern
  expr_pattern__OF__expression_cluster: Expression_cluster
}


type Molecular_change__silent {
  text: String
  silent__OF__molecular_change: String
}


type Multi_counts__allele {
  variation: Variation
  int: Int
  allele__OF__multi_counts: String
}


type Phenotype_info__go_term {
  pato_term: Pato_term
  go_term: Go_term
  go_term__OF__phenotype_info: String
}


type Interaction__regulation_result {
  value: String
  regulation_result__OF__interaction: Interaction
}


type Method__gene_assemble_method {
  method: Method
  float: Float
  gene_assemble_method__OF__method: Method
}


type Contig__map {
  map: Map
  map__OF__contig: Contig
}


type Phenotype_info__caused_by_other {
  text: String
  caused_by_other__OF__phenotype_info: String
}


type Expr_pattern__not_in_life_stage {
  life_stage: Life_stage
  not_in_life_stage__OF__expr_pattern: Expr_pattern
}


type Gene_class {
  old_member: [String]
  main_name: [Gene_class]
  description: [String]
  phenotype: [String]
  id: String
  designating_laboratory: Laboratory
  evidence: String
  former_designating_laboratory: [Gene_class__former_designating_laboratory]
  remark: [Gene_class__remark]
  gene_class__OF__gene: [Gene]
  main_name__OF__gene_class: [Gene_class]
  gene_class__OF__variation: [Variation]
}


type Cds__concise_description {
  text: String
  concise_description__OF__cds: Cds
}


type Gene__legacy_information {
  text: String
  legacy_information__OF__gene: Gene
}


type Cds {
  protein_id: [Cds__protein_id]
  source_exons: [Cds__source_exons]
  confidential_remark: [String]
  db_remark: [Cds__db_remark]
  detailed_description: [Cds__detailed_description]
  database: [Cds__database]
  cds: Cds__cds
  remark: [Cds__remark]
  evidence: String
  from_laboratory: Laboratory
  start_not_found: Int
  reference: [Cds__reference]
  species: Species
  artificial_intron: String
  go_term: [Cds__go_term]
  prediction_status: String
  rnaseq: [Cds__rnaseq]
  corresponding_protein: Cds__corresponding_protein
  concise_description: [Cds__concise_description]
  cds_predicted_by: [Cds__cds_predicted_by]
  corresponding_pcr_product: [Pcr_product]
  last_reviewed: Cds__last_reviewed
  end_not_found: Boolean
  id: String
  provisional_description: [Cds__provisional_description]
  brief_identification: Cds__brief_identification
  genetic_code: Genetic_code
  matching_cdna: [Cds__matching_cdna]
  isoform: String
  cds__OF__variation__VIA__predicted_cds: [Variation__predicted_cds]
  corresponding_cds_history__OF__gene: [Gene]
  cds__OF__transcript__VIA__corresponding_cds: [Transcript__corresponding_cds]
  cds__OF__sage_tag__VIA__predicted_cds: [Sage_tag__predicted_cds]
  cds__OF__oligo_set__VIA__overlaps_cds: [Oligo_set__overlaps_cds]
  cds__OF__interaction__VIA__interactor_overlapping_cds: [Interaction__interactor_overlapping_cds]
  cds__OF__transposon__VIA__corresponding_cds: [Transposon__corresponding_cds]
  cds__OF__feature__VIA__associated_with_cds: [Feature__associated_with_cds]
  cds__OF__microarray_results__VIA__cds: [Microarray_results__cds]
  cds__OF__rnai__VIA__predicted_gene: [Rnai__predicted_gene]
  cds__OF__gene__VIA__corresponding_cds: [Gene__corresponding_cds]
}


type Role__assistant_professor {
  from: String
  to: String
  assistant_professor__OF__role: String
}


type Construct__remark {
  text: String
  remark__OF__construct: Construct
}


type Antibody__historical_gene {
  text: String
  gene: Gene
  historical_gene__OF__antibody: Antibody
}


type Grid__size {
  x: Int
  y: Int
  size__OF__grid: Grid
}


type Anatomy_term__neurodata {
  anatomy_term: Anatomy_term
  neurodata__OF__anatomy_term: Anatomy_term
}


type Homology_group {
  cog_code: String
  protein: [Protein]
  id: String
  go_term: [Go_term]
  eggnog_type: String
  inparanoid_group: Boolean
  evidence: String
  cog_type: String
  orthomcl_group: Boolean
  title: [String]
  remark: [Homology_group__remark]
  eggnog_code: String
  database: [Homology_group__database]
}


type Rearrangement__reference {
  paper: Paper
  reference__OF__rearrangement: Rearrangement
}


type Map__extent {
  min: Float
  max: Float
  extent__OF__map: Map
}


type Two_point_data__complex_mixed {
  x: Int
  all: Int
  complex_mixed__OF__two_point_data: Two_point_data
}


type Rearrangement__gene_inside {
  gene: Gene
  gene_inside__OF__rearrangement: Rearrangement
}


type Position_matrix__bound_by_gene_product {
  gene: Gene
  bound_by_gene_product__OF__position_matrix: Position_matrix
}


type Clone__contains {
  clone: Clone
  text: String
  contains__OF__clone: Clone
}


type Feature__associated_with_transposon {
  transposon: Transposon
  associated_with_transposon__OF__feature: Feature
}


type Microarray_data__remark {
  text: String
  remark__OF__microarray_data: String
}


type Two_point_data__backcross {
  x: Int
  y: Int
  wt: Int
  xy: Int
  backcross__OF__two_point_data: Two_point_data
}


type Evidence__author_evidence {
  note: String
  author: Author
  author_evidence__OF__evidence: String
}


type Molecule__detection_method {
  text: String
  detection_method__OF__molecule: Molecule
}


type Two_point_data__back_one {
  x: Int
  wt: Int
  back_one__OF__two_point_data: Two_point_data
}


type Rearrangement__map {
  map: Map
  map__OF__rearrangement: Rearrangement
}


type Splice_confirmation__rnaseq {
  int: Int
  analysis: Analysis
  rnaseq__OF__splice_confirmation: Splice_confirmation
}


type Neurodata__send_joint {
  series: String
  count: Int
  send_joint__OF__neurodata: String
}


type Grid_data {
  default_negative: Boolean
  hybridizes_to: [Clone]
  mapper: [Author]
  clone: Clone
  laboratory: [Laboratory]
  grid: Grid
  date: String
  id: String
  positive_product: [Clone]
}


type Variation__mutagen {
  text: String
  mutagen__OF__variation: Variation
}


type Variation__polymorphic_strain_digest {
  enzyme: String
  band_size: String
  site: String
  polymorphic_strain_digest__OF__variation: Variation
}


type Structure_data__database {
  field: Database_field
  database: Database
  accession: String
  database__OF__structure_data: Structure_data
}


type Two_point_data__selected_trans {
  xy: Int
  x: Int
  selected_trans__OF__two_point_data: Two_point_data
}


type Phenotype_info__variation_effect {
  value: String
  variation_effect__OF__phenotype_info: String
}


type Gene__molecular_function {
  text: String
  molecular_function__OF__gene: Gene
}


type Molecular_change__nonsense {
  value: String
  text: String
  nonsense__OF__molecular_change: String
}


type Expr_pattern__not_in_go_term {
  go_term: Go_term
  not_in_go_term__OF__expr_pattern: Expr_pattern
}


type Grid__space_at {
  y: Int
  x: Int
  space_at__OF__grid: Grid
}


type Anatomy_term__term {
  text: String
  term__OF__anatomy_term: Anatomy_term
}


type Interaction__interactor_overlapping_gene {
  gene: Gene
  interactor_overlapping_gene__OF__interaction: Interaction
}


type Go_annotation__life_stage_relation {
  text: String
  life_stage: Life_stage
  life_stage_relation__OF__go_annotation: Go_annotation
}


type Anatomy_function__phenotype {
  phenotype: Phenotype
  phenotype__OF__anatomy_function: Anatomy_function
}


type Expr_pattern__remark {
  text: String
  remark__OF__expr_pattern: Expr_pattern
}


type Microarray_results {
  pseudogene: [Microarray_results__pseudogene]
  min: Microarray_results__min
  expr_pattern: [Expr_pattern]
  cds: [Microarray_results__cds]
  results: [Microarray_results__results]
  microarray: [Microarray]
  pcr_product: Pcr_product
  id: String
  gene: [Microarray_results__gene]
  oligo_set: Oligo_set
  max: Microarray_results__max
  transcript: [Microarray_results__transcript]
  species: Species
  remark: [Microarray_results__remark]
  microarray_results__OF__expression_cluster__VIA__microarray_results: [Expression_cluster__microarray_results]
  microarray_results_evidence__OF__evidence: [String]
}


type Db__excise {
  attrs: [String]
  before: String
  beforeT: Int
  excise__OF__db: [Db]
}


type Wbprocess__historical_gene {
  text: String
  gene: Gene
  historical_gene__OF__wbprocess: Wbprocess
}


type Picture {
  cropped_from: [Picture]
  article_url: Picture__article_url
  expr_pattern: [Expr_pattern]
  publisher_url: Database
  wbprocess: [Picture__wbprocess]
  species: Species
  person_name: String
  cellular_component: [Go_term]
  acknowledgement_template: String
  anatomy: [Anatomy_term]
  publication_year: String
  gene: [Gene]
  reference: [Paper]
  remark: [Picture__remark]
  contact: [Person]
  life_stage: [Life_stage]
  description: [String]
  id: String
  name: String
  journal_url: Database
  cropped_from__OF__picture: [Picture]
  picture__OF__strain: [Strain]
  picture__OF__phenotype_info__VIA__image: [Phenotype_info__image]
}


type Rnai__database {
  accession: String
  field: Database_field
  database: Database
  database__OF__rnai: Rnai
}


type Feature__associated_with_gene {
  gene: Gene
  associated_with_gene__OF__feature: Feature
}


type Go_code__remark {
  text: String
  remark__OF__go_code: Go_code
}


type Variation__database {
  accession: String
  database: Database
  field: Database_field
  database__OF__variation: Variation
}


type Movie__variation {
  variation: Variation
  variation__OF__movie: Movie
}


type Motif__db_remark {
  text: String
  db_remark__OF__motif: Motif
}


type Wbprocess__go_term {
  go_term: Go_term
  go_term__OF__wbprocess: Wbprocess
}


type Sequence_collection__status {
  status: String
  status__OF__sequence_collection: Sequence_collection
}


type Antibody__reference {
  paper: Paper
  reference__OF__antibody: Antibody
}


type Db {
  code: String
  index: Boolean
  lang: String
  doc: String
  fn: String
  cardinality: String
  excise: String
  txInstant: String
  valueType: String
  unique: String
  ident: String
  noHistory: Boolean
  isComponent: Boolean
  fulltext: Boolean
}


type Variation__possibly_affects {
  gene: Gene
  possibly_affects__OF__variation: Variation
}


type Multi_counts__transgene {
  int: Int
  transgene: Transgene
  transgene__OF__multi_counts: String
}


type Construct__laboratory {
  laboratory: Laboratory
  laboratory__OF__construct: Construct
}


type Rnai__phenotype_not_observed {
  phenotype: Phenotype
  phenotype_not_observed__OF__rnai: Rnai
}


type Cds__db_remark {
  text: String
  db_remark__OF__cds: Cds
}


type Feature__associated_with_cds {
  cds: Cds
  associated_with_cds__OF__feature: Feature
}


type Person__worked_with {
  person: Person
  worked_with__OF__person: Person
}


type Gene__disease_relevance {
  species: Species
  note: String
  disease_relevance__OF__gene: Gene
}


type Oligo_set__target_exons {
  end: Int
  start: Int
  target_exons__OF__oligo_set: Oligo_set
}


type Clone__type {
  text: String
  value: String
  type__OF__clone: Clone
}


type Method__gff_so {
  so_term: So_term
  ace2so: Ace2so
  gff_so__OF__method: Method
}


type Gene__functional_pathway {
  text: String
  functional_pathway__OF__gene: Gene
}


type Molecule__status {
  value: String
  status__OF__molecule: Molecule
}


type Clone__inside_rearr {
  rearrangement: Rearrangement
  author: Author
  inside_rearr__OF__clone: Clone
}


type Map_position__position {
  float: Float
  position__OF__map_position: String
}


type Pos_neg_data__remark {
  text: String
  remark__OF__pos_neg_data: Pos_neg_data
}


type Method__intron_cost {
  bp_cost: Float
  log_bp_cost: Float
  min: Int
  intron_cost__OF__method: Method
}


type Gene_cluster {
  contains_gene: [Gene]
  id: String
  description: [String]
  analysis: [Analysis]
  reference: [Gene_cluster__reference]
  gene_cluster__OF__wbprocess__VIA__gene_cluster: [Wbprocess__gene_cluster]
}


type Gene__disease_experimental_model {
  do_term: Do_term
  species: Species
  disease_experimental_model__OF__gene: Gene
}


type Do_term__database {
  field: Database_field
  database: Database
  accession: String
  database__OF__do_term: Do_term
}


type Rnai__pseudogene {
  pseudogene: Pseudogene
  pseudogene__OF__rnai: Rnai
}


type Feature__associated_with_variation {
  variation: Variation
  associated_with_variation__OF__feature: Feature
}


type Rearrangement__phenotype {
  phenotype: Phenotype
  phenotype__OF__rearrangement: Rearrangement
}


type Pseudogene__concise_description {
  text: String
  concise_description__OF__pseudogene: Pseudogene
}


type Feature__associated_with_position_matrix {
  position_matrix: Position_matrix
  associated_with_position_matrix__OF__feature: Feature
}


type Two_point_data__remark {
  text: String
  remark__OF__two_point_data: Two_point_data
}


type Contig {
  pmap: Contig__pmap
  map: [Contig__map]
  id: String
  contig__OF__clone__VIA__pmap: [Clone__pmap]
}


type Paper__not_person {
  person: Person
  not_person__OF__paper: Paper
}


type Strain__phenotype_not_observed {
  phenotype: Phenotype
  phenotype_not_observed__OF__strain: Strain
}


type Protein__database {
  field: Database_field
  database: Database
  accession: String
  database__OF__protein: Protein
}


type Gene__corresponding_transcript {
  transcript: Transcript
  corresponding_transcript__OF__gene: Gene
}


type Sage_tag {
  anchoring_enzyme: Motif
  evidence: String
  id: String
  tag_length: Int
  pseudogene: [Sage_tag__pseudogene]
  unambiguously_mapped: Boolean
  remark: [Sage_tag__remark]
  results: [Sage_tag__results]
  predicted_cds: [Sage_tag__predicted_cds]
  tag_sequence: String
  gene: [Sage_tag__gene]
  most_three_prime: Boolean
  transcript: [Sage_tag__transcript]
  sage_tag__OF__expression_cluster__VIA__sage_tag: [Expression_cluster__sage_tag]
}


type Pos_neg_data {
  id: String
  clone_1: Clone
  locus_1: Pos_neg_data__locus_1
  locus_2: Pos_neg_data__locus_2
  clone_2: Clone
  calculation: String
  allele_1: Variation
  allele_2: Variation
  results: String
  rearrangement_2: Rearrangement
  gene_1: Pos_neg_data__gene_1
  evidence: String
  remark: [Pos_neg_data__remark]
  gene_2: Pos_neg_data__gene_2
  mapper: [Author]
  rearrangement_1: Rearrangement
  date: String
  laboratory: [Laboratory]
  genotype: String
  pos_neg_data__OF__rearrangement: [Rearrangement]
}


type Construct__driven_by_gene {
  gene: Gene
  driven_by_gene__OF__construct: Construct
}


type Clone {
  vector_type: [String]
  ligation: [String]
  in_strain: [Strain]
  accession_number: String
  gel: [Clone__gel]
  finished: String
  flag: Int
  pattern: [String]
  seq_length: Int
  outside_rearr: [Clone__outside_rearr]
  primer2: [String]
  shotgun: String
  autopos: Boolean
  insert_length: Int
  vaxmap: Float
  species: Species
  pcr_remark: [String]
  mutation: [String]
  url: [String]
  in_situ: Clone__in_situ
  produced_by_person: [Person]
  general_remark: [String]
  contains: [Clone__contains]
  negative_gene: [Clone__negative_gene]
  contained_in: [Clone]
  y_remark: [String]
  database: [Clone__database]
  backbone_length: Int
  location: [Clone__location]
  gel_number: Int
  positive_variation: [Clone__positive_variation]
  canon_for_cosmid: Boolean
  id: String
  negative_locus: [Clone__negative_locus]
  reference: [Clone__reference]
  does_not_hybridize_to: [Clone__does_not_hybridize_to]
  hybridizes_weak: [Clone__hybridizes_weak]
  positive_gene: [Clone__positive_gene]
  primer1: [String]
  resistance_marker: [String]
  type: Clone__type
  canonical_for: [Clone__canonical_for]
  cosmid_grid: Boolean
  inside_rearr: [Clone__inside_rearr]
  pmap: Clone__pmap
  bands: Clone__bands
  hybridizes_to: [Clone__hybridizes_to]
  produced_by_author: [Author]
  evidence: String
  map: [Clone__map]
  gel_length: Float
  best_match: String
  derived_from: [Clone]
  chromosome: Map
  clone_1__OF__pos_neg_data: [Pos_neg_data]
  clone__OF__sequence: [Sequence]
  clone__OF__pcr_product: [Pcr_product]
  clone_2__OF__pos_neg_data: [Pos_neg_data]
  clone__OF__grid_row: [String]
  hybridizes_to__OF__grid_data: [Grid_data]
  clone__OF__map_position__VIA__with_clone: [Map_position__with_clone]
  clone__OF__grid_data: [Grid_data]
  clone__OF__sequence__VIA__clone_left_end: [Sequence__clone_left_end]
  clone__OF__expr_pattern: [Expr_pattern]
  clone__OF__clone__VIA__contains: [Clone__contains]
  clone__OF__sequence__VIA__clone_right_end: [Sequence__clone_right_end]
  clone__OF__clone__VIA__hybridizes_weak: [Clone__hybridizes_weak]
  clone__OF__mixed_grid_row__VIA__clone: [Mixed_grid_row__clone]
  clone_end_seq_read__OF__sequence: [Sequence]
  clone__OF__clone__VIA__hybridizes_to: [Clone__hybridizes_to]
  clone__OF__construct: [Construct]
  clone__OF__clone__VIA__does_not_hybridize_to: [Clone__does_not_hybridize_to]
  contained_in__OF__clone: [Clone]
  derived_from__OF__clone: [Clone]
  clone__OF__clone__VIA__canonical_for: [Clone__canonical_for]
  clone__OF__rnai: [Rnai]
  positive_product__OF__grid_data: [Grid_data]
}


type Transcript__database {
  accession: String
  database: Database
  field: Database_field
  database__OF__transcript: Transcript
}


type Phenotype_info__control_strain {
  strain: Strain
  control_strain__OF__phenotype_info: String
}


type Variation__deletion {
  text: String
  deletion__OF__variation: Variation
}


type Expr_pattern__db_info {
  database: Database
  field: Database_field
  accession: String
  db_info__OF__expr_pattern: Expr_pattern
}


type Feature__defined_by_paper {
  paper: Paper
  defined_by_paper__OF__feature: Feature
}


type Phenotype_info__strain {
  strain: Strain
  strain__OF__phenotype_info: String
}


type Evidence__accession_evidence {
  database: Database
  accession: String
  accession_evidence__OF__evidence: String
}


type Anatomy_term {
  database: [Anatomy_term__database]
  remark: [Anatomy_term__remark]
  go_term: [Anatomy_term__go_term]
  cell_type: [String]
  ancestor: [Anatomy_term]
  descendent_of_p: [Anatomy_term]
  parent_term: Anatomy_term
  male_origin: [Anatomy_term]
  neurodata: [Anatomy_term__neurodata]
  term: Anatomy_term__term
  lineage_name: [String]
  part_of_p: [Anatomy_term]
  id: String
  go_ancestor: [Go_term]
  go_descendent: [Go_term]
  nucleus: [Anatomy_term]
  program: [String]
  definition: Anatomy_term__definition
  embryo_division_time: [String]
  xunion_of_p: [Anatomy_term]
  cell_p: [Anatomy_term]
  desc_in_male_p: [Anatomy_term]
  equivalence_origin: [Anatomy_term]
  herm_origin: [Anatomy_term]
  desc_in_herm_p: [Anatomy_term]
  life_stage: [Life_stage]
  expr_descendent: [Expr_pattern]
  reconstruction: [Anatomy_term__reconstruction]
  develops_from_p: [Anatomy_term]
  contained_in: [Anatomy_term]
  is_a_p: [Anatomy_term]
  synonym: [Anatomy_term__synonym]
  expr_ancestor: [Expr_pattern]
  link_diagram: [String]
  anatomy_term__OF__reconstruction: [Reconstruction]
  anatomy_term__OF__expression_cluster__VIA__anatomy_term: [Expression_cluster__anatomy_term]
  anatomy_term__OF__qualifier: [String]
  ancestor__OF__anatomy_term: [Anatomy_term]
  male_origin__OF__anatomy_term: [Anatomy_term]
  parent_term__OF__anatomy_term: [Anatomy_term]
  descendent_of_p__OF__anatomy_term: [Anatomy_term]
  anatomy__OF__picture: [Picture]
  anatomy_term__OF__wbprocess__VIA__anatomy_term: [Wbprocess__anatomy_term]
  part_of_p__OF__anatomy_term: [Anatomy_term]
  anatomy_term__OF__expr_pattern__VIA__anatomy_term: [Expr_pattern__anatomy_term]
  nucleus__OF__anatomy_term: [Anatomy_term]
  anatomy_term__OF__expr_pattern__VIA__not_in_anatomy_term: [Expr_pattern__not_in_anatomy_term]
  anatomy_term__OF__sequence: [Sequence]
  xunion_of_p__OF__anatomy_term: [Anatomy_term]
  cell_p__OF__anatomy_term: [Anatomy_term]
  anatomy_term__OF__anatomy_term__VIA__neurodata: [Anatomy_term__neurodata]
  desc_in_male_p__OF__anatomy_term: [Anatomy_term]
  anatomy_term__OF__mass_spec_experiment: [Mass_spec_experiment]
  equivalence_origin__OF__anatomy_term: [Anatomy_term]
  herm_origin__OF__anatomy_term: [Anatomy_term]
  desc_in_herm_p__OF__anatomy_term: [Anatomy_term]
  anatomy_term__OF__anatomy_function__VIA__involved: [Anatomy_function__involved]
  anatomy_term__OF__go_annotation__VIA__anatomy_relation: [Go_annotation__anatomy_relation]
  anatomy_term__OF__anatomy_function__VIA__not_involved: [Anatomy_function__not_involved]
  anatomy_term__OF__treenode: [Treenode]
  anatomy_term__OF__gr_condition: [String]
  contained_in__OF__anatomy_term: [Anatomy_term]
  develops_from_p__OF__anatomy_term: [Anatomy_term]
  anatomy_term__OF__phenotype_info__VIA__anatomy_term: [Phenotype_info__anatomy_term]
  tissue__OF__condition: [Condition]
  is_a_p__OF__anatomy_term: [Anatomy_term]
  anatomy_term__OF__life_stage: [Life_stage]
}


type Two_point_data__sex_cis {
  all: Int
  x: Int
  sex_cis__OF__two_point_data: Two_point_data
}


type Multi_pt_data__gene_a {
  variation: Variation
  gene: Gene
  gene_a__OF__multi_pt_data: Multi_pt_data
}


type Molecule__database {
  database_field: Database_field
  database: Database
  text: String
  database__OF__molecule: Molecule
}


type Anatomy_term__database {
  accession: String
  field: Database_field
  database: Database
  database__OF__anatomy_term: Anatomy_term
}


type Gene__map {
  map: Map
  map__OF__gene: Gene
}


type Wbprocess {
  ncbi_taxonomy: [String]
  life_stage: [Wbprocess__life_stage]
  remark: [Wbprocess__remark]
  summary: Wbprocess__summary
  go_term: [Wbprocess__go_term]
  specialisation_of: [Wbprocess]
  do_term: [Wbprocess__do_term]
  marker_construct: [Construct]
  database: [Wbprocess__database]
  historical_gene: [Wbprocess__historical_gene]
  phenotype: [Wbprocess__phenotype]
  reference: [Paper]
  anatomy_term: [Wbprocess__anatomy_term]
  id: String
  expression_cluster: [Wbprocess__expression_cluster]
  public_name: String
  movie: [Wbprocess__movie]
  gene_cluster: [Wbprocess__gene_cluster]
  interaction: [Wbprocess__interaction]
  gene: [Wbprocess__gene]
  molecule: [Wbprocess__molecule]
  other_name: [String]
  specialisation_of__OF__wbprocess: [Wbprocess]
  wbprocess__OF__picture__VIA__wbprocess: [Picture__wbprocess]
}


type Multi_pt_data__gene_b {
  variation: Variation
  gene: Gene
  gene_b__OF__multi_pt_data: Multi_pt_data
}


type Strain__geolocation {
  latitude: Float
  longitude: Float
  geolocation__OF__strain: Strain
}


type Laboratory__remark {
  text: String
  remark__OF__laboratory: Laboratory
}


type Transgene__map {
  map: Map
  map__OF__transgene: Transgene
}


type Transcript__reference {
  paper: Paper
  reference__OF__transcript: Transcript
}


type Anatomy_function__remark {
  text: String
  remark__OF__anatomy_function: Anatomy_function
}


type Variation__reference_strain_digest {
  site: String
  enzyme: String
  band_size: String
  reference_strain_digest__OF__variation: Variation
}


type Rearrangement__mutagen {
  name: String
  dose: String
  mutagen__OF__rearrangement: Rearrangement
}


type Wbprocess__database {
  database: Database
  field: Database_field
  accession: String
  database__OF__wbprocess: Wbprocess
}


type Phenotype_info__anatomy_term {
  anatomy_term: Anatomy_term
  pato_term: Pato_term
  anatomy_term__OF__phenotype_info: String
}


type Oligo_set__overlaps_pseudogene {
  pseudogene: Pseudogene
  overlaps_pseudogene__OF__oligo_set: Oligo_set
}


type Interaction__rearrangement {
  rearrangement: Rearrangement
  rearrangement__OF__interaction: Interaction
}


type Construct__historical_gene {
  gene: Gene
  text: String
  historical_gene__OF__construct: Construct
}


type Microarray_experiment__remark {
  text: String
  remark__OF__microarray_experiment: Microarray_experiment
}


type Go_annotation__molecule_relation {
  text: String
  molecule: Molecule
  molecule_relation__OF__go_annotation: Go_annotation
}


type Map__centre {
  max: Float
  min: Float
  centre__OF__map: Map
}


type Variation__transcript {
  transcript: Transcript
  transcript__OF__variation: Variation
}


type Two_point_data__one_all {
  x: Int
  all: Int
  one_all__OF__two_point_data: Two_point_data
}


type Mixed_grid_row__clone {
  clone: Clone
  clone__OF__mixed_grid_row: String
}


type Sage_tag__transcript {
  transcript: Transcript
  transcript__OF__sage_tag: Sage_tag
}


type Expr_pattern__gene {
  gene: Gene
  gene__OF__expr_pattern: Expr_pattern
}


type Transgene__marker_for {
  text: String
  marker_for__OF__transgene: Transgene
}


type Pseudogene__last_reviewed {
  datetype: String
  person: Person
  last_reviewed__OF__pseudogene: Pseudogene
}


type Variation__hermaphrodite_mating_efficiency {
  value: String
  hermaphrodite_mating_efficiency__OF__variation: Variation
}


type Feature_data {
  id: String
}


type Sequence__archived {
  datetype: String
  disk: String
  archived__OF__sequence: Sequence
}


type Wbprocess__movie {
  movie: Movie
  movie__OF__wbprocess: Wbprocess
}


type Transcript__db_remark {
  text: String
  db_remark__OF__transcript: Transcript
}


type Species {
  id: String
  g_species: String
  assembly: [Sequence_collection]
  short_name: String
  ncbi_taxonomy: Int
  other_name: [String]
  species__OF__transcription_factor: [Transcription_factor]
  species__OF__phenotype_info__VIA__pathogen: [Phenotype_info__pathogen]
  species__OF__gene__VIA__paralog: [Gene__paralog]
  species__OF__molecule__VIA__essential_for: [Molecule__essential_for]
  species__OF__gene: [Gene]
  species_in_analysis__OF__analysis: [Analysis]
  species__OF__strain: [Strain]
  species__OF__sequence_collection: [Sequence_collection]
  species__OF__picture: [Picture]
  species__OF__expr_pattern: [Expr_pattern]
  species__OF__variation: [Variation]
  species__OF__microarray_experiment: [Microarray_experiment]
  species__OF__protein: [Protein]
  species__OF__cds: [Cds]
  species__OF__pcr_product: [Pcr_product]
  species__OF__library: [Library]
  species__OF__pseudogene: [Pseudogene]
  species__OF__rnai: [Rnai]
  species__OF__transgene: [Transgene]
  species__OF__transcript: [Transcript]
  species__OF__locus: [Locus]
  species__OF__paper__VIA__species: [Paper__species]
  species__OF__expression_cluster: [Expression_cluster]
  species__OF__expr_profile: [Expr_profile]
  species__OF__clone: [Clone]
  species__OF__sage_experiment: [Sage_experiment]
  species__OF__gene__VIA__ortholog: [Gene__ortholog]
  species__OF__gene__VIA__disease_relevance: [Gene__disease_relevance]
  species__OF__molecule__VIA__endogenous_in: [Molecule__endogenous_in]
  species__OF__gene__VIA__disease_experimental_model: [Gene__disease_experimental_model]
  species__OF__operon: [Operon]
  species__OF__gene__VIA__disease_potential_model: [Gene__disease_potential_model]
  species__OF__transposon: [Transposon]
  species__OF__oligo_set: [Oligo_set]
  species__OF__reference: [Reference]
  species__OF__condition: [Condition]
  species__OF__sequence: [Sequence]
  species__OF__feature: [Feature]
  species__OF__go_annotation__VIA__interacting_species: [Go_annotation__interacting_species]
  species__OF__rearrangement: [Rearrangement]
  associated_organisms__OF__strain: [Strain]
  species__OF__microarray_results: [Microarray_results]
  species__OF__mass_spec_experiment: [Mass_spec_experiment]
}


type Go_annotation {
  interacting_species: [Go_annotation__interacting_species]
  go_term: Go_term
  gene_relation: [Go_annotation__gene_relation]
  contributed_by: Analysis
  annotation_relation: [String]
  inferred_from_go_term: [Go_term]
  phenotype: [Phenotype]
  interacting_gene: [Gene]
  annotation_isoform: [Go_annotation__annotation_isoform]
  database: [Go_annotation__database]
  date_last_updated: String
  life_stage_relation: [Go_annotation__life_stage_relation]
  reference: Paper
  anatomy_relation: [Go_annotation__anatomy_relation]
  id: String
  molecule_relation: [Go_annotation__molecule_relation]
  go_code: Go_code
  variation: [Variation]
  motif: [Motif]
  go_term_relation: [Go_annotation__go_term_relation]
  go_reference: [Go_annotation__go_reference]
  rnai_result: [Rnai]
  gene: Gene
}


type Pseudogene {
  source_exons: [Pseudogene__source_exons]
  confidential_remark: [String]
  detailed_description: [Pseudogene__detailed_description]
  transcribed: String
  db_remark: [Pseudogene__db_remark]
  processed_pseudogene: String
  remark: [Pseudogene__remark]
  type: Pseudogene__type
  database: [Pseudogene__database]
  evidence: String
  species: Species
  fragment: String
  truncated_3: String
  rnaseq: [Pseudogene__rnaseq]
  from_laboratory: Laboratory
  truncated_5: String
  concise_description: [Pseudogene__concise_description]
  last_reviewed: Pseudogene__last_reviewed
  corresponding_pcr_product: [Pcr_product]
  brief_identification: Pseudogene__brief_identification
  frameshifts: Int
  id: String
  unprocessed_pseudogene: String
  provisional_description: [Pseudogene__provisional_description]
  isoform: String
  matching_cdna: [Pseudogene__matching_cdna]
  pseudogene__OF__transposon__VIA__corresponding_pseudogene: [Transposon__corresponding_pseudogene]
  corresponding_pseudogene_history__OF__gene: [Gene]
  pseudogene__OF__rnai__VIA__pseudogene: [Rnai__pseudogene]
  pseudogene__OF__sage_tag__VIA__pseudogene: [Sage_tag__pseudogene]
  pseudogene__OF__feature__VIA__associated_with_pseudogene: [Feature__associated_with_pseudogene]
  pseudogene__OF__microarray_results__VIA__pseudogene: [Microarray_results__pseudogene]
  pseudogene__OF__gene__VIA__corresponding_pseudogene: [Gene__corresponding_pseudogene]
  pseudogene__OF__variation__VIA__pseudogene: [Variation__pseudogene]
  pseudogene__OF__oligo_set__VIA__overlaps_pseudogene: [Oligo_set__overlaps_pseudogene]
}


type Antibody__antibody_for_disease {
  do_term: Do_term
  antibody_for_disease__OF__antibody: Antibody
}


type Variation__gene {
  gene: Gene
  gene__OF__variation: Variation
}


type Role__highschool {
  to: String
  from: String
  highschool__OF__role: String
}


type Feature__source_location {
  end: Int
  sequence: Sequence
  version: Int
  start: Int
  source_location__OF__feature: Feature
}


type Multi_pt_data__gene {
  gene: Gene
  variation: Variation
  gene__OF__multi_pt_data: Multi_pt_data
}


type Clone__pmap {
  pos2: Int
  pos1: Int
  contig: Contig
  pmap__OF__clone: Clone
}


type Interaction__historical_gene {
  text: String
  gene: Gene
  historical_gene__OF__interaction: Interaction
}


type Feature__associated_with_transcript {
  transcript: Transcript
  associated_with_transcript__OF__feature: Feature
}


type Clone__canonical_for {
  start: Int
  stop: Int
  clone: Clone
  canonical_for__OF__clone: Clone
}


type Rearrangement {
  author: [Author]
  mutagen: Rearrangement__mutagen
  locus_outside: [Rearrangement__locus_outside]
  source_rearrangement: Rearrangement
  two_point: [Two_point_data]
  rearr_outside: [Rearrangement]
  date: String
  map: [Rearrangement__map]
  locus_inside: [Rearrangement__locus_inside]
  person: [Person]
  url: [String]
  other_name: [String]
  balances: [Rearrangement__balances]
  strain: [Strain]
  variation: [Variation]
  rearr_inside: [Rearrangement]
  type: [String]
  gene_inside: [Rearrangement__gene_inside]
  phenotype_not_observed: [Rearrangement__phenotype_not_observed]
  location: [Rearrangement__location]
  marked_by_other: [String]
  remark: [Rearrangement__remark]
  evidence: String
  gene_outside: [Rearrangement__gene_outside]
  reference: [Rearrangement__reference]
  multi_point: [Multi_pt_data]
  marked_by_variation: [Variation]
  hide_under: Rearrangement
  phenotype: [Rearrangement__phenotype]
  species: Species
  reference_strain: [Strain]
  pos_neg_data: [Pos_neg_data]
  marked_by_transgene: [Transgene]
  id: String
  rearrangement__OF__multi_counts__VIA__rearrangement: [Multi_counts__rearrangement]
  source_rearrangement__OF__rearrangement: [Rearrangement]
  rearrangement_a__OF__multi_pt_data: [Multi_pt_data]
  rearrangement__OF__clone__VIA__outside_rearr: [Clone__outside_rearr]
  rearrangement_1__OF__two_point_data: [Two_point_data]
  rearrangement__OF__clone__VIA__inside_rearr: [Clone__inside_rearr]
  rearrangement_b__OF__multi_pt_data: [Multi_pt_data]
  rearr_outside__OF__rearrangement: [Rearrangement]
  rearrangement__OF__molecule__VIA__affects_phenotype_of_rearrangement: [Molecule__affects_phenotype_of_rearrangement]
  rearrangement__OF__interaction__VIA__rearrangement: [Interaction__rearrangement]
  rearrangement_2__OF__two_point_data: [Two_point_data]
  rearrangement_2__OF__pos_neg_data: [Pos_neg_data]
  hide_under__OF__rearrangement: [Rearrangement]
  rearrangement_1__OF__pos_neg_data: [Pos_neg_data]
  rearr_inside__OF__rearrangement: [Rearrangement]
}


type Phenotype__assay {
  text: String
  assay__OF__phenotype: Phenotype
}


type Anatomy_function {
  id: String
  reference: Paper
  involved: [Anatomy_function__involved]
  assay: [Anatomy_function__assay]
  not_involved: [Anatomy_function__not_involved]
  remark: [Anatomy_function__remark]
  gene: Anatomy_function__gene
  phenotype: Anatomy_function__phenotype
}


type Rnai__gene {
  gene: Gene
  gene__OF__rnai: Rnai
}


type Movie__remark {
  text: String
  remark__OF__movie: Movie
}


type Locus__snp_assay {
  text: String
  pcr_product: Pcr_product
  snp_assay__OF__locus: Locus
}


type Phenotype_info__caused_by_gene {
  gene: Gene
  caused_by_gene__OF__phenotype_info: String
}


type Transgene__reference {
  paper: Paper
  reference__OF__transgene: Transgene
}


type Anatomy_function__assay {
  ao_code: Ao_code
  condition: Condition
  assay__OF__anatomy_function: Anatomy_function
}


type Construct {
  three_prime_utr: [Construct__three_prime_utr]
  driven_by_gene: [Construct__driven_by_gene]
  laboratory: [Construct__laboratory]
  dna_text: [String]
  database: [Construct__database]
  person: [Person]
  other_name: [String]
  selection_marker: [String]
  evidence: String
  recombinant_site: [String]
  sequence_feature: [Feature]
  public_name: [String]
  clone: [Clone]
  transgene_construct: [Transgene]
  construction_summary: [String]
  remark: [Construct__remark]
  transgene_coinjection: [Transgene]
  fusion_reporter: [String]
  gene: [Construct__gene]
  construct_for_disease: [Construct__construct_for_disease]
  type_of_construct: [String]
  purification_tag: [String]
  id: String
  other_reporter: [String]
  historical_gene: [Construct__historical_gene]
  summary: Construct__summary
  reference: [Paper]
  construct__OF__interactor_info: [String]
  construct__OF__expr_pattern: [Expr_pattern]
  derived_from_construct__OF__variation: [Variation]
  marker_construct__OF__wbprocess: [Wbprocess]
  unaffiliated_construct__OF__interaction: [Interaction]
}


type Antibody__remark {
  text: String
  remark__OF__antibody: Antibody
}


type Picture__remark {
  text: String
  remark__OF__picture: Picture
}


type Cds__database {
  field: Database_field
  database: Database
  accession: String
  database__OF__cds: Cds
}


type Role__sabbatical {
  from: String
  to: String
  sabbatical__OF__role: String
}


type Variation {
  author: [Author]
  cgh_deleted_probes: Variation__cgh_deleted_probes
  snp: Boolean
  phenotype_remark: [Variation__phenotype_remark]
  reference_strain_digest: [Variation__reference_strain_digest]
  remark: [Variation__remark]
  analysis: [Analysis]
  allele: Boolean
  hermaphrodite_mating_efficiency: Variation__hermaphrodite_mating_efficiency
  split_into: [Variation]
  evidence: String
  date: [String]
  derived_from_variation: [Variation]
  map: [Variation__map]
  nemagenetag_consortium_allele: Boolean
  deletion_verification: [Variation__deletion_verification]
  expr_pattern: [Variation__expr_pattern]
  polymorphic_strain_digest: [Variation__polymorphic_strain_digest]
  flanking_sequences: Variation__flanking_sequences
  derived_from_construct: [Construct]
  id: String
  text: String
  phenotype: [Variation__phenotype]
  phenotype_not_observed: [Variation__phenotype_not_observed]
  merged_into: Variation
  strain: [Variation__strain]
  corresponding_transgene: Transgene
  detection_method: [String]
  natural_variant: Boolean
  predicted_cds: [Variation__predicted_cds]
  insertion: Variation__insertion
  confirmed_snp: Boolean
  mapping_target: Sequence
  person: [Person]
  transcript: [Variation__transcript]
  possibly_affects: [Variation__possibly_affects]
  species: Species
  nature_of_variation: String
  database: [Variation__database]
  interpolated_map_position: Variation__interpolated_map_position
  ko_consortium_allele: Boolean
  laboratory: [Laboratory]
  other_name: [String]
  mutagen: Variation__mutagen
  forward_genetics: [Variation__forward_genetics]
  pseudogene: [Variation__pseudogene]
  source_location: Variation__source_location
  reference: [Variation__reference]
  engineered_allele: Boolean
  substitution: Variation__substitution
  deletion: Variation__deletion
  pcr_product: [Pcr_product]
  gene: [Variation__gene]
  nbp_allele: Boolean
  public_name: String
  transposon_insertion: [Transposon_family]
  transposon_excision: [Transposon_family]
  male_mating_efficiency: Variation__male_mating_efficiency
  seqstatus: String
  linked_to: [Variation]
  reverse_genetics: [Variation__reverse_genetics]
  tandem_duplication: String
  predicted_snp: Boolean
  production_method: [String]
  status: Variation__status
  gene_class: [Gene_class]
  variation__OF__multi_pt_data__VIA__gene_b: [Multi_pt_data__gene_b]
  variation__OF__two_point_data__VIA__gene_1: [Two_point_data__gene_1]
  variation__OF__two_point_data__VIA__gene_2: [Two_point_data__gene_2]
  variation__OF__multi_pt_data__VIA__gene_a: [Multi_pt_data__gene_a]
  unaffiliated_variation__OF__interaction: [Interaction]
  variation__OF__multi_counts__VIA__allele: [Multi_counts__allele]
  allele_a__OF__multi_pt_data: [Multi_pt_data]
  allele_b__OF__multi_pt_data: [Multi_pt_data]
  variation__OF__clone__VIA__positive_variation: [Clone__positive_variation]
  variation__OF__gene__VIA__reference_allele: [Gene__reference_allele]
  alleles__OF__laboratory: [Laboratory]
  split_into__OF__variation: [Variation]
  variation__OF__two_point_data__VIA__locus_1: [Two_point_data__locus_1]
  variation__OF__feature__VIA__associated_with_variation: [Feature__associated_with_variation]
  variation__OF__pos_neg_data__VIA__locus_2: [Pos_neg_data__locus_2]
  variation__OF__go_annotation: [Go_annotation]
  variation__OF__movie__VIA__variation: [Movie__variation]
  variation__OF__pos_neg_data__VIA__locus_1: [Pos_neg_data__locus_1]
  variation__OF__two_point_data__VIA__locus_2: [Two_point_data__locus_2]
  allele_2__OF__two_point_data: [Two_point_data]
  variation__OF__interaction__VIA__variation_interactor: [Interaction__variation_interactor]
  allele_1__OF__two_point_data: [Two_point_data]
  variation__OF__rearrangement: [Rearrangement]
  variation__OF__multi_pt_data__VIA__gene: [Multi_pt_data__gene]
  derived_from_variation__OF__variation: [Variation]
  allele_1__OF__pos_neg_data: [Pos_neg_data]
  allele_2__OF__pos_neg_data: [Pos_neg_data]
  linked_to__OF__variation: [Variation]
  variation_evidence__OF__evidence: [String]
  merged_into__OF__variation: [Variation]
  variation__OF__multi_pt_data__VIA__locus_b: [Multi_pt_data__locus_b]
  variation__OF__multi_pt_data__VIA__locus_a: [Multi_pt_data__locus_a]
  variation__OF__molecule__VIA__affects_phenotype_of_variation: [Molecule__affects_phenotype_of_variation]
  marked_by_variation__OF__rearrangement: [Rearrangement]
  variation__OF__pos_neg_data__VIA__gene_1: [Pos_neg_data__gene_1]
  variation__OF__pos_neg_data__VIA__gene_2: [Pos_neg_data__gene_2]
  variation__OF__multi_pt_data__VIA__locus: [Multi_pt_data__locus]
}


type Rnai__remark {
  text: String
  remark__OF__rnai: Rnai
}


type Pcr_product {
  clone: [Clone]
  id: String
  oligo: [Pcr_product__oligo]
  species: Species
  left_mapping_primer: String
  amplified: [Int]
  remark: [Pcr_product__remark]
  right_mapping_primer: String
  assay_conditions: [Longtext]
  from_laboratory: Laboratory
  pcr_product__OF__variation: [Variation]
  pcr_product__OF__microarray_results: [Microarray_results]
  pcr_product__OF__rnai: [Rnai]
  pcr_product__OF__interaction__VIA__pcr_interactor: [Interaction__pcr_interactor]
  corresponding_pcr_product__OF__cds: [Cds]
  corresponding_pcr_product__OF__transcript: [Transcript]
  corresponding_pcr_product__OF__pseudogene: [Pseudogene]
  pcr_product__OF__locus__VIA__snp_assay: [Locus__snp_assay]
}


type Paper__remark {
  text: String
  remark__OF__paper: Paper
}


type Library {
  vector: [Sequence]
  id: String
  species: Species
  tissue: [String]
  description: [String]
  strain: Strain
  life_stage: Life_stage
  database: [Library__database]
  library__OF__sequence: [Sequence]
}


type Anatomy_term__go_term {
  go_term: Go_term
  ao_code: Ao_code
  go_term__OF__anatomy_term: Anatomy_term
}


type Molecule__affects_phenotype_of_strain {
  phenotype: Phenotype
  strain: Strain
  affects_phenotype_of_strain__OF__molecule: Molecule
}


type Go_annotation__annotation_isoform {
  text: String
  protein: Protein
  annotation_isoform__OF__go_annotation: Go_annotation
}


type Ao_code__remark {
  text: String
  remark__OF__ao_code: Ao_code
}


type Sequence_collection__database {
  database_field: Database_field
  text: String
  database: Database
  database__OF__sequence_collection: Sequence_collection
}


type Dna {
  sequence: String
  id: String
  dna__OF__sequence__VIA__dna: [Sequence__dna]
}


type Sequence__db_remark {
  text: String
  db_remark__OF__sequence: Sequence
}


type Interaction__sequence_interactor {
  sequence: Sequence
  sequence_interactor__OF__interaction: Interaction
}


type Molecule__use {
  text: String
  use__OF__molecule: Molecule
}


type Interaction__interactor_overlapping_cds {
  cds: Cds
  interactor_overlapping_cds__OF__interaction: Interaction
}


type Variation__expr_pattern {
  expr_pattern: Expr_pattern
  expr_pattern__OF__variation: Variation
}


type Interaction__pcr_interactor {
  pcr_product: Pcr_product
  pcr_interactor__OF__interaction: Interaction
}


type Person__database {
  database: Database
  field: Database_field
  accession: String
  database__OF__person: Person
}


type Map_position__with_locus {
  locus: Locus
  with_locus__OF__map_position: String
}


type Expr_pattern__historical_gene {
  text: String
  gene: Gene
  historical_gene__OF__expr_pattern: Expr_pattern
}


type Database_field {
  id: String
  remark: [String]
  field__OF__pseudogene__VIA__database: [Pseudogene__database]
  field__OF__strain__VIA__database: [Strain__database]
  database_field__OF__sequence_collection__VIA__database: [Sequence_collection__database]
  field__OF__anatomy_term__VIA__database: [Anatomy_term__database]
  field__OF__wbprocess__VIA__database: [Wbprocess__database]
  field__OF__person__VIA__database: [Person__database]
  field__OF__paper__VIA__database: [Paper__database]
  field__OF__library__VIA__database: [Library__database]
  field__OF__do_term__VIA__database: [Do_term__database]
  field__OF__motif__VIA__database: [Motif__database]
  database_field__OF__go_annotation__VIA__database: [Go_annotation__database]
  field__OF__cds__VIA__database: [Cds__database]
  field__OF__protein__VIA__database: [Protein__database]
  field__OF__construct__VIA__database: [Construct__database]
  database_field__OF__homology_group__VIA__database: [Homology_group__database]
  database_field__OF__molecule__VIA__database: [Molecule__database]
  field__OF__sequence__VIA__database: [Sequence__database]
  field__OF__movie__VIA__db_info: [Movie__db_info]
  field__OF__expr_pattern__VIA__db_info: [Expr_pattern__db_info]
  field__OF__structure_data__VIA__database: [Structure_data__database]
  field__OF__analysis__VIA__database: [Analysis__database]
  field__OF__transcript__VIA__database: [Transcript__database]
  database_field__OF__go_annotation__VIA__go_reference: [Go_annotation__go_reference]
  field__OF__picture__VIA__article_url: [Picture__article_url]
  field__OF__interaction__VIA__database: [Interaction__database]
  field__OF__rnai__VIA__database: [Rnai__database]
  field__OF__gene__VIA__database: [Gene__database]
  field__OF__variation__VIA__database: [Variation__database]
  field__OF__clone__VIA__database: [Clone__database]
}


type Feature__defined_by_analysis {
  version: Int
  analysis: Analysis
  defined_by_analysis__OF__feature: Feature
}


type Gene__corresponding_transposon {
  transposon: Transposon
  corresponding_transposon__OF__gene: Gene
}


type Mass_spec_peptide__mass_spec_experiments {
  mass_spec_experiment: Mass_spec_experiment
  mass_spec_experiments__OF__mass_spec_peptide: Mass_spec_peptide
}


type Role__unknown {
  to: String
  from: String
  unknown__OF__role: String
}


type Cds__detailed_description {
  text: String
  detailed_description__OF__cds: Cds
}


type Phenotype_info__ease_of_scoring {
  value: String
  ease_of_scoring__OF__phenotype_info: String
}


type Microarray_results__min {
  value: Float
  experiment: Microarray_experiment
  min__OF__microarray_results: Microarray_results
}


type Transcript__remark {
  text: String
  remark__OF__transcript: Transcript
}


type Analysis__database {
  database: Database
  field: Database_field
  accession: String
  database__OF__analysis: Analysis
}


type Multi_pt_data__remark {
  text: String
  remark__OF__multi_pt_data: Multi_pt_data
}


type Sage_experiment {
  sample: Condition
  reference: [Paper]
  id: String
  remark: [Sage_experiment__remark]
  species: Species
  sage_experiment__OF__sage_tag__VIA__results: [Sage_tag__results]
}


type Db__sys {
  reId: String
  partiallyIndexed: Boolean
}


type Transposon__ltr_region {
  start: Int
  end: Int
  ltr_region__OF__transposon: Transposon
}


type Antibody__summary {
  text: String
  summary__OF__antibody: Antibody
}


type Two_point_data__dom_selected {
  wt: Int
  x: Int
  dom_selected__OF__two_point_data: Two_point_data
}


type Wbprocess__do_term {
  do_term: Do_term
  do_term__OF__wbprocess: Wbprocess
}


type Oligo_set__remark {
  text: String
  remark__OF__oligo_set: Oligo_set
}


type Antibody__gene {
  gene: Gene
  gene__OF__antibody: Antibody
}


type Cds__cds_predicted_by {
  method: Method
  score: Float
  cds_predicted_by__OF__cds: Cds
}


type Pseudogene__db_remark {
  text: String
  db_remark__OF__pseudogene: Pseudogene
}


type Molecular_change__missense {
  int: Int
  text: String
  missense__OF__molecular_change: String
}


type Role__undergrad {
  from: String
  to: String
  undergrad__OF__role: String
}


type Map_position__multi_ends {
  min: Float
  max: Float
  multi_ends__OF__map_position: String
}


type Variation__forward_genetics {
  text: String
  forward_genetics__OF__variation: Variation
}


type Multi_pt_data__locus_b {
  locus: Locus
  variation: Variation
  locus_b__OF__multi_pt_data: Multi_pt_data
}


type Multi_pt_data__locus_a {
  variation: Variation
  locus: Locus
  locus_a__OF__multi_pt_data: Multi_pt_data
}


type Operon__merged_into {
  operon: Operon
  merged_into__OF__operon: Operon
}


type Variation__reverse_genetics {
  text: String
  reverse_genetics__OF__variation: Variation
}


type Sequence__from_database {
  database: Database
  version: Int
  from_database__OF__sequence: Sequence
}


type Map {
  title: String
  unit: String
  inherits_from_map: Map
  centre: Map__centre
  id: String
  non_graphic: Boolean
  author: [String]
  flipped: Boolean
  map: [Map__map]
  no_cache: Boolean
  embl_chromosome: String
  main_locus: [Gene]
  includes: [Map]
  extent: Map__extent
  map__OF__contig__VIA__map: [Contig__map]
  map__OF__clone__VIA__map: [Clone__map]
  map__OF__gene__VIA__map: [Gene__map]
  map__OF__gene__VIA__interpolated_map_position: [Gene__interpolated_map_position]
  inherits_from_map__OF__map: [Map]
  map__OF__locus__VIA__map: [Locus__map]
  map__OF__rearrangement__VIA__map: [Rearrangement__map]
  map__OF__rearrangement__VIA__balances: [Rearrangement__balances]
  map__OF__transgene__VIA__map: [Transgene__map]
  map__OF__sequence__VIA__interpolated_map_position: [Sequence__interpolated_map_position]
  map__OF__sequence__VIA__map: [Sequence__map]
  map__OF__variation__VIA__interpolated_map_position: [Variation__interpolated_map_position]
  map__OF__map__VIA__map: [Map__map]
  includes__OF__map: [Map]
  map__OF__variation__VIA__map: [Variation__map]
  chromosome__OF__clone: [Clone]
}


type Movie {
  public_name: String
  rnai: [Rnai]
  reference: [Paper]
  id: String
  description: [String]
  variation: [Movie__variation]
  remark: [Movie__remark]
  expr_pattern: [Expr_pattern]
  db_info: [Movie__db_info]
  movie__OF__wbprocess__VIA__movie: [Wbprocess__movie]
}


type Microarray_results__transcript {
  transcript: Transcript
  transcript__OF__microarray_results: Microarray_results
}


type Keyword {
  id: String
  keyword__OF__sequence: [Sequence]
  keyword__OF__author: [Author]
}


type Transcript__source_exons {
  min: Int
  max: Int
  source_exons__OF__transcript: Transcript
}


type Two_point_data__tested {
  x: Int
  h: Int
  tested__OF__two_point_data: Two_point_data
}


type Pseudogene__type {
  type: String
  type__OF__pseudogene: Pseudogene
}


type Expr_pattern {
  strain: Strain
  genome_editing: [String]
  id: String
  protein: [Protein]
  antibody: [String]
  epic: [String]
  pattern: [String]
  antibody_info: [Antibody]
  species: Species
  go_term: [Expr_pattern__go_term]
  movieurl: [String]
  sequence: [Sequence]
  localizome: [String]
  remark: [Expr_pattern__remark]
  author: [Author]
  subcellular_localization: [String]
  associated_feature: [Expr_pattern__associated_feature]
  in_situ: [String]
  rt_pcr: [String]
  reporter_gene: [String]
  laboratory: [Laboratory]
  anatomy_term: [Expr_pattern__anatomy_term]
  rnaseq: [Analysis]
  reference: [Expr_pattern__reference]
  western: [String]
  historical_gene: [Expr_pattern__historical_gene]
  not_in_life_stage: [Expr_pattern__not_in_life_stage]
  not_in_anatomy_term: [Expr_pattern__not_in_anatomy_term]
  clone: [Clone]
  northern: [String]
  gene: [Expr_pattern__gene]
  tiling_array: [Analysis]
  protein_description: [String]
  curated_by: String
  life_stage: [Expr_pattern__life_stage]
  construct: [Construct]
  not_in_go_term: [Expr_pattern__not_in_go_term]
  reflects_endogenous_expression_of: [Gene]
  db_info: [Expr_pattern__db_info]
  transgene: [Transgene]
  microarray: [Microarray_experiment]
  date: String
  cis_regulatory_element: [String]
  expr_pattern_evidence__OF__evidence: [String]
  expr_descendent__OF__anatomy_term: [Anatomy_term]
  expr_pattern__OF__picture: [Picture]
  unaffiliated_expr_pattern__OF__interaction: [Interaction]
  expr_pattern__OF__variation__VIA__expr_pattern: [Variation__expr_pattern]
  expr_ancestor__OF__anatomy_term: [Anatomy_term]
  expr_pattern__OF__expression_cluster__VIA__expr_pattern: [Expression_cluster__expr_pattern]
  expr_pattern__OF__microarray_results: [Microarray_results]
  expr_pattern__OF__movie: [Movie]
  expr_pattern__OF__interactor_info: [String]
}


type Author {
  phone: [String]
  fax: [String]
  id: String
  mail: [String]
  old_lab: [Laboratory]
  also_known_as: [String]
  keyword: [Keyword]
  full_name: [String]
  paper: [Paper]
  e_mail: [String]
  author__OF__rearrangement: [Rearrangement]
  author__OF__variation: [Variation]
  mapper__OF__multi_pt_data: [Multi_pt_data]
  author__OF__clone__VIA__outside_rearr: [Clone__outside_rearr]
  mapper__OF__grid_data: [Grid_data]
  possibly_publishes_as__OF__person: [Person]
  mapper__OF__two_point_data: [Two_point_data]
  publishes_as__OF__person: [Person]
  author__OF__rearrangement__VIA__locus_inside: [Rearrangement__locus_inside]
  author__OF__clone__VIA__inside_rearr: [Clone__inside_rearr]
  author__OF__rearrangement__VIA__locus_outside: [Rearrangement__locus_outside]
  author__OF__reconstruction: [Reconstruction]
  author__OF__paper__VIA__author: [Paper__author]
  author__OF__clone__VIA__positive_variation: [Clone__positive_variation]
  produced_by_author__OF__clone: [Clone]
  author__OF__clone__VIA__negative_locus: [Clone__negative_locus]
  from_author__OF__sequence: [Sequence]
  author__OF__transgene: [Transgene]
  mapper__OF__pos_neg_data: [Pos_neg_data]
  author__OF__expr_pattern: [Expr_pattern]
  author__OF__evidence__VIA__author_evidence: [Evidence__author_evidence]
  author__OF__mass_spec_experiment: [Mass_spec_experiment]
}


type Operon__remark {
  text: String
  remark__OF__operon: Operon
}


type Variation__source_location {
  sequence: Sequence
  start: Int
  version: Int
  end: Int
  source_location__OF__variation: Variation
}


type Condition {
  id: String
  preparation: [String]
  treatment: [String]
  sex: String
  remark: [Condition__remark]
  life_stage: [Life_stage]
  reference: [Paper]
  temperature: [Float]
  species: Species
  tissue: [Anatomy_term]
  strain: [Strain]
  contained_in: [Condition]
  follows: [Condition]
  exposure_time: [String]
  food: [String]
  genotype: [String]
  other: [String]
  sample__OF__sage_experiment: [Sage_experiment]
  sample_a__OF__microarray_experiment: [Microarray_experiment]
  sample_b__OF__microarray_experiment: [Microarray_experiment]
  sample__OF__analysis: [Analysis]
  contained_in__OF__condition: [Condition]
  follows__OF__condition: [Condition]
  condition__OF__anatomy_function__VIA__assay: [Anatomy_function__assay]
  microarray_sample__OF__microarray_experiment: [Microarray_experiment]
}


type Rearrangement__balances {
  map: Map
  balances__OF__rearrangement: Rearrangement
}


type Anatomy_term__synonym {
  text: String
  synonym__OF__anatomy_term: Anatomy_term
}


type Phenotype_info__temperature {
  text: String
  temperature__OF__phenotype_info: String
}


type Sequence__dna {
  dna: Dna
  length: Int
  dna__OF__sequence: Sequence
}


type Phenotype_info__complete {
  text: String
  complete__OF__phenotype_info: String
}


type Sequence__interpolated_map_position {
  map: Map
  float: Float
  interpolated_map_position__OF__sequence: Sequence
}


type Clone__positive_variation {
  author: Author
  variation: Variation
  positive_variation__OF__clone: Clone
}


type Position_matrix__transcription_factor {
  transcription_factor: Transcription_factor
  transcription_factor__OF__position_matrix: Position_matrix
}


type Strain__location {
  laboratory: Laboratory
  location__OF__strain: Strain
}


type Structure_data {
  phasing_diffraction_data: String
  nmr_structure: String
  expressed: String
  diffraction_quality_crystals: String
  hsqc: String
  diffraction: String
  purified: String
  nmr_assigned: String
  other: String
  in_bmrb: String
  native_diffraction_data: String
  crystallized: String
  work_stopped: String
  id: String
  remark: [Structure_data__remark]
  wormpep_release: Int
  status_updated: String
  test_target: String
  protein: Protein
  soluble: String
  evidence: String
  crystal_structure: String
  in_pdb: String
  cloned: String
  database: [Structure_data__database]
  selected: String
}


type Clone__outside_rearr {
  author: Author
  rearrangement: Rearrangement
  outside_rearr__OF__clone: Clone
}


type Homology {
  expr: String
  rnai: String
  gap: String
  align_id: String
  min: Int
  structure: String
  dna: String
  strand: String
  target_species: String
  ms_peptide: String
  oligo_set: String
  motif: String
  max: Int
  sage: String
  protein: String
}


type Clone__negative_locus {
  author: Author
  locus: Locus
  negative_locus__OF__clone: Clone
}


type Longtext {
  id: String
  text: String
  description__OF__reconstruction: [Reconstruction]
  longtext__OF__transposon_family__VIA__db_annotation: [Transposon_family__db_annotation]
  abstract__OF__paper: [Paper]
  db_text__OF__motif: [Motif]
  longtext__OF__sequence__VIA__db_annotation: [Sequence__db_annotation]
  assay_conditions__OF__pcr_product: [Pcr_product]
}


type Position_matrix__consensus {
  text: String
  consensus__OF__position_matrix: Position_matrix
}


type Feature__associated_with_feature {
  feature: Feature
  associated_with_feature__OF__feature: Feature
}


type Wbprocess__remark {
  text: String
  remark__OF__wbprocess: Wbprocess
}


type Feature__deprecated {
  text: String
  deprecated__OF__feature: Feature
}


type Wbprocess__anatomy_term {
  anatomy_term: Anatomy_term
  anatomy_term__OF__wbprocess: Wbprocess
}


type Feature__merged_into {
  feature: Feature
  merged_into__OF__feature: Feature
}


type Pseudogene__brief_identification {
  text: String
  brief_identification__OF__pseudogene: Pseudogene
}


type Microarray_results__remark {
  text: String
  remark__OF__microarray_results: Microarray_results
}


type Transcript__matching_cdna {
  sequence: Sequence
  matching_cdna__OF__transcript: Transcript
}


type Expression_cluster__microarray_results {
  microarray_results: Microarray_results
  text: String
  microarray_results__OF__expression_cluster: Expression_cluster
}


type Grid__row {
  int: Int
  row__OF__grid: Grid
}


type Phenotype__remark {
  text: String
  remark__OF__phenotype: Phenotype
}


type Neuro_location__section {
  first_section: Int
  remark: String
  last_section: Int
  section__OF__neuro_location: String
}


type Wbprocess__gene_cluster {
  gene_cluster: Gene_cluster
  gene_cluster__OF__wbprocess: Wbprocess
}


type Two_point_data__gene_1 {
  variation: Variation
  gene: Gene
  gene_1__OF__two_point_data: Two_point_data
}


type Two_point_data__gene_2 {
  variation: Variation
  gene: Gene
  gene_2__OF__two_point_data: Two_point_data
}


type Protein__peptide {
  peptide: Peptide
  checksum: Int
  length: Int
  peptide__OF__protein: Protein
}


type Sequence__clone_left_end {
  clone: Clone
  int: Int
  clone_left_end__OF__sequence: Sequence
}


type Role__research_staff {
  from: String
  to: String
  research_staff__OF__role: String
}


type Strain__remark {
  text: String
  remark__OF__strain: Strain
}


type Sequence__remark {
  text: String
  remark__OF__sequence: Sequence
}


type Go_annotation__anatomy_relation {
  text: String
  anatomy_term: Anatomy_term
  anatomy_relation__OF__go_annotation: Go_annotation
}


type Transposon__copy_status {
  status: String
  copy_status__OF__transposon: Transposon
}


type Phenotype__do_term {
  do_term: Do_term
  do_term__OF__phenotype: Phenotype
}


type Gene__paralog {
  species: Species
  gene: Gene
  paralog__OF__gene: Gene
}


type Wbprocess__gene {
  gene: Gene
  gene__OF__wbprocess: Wbprocess
}


type Gene_class__remark {
  text: String
  remark__OF__gene_class: Gene_class
}


type Cds__source_exons {
  end: Int
  start: Int
  source_exons__OF__cds: Cds
}


type Two_point_data__direct {
  t: Int
  r: Int
  direct__OF__two_point_data: Two_point_data
}


type Two_point_data__dom_semi {
  all: Int
  xd: Int
  dom_semi__OF__two_point_data: Two_point_data
}


type Phenotype_info__maternal {
  value: String
  maternal__OF__phenotype_info: String
}


type Strain__other_name {
  text: String
  other_name__OF__strain: Strain
}


type Construct__database {
  field: Database_field
  database: Database
  accession: String
  database__OF__construct: Construct
}


type Gene__other_sequence {
  sequence: Sequence
  other_sequence__OF__gene: Gene
}


type Pseudogene__detailed_description {
  text: String
  detailed_description__OF__pseudogene: Pseudogene
}


type Transposon_family__remark {
  text: String
  remark__OF__transposon_family: Transposon_family
}


type Sequence__map {
  map: Map
  map__OF__sequence: Sequence
}


type Reconstruction {
  author: [Author]
  anatomy_term: [Anatomy_term]
  description: [Longtext]
  date: String
  remark: [Reconstruction__remark]
  id: String
  reconstruction__OF__anatomy_term__VIA__reconstruction: [Anatomy_term__reconstruction]
}


type Oligo__pairwise_scores {
  melting_temperature: Float
  score: Float
  oligo: Oligo
  pairwise_scores__OF__oligo: Oligo
}


type Variation__predicted_cds {
  cds: Cds
  predicted_cds__OF__variation: Variation
}


type Variation__deletion_verification {
  text: String
  deletion_verification__OF__variation: Variation
}


type Transposon_family__db_annotation {
  database: Database
  longtext: Longtext
  db_annotation__OF__transposon_family: Transposon_family
}


type Importer {
  temp: String
  ts_name: String
}


type Life_stage {
  contained_in: [Life_stage]
  curated_by: String
  preceded_by: [Life_stage]
  reference: [Life_stage__reference]
  remark: [Life_stage__remark]
  definition: [String]
  other_name: [String]
  anatomy_term: [Anatomy_term]
  public_name: String
  id: String
  life_stage__OF__expr_pattern__VIA__not_in_life_stage: [Expr_pattern__not_in_life_stage]
  life_stage__OF__gr_condition: [String]
  preceded_by__OF__life_stage: [Life_stage]
  life_stage__OF__anatomy_term: [Anatomy_term]
  life_stage__OF__rnai: [Rnai]
  life_stage__OF__go_annotation__VIA__life_stage_relation: [Go_annotation__life_stage_relation]
  life_stage__OF__library: [Library]
  stage__OF__pseudogene__VIA__rnaseq: [Pseudogene__rnaseq]
  life_stage__OF__mass_spec_experiment: [Mass_spec_experiment]
  life_stage__OF__condition: [Condition]
  life_stage__OF__expression_cluster: [Expression_cluster]
  contained_in__OF__life_stage: [Life_stage]
  life_stage__OF__phenotype_info__VIA__life_stage: [Phenotype_info__life_stage]
  life_stage__OF__expr_pattern__VIA__life_stage: [Expr_pattern__life_stage]
  stage__OF__transcript__VIA__rnaseq: [Transcript__rnaseq]
  life_stage__OF__qualifier: [String]
  life_stage__OF__strain: [Strain]
  life_stage__OF__wbprocess__VIA__life_stage: [Wbprocess__life_stage]
  stage__OF__gene__VIA__rnaseq: [Gene__rnaseq]
  life_stage__OF__picture: [Picture]
  life_stage__OF__sequence: [Sequence]
  stage__OF__cds__VIA__rnaseq: [Cds__rnaseq]
}


type Gene__provisional_description {
  text: String
  provisional_description__OF__gene: Gene
}


type Map_position__right {
  float: Float
  right__OF__map_position: String
}


type Gene__rnaseq {
  stage: Life_stage
  fpkm: Float
  rnaseq__OF__gene: Gene
}


type Person__last_attempt_to_contact {
  date: String
  note: String
  last_attempt_to_contact__OF__person: Person
}


type Protein__molecular_weight {
  float: Float
  molecular_weight__OF__protein: Protein
}


type Ace2so {
  so_children: Boolean
  so_parent_obj_tag: String
  id: String
  coding_region: So_term
  description: String
  no_span: Boolean
  exons: So_term
  introns: So_term
  ace2so__OF__method__VIA__gff_so: [Method__gff_so]
}


type Transcript__detailed_description {
  text: String
  detailed_description__OF__transcript: Transcript
}


type Neurodata__send {
  series: String
  count: Int
  send__OF__neurodata: String
}


type Clone__gel {
  motif: Motif
  gel__OF__clone: Clone
}


type Sage_tag__gene {
  gene: Gene
  gene__OF__sage_tag: Sage_tag
}


type Phenotype_info__incomplete {
  text: String
  incomplete__OF__phenotype_info: String
}


type Motif {
  overhang: Int
  num_mismatch: Int
  isoschizomer: [Motif]
  redundant: Boolean
  company: String
  offset: Int
  id: String
  go_term: [Motif__go_term]
  substrate: String
  cleavage: String
  match_sequence: String
  db_text: [Longtext]
  title: [String]
  db_remark: [Motif__db_remark]
  remark: [Motif__remark]
  database: [Motif__database]
  anchoring_enzyme__OF__sage_tag: [Sage_tag]
  isoschizomer__OF__motif: [Motif]
  associated_motif__OF__transposon_family: [Transposon_family]
  motif__OF__go_annotation: [Go_annotation]
  motif__OF__clone__VIA__gel: [Clone__gel]
}


type Role__lab_visitor {
  from: String
  to: String
  lab_visitor__OF__role: String
}


type Interaction__interactor_overlapping_protein {
  protein: Protein
  interactor_overlapping_protein__OF__interaction: Interaction
}


type Pseudogene__remark {
  text: String
  remark__OF__pseudogene: Pseudogene
}


type Pos_neg_data__gene_2 {
  gene: Gene
  variation: Variation
  gene_2__OF__pos_neg_data: Pos_neg_data
}


type Pos_neg_data__gene_1 {
  gene: Gene
  variation: Variation
  gene_1__OF__pos_neg_data: Pos_neg_data
}


type Wbprocess__molecule {
  molecule: Molecule
  molecule__OF__wbprocess: Wbprocess
}


type Peptide {
  id: String
  sequence: String
  peptide__OF__protein__VIA__peptide: [Protein__peptide]
}


type Wbprocess__interaction {
  interaction: Interaction
  interaction__OF__wbprocess: Wbprocess
}


type Pace {
  obj_ref: String
  prefer_part: String
  order: Int
  use_ns: [String]
  tags: String
  is_hash: Boolean
  identifies_class: String
  fill_default: Boolean
  xref: [Pace__xref]
}


type Neurodata__receive {
  series: String
  count: Int
  receive__OF__neurodata: String
}


type Operon__contains_gene {
  gene: Gene
  contains_gene__OF__operon: Operon
}


type Grid__lines_at {
  x: Int
  y: Int
  lines_at__OF__grid: Grid
}


type Expr_profile__reference {
  paper: Paper
  reference__OF__expr_profile: Expr_profile
}


type Molecule__affects_phenotype_of_rearrangement {
  phenotype: Phenotype
  rearrangement: Rearrangement
  affects_phenotype_of_rearrangement__OF__molecule: Molecule
}


type Phenotype {
  do_term: [Phenotype__do_term]
  synonym: [Phenotype__synonym]
  assay: Phenotype__assay
  go_term: [Phenotype__go_term]
  remark: [Phenotype__remark]
  short_name: [Phenotype__short_name]
  specialisation_of: [Phenotype]
  dead: Boolean
  description: Phenotype__description
  id: String
  primary_name: Phenotype__primary_name
  phenotype__OF__wbprocess__VIA__phenotype: [Wbprocess__phenotype]
  phenotype__OF__molecule__VIA__affects_phenotype_of_rearrangement: [Molecule__affects_phenotype_of_rearrangement]
  phenotype__OF__transgene__VIA__phenotype: [Transgene__phenotype]
  phenotype__OF__variation__VIA__phenotype_not_observed: [Variation__phenotype_not_observed]
  phenotype__OF__go_annotation: [Go_annotation]
  phenotype__OF__molecule__VIA__affects_phenotype_of_variation: [Molecule__affects_phenotype_of_variation]
  phenotype__OF__rnai__VIA__phenotype: [Rnai__phenotype]
  phenotype__OF__strain__VIA__phenotype: [Strain__phenotype]
  phenotype__OF__strain__VIA__phenotype_not_observed: [Strain__phenotype_not_observed]
  phenotype__OF__molecule__VIA__affects_phenotype_of_strain: [Molecule__affects_phenotype_of_strain]
  phenotype__OF__variation__VIA__phenotype: [Variation__phenotype]
  phenotype__OF__molecule__VIA__affects_phenotype_of_transgene: [Molecule__affects_phenotype_of_transgene]
  phenotype__OF__molecule__VIA__affects_phenotype_of_rnai: [Molecule__affects_phenotype_of_rnai]
  phenotype__OF__rearrangement__VIA__phenotype: [Rearrangement__phenotype]
  phenotype__OF__rearrangement__VIA__phenotype_not_observed: [Rearrangement__phenotype_not_observed]
  specialisation_of__OF__phenotype: [Phenotype]
  phenotype__OF__anatomy_function__VIA__phenotype: [Anatomy_function__phenotype]
  interaction_phenotype__OF__interaction: [Interaction]
  phenotype__OF__transgene__VIA__phenotype_not_observed: [Transgene__phenotype_not_observed]
  phenotype__OF__rnai__VIA__phenotype_not_observed: [Rnai__phenotype_not_observed]
}


type Cds__provisional_description {
  text: String
  provisional_description__OF__cds: Cds
}


type Protein__remark {
  text: String
  remark__OF__protein: Protein
}


type Transposon__old_name {
  text: String
  old_name__OF__transposon: Transposon
}


type Molecule {
  synonym: [String]
  biofunction_role: [Molecule__biofunction_role]
  smiles: [String]
  endogenous_in: [Molecule__endogenous_in]
  affects_phenotype_of_variation: [Molecule__affects_phenotype_of_variation]
  affects_phenotype_of_rearrangement: [Molecule__affects_phenotype_of_rearrangement]
  chemical_synthesis: String
  iupac: [String]
  nonspecies_source: [String]
  id: String
  remark: [Molecule__remark]
  inchi: [String]
  use: [Molecule__use]
  affects_phenotype_of_rnai: [Molecule__affects_phenotype_of_rnai]
  affects_phenotype_of_transgene: [Molecule__affects_phenotype_of_transgene]
  public_name: [String]
  reference: [Paper]
  affects_phenotype_of_strain: [Molecule__affects_phenotype_of_strain]
  status: [Molecule__status]
  inchikey: [String]
  essential_for: [Molecule__essential_for]
  formula: [String]
  extraction_method: [Molecule__extraction_method]
  monoisotopic_mass: [Float]
  database: [Molecule__database]
  detection_method: [Molecule__detection_method]
  molecule__OF__wbprocess__VIA__molecule: [Wbprocess__molecule]
  molecule__OF__interaction__VIA__molecule_interactor: [Interaction__molecule_interactor]
  molecule__OF__phenotype_info__VIA__molecule: [Phenotype_info__molecule]
  regulated_by_molecule__OF__expression_cluster: [Expression_cluster]
  molecule__OF__go_annotation__VIA__molecule_relation: [Go_annotation__molecule_relation]
  molecule__OF__phenotype_info__VIA__molecule_affected: [Phenotype_info__molecule_affected]
}


type Antibody__animal {
  text: String
  value: String
  animal__OF__antibody: Antibody
}


type Cds__brief_identification {
  text: String
  brief_identification__OF__cds: Cds
}


type Antibody__antigen {
  value: String
  text: String
  antigen__OF__antibody: Antibody
}


type Homology_group__database {
  database_field: Database_field
  database: Database
  text: String
  database__OF__homology_group: Homology_group
}


type Molecular_change__splice_site {
  text: String
  value: String
  splice_site__OF__molecular_change: String
}


type Rnai__transcript {
  transcript: Transcript
  transcript__OF__rnai: Rnai
}


type Feature__remark {
  text: String
  remark__OF__feature: Feature
}


type Paper__person {
  person: Person
  person__OF__paper: Paper
}


type Map_position__multi_position {
  float: Float
  multi_position__OF__map_position: String
}


type Sage_tag__remark {
  text: String
  remark__OF__sage_tag: Sage_tag
}


type Multi_counts__rearrangement {
  rearrangement: Rearrangement
  int: Int
  rearrangement__OF__multi_counts: String
}


type Wbprocess__expression_cluster {
  expression_cluster: Expression_cluster
  expression_cluster__OF__wbprocess: Wbprocess
}


type Cds__remark {
  text: String
  remark__OF__cds: Cds
}


type Pcr_product__oligo {
  int_b: Int
  int_c: Int
  oligo: Oligo
  oligo__OF__pcr_product: Pcr_product
}


type Strain__elevation {
  float: Float
  elevation__OF__strain: Strain
}


type Sequence__clone_right_end {
  clone: Clone
  int: Int
  clone_right_end__OF__sequence: Sequence
}


type Clone__hybridizes_to {
  clone: Clone
  grid: Grid
  hybridizes_to__OF__clone: Clone
}


type Embl_info {
  id: String
  note: [String]
  location: String
  product: [String]
}


type Transcript__concise_description {
  text: String
  concise_description__OF__transcript: Transcript
}


type Gene__corresponding_pseudogene {
  pseudogene: Pseudogene
  corresponding_pseudogene__OF__gene: Gene
}


type Protein {
  species: Species
  brigpep: Boolean
  database: [Protein__database]
  molecular_weight: [Protein__molecular_weight]
  id: String
  wormpep: Boolean
  gene_name: [String]
  remark: [Protein__remark]
  description: String
  peptide: Protein__peptide
  live: Boolean
  history: [Protein__history]
  protein__OF__gene__VIA__ortholog_other: [Gene__ortholog_other]
  protein__OF__mass_spec_data: [String]
  protein__OF__expr_pattern: [Expr_pattern]
  protein__OF__structure_data: [Structure_data]
  protein_seq__OF__mass_spec_peptide: [Mass_spec_peptide]
  protein__OF__homology_group: [Homology_group]
  protein__OF__interaction__VIA__interactor_overlapping_protein: [Interaction__interactor_overlapping_protein]
  protein__OF__go_annotation__VIA__annotation_isoform: [Go_annotation__annotation_isoform]
  protein__OF__cds__VIA__corresponding_protein: [Cds__corresponding_protein]
}


type Role__masters {
  from: String
  to: String
  masters__OF__role: String
}


type Operon__description {
  text: String
  description__OF__operon: Operon
}


type Microarray_results__gene {
  gene: Gene
  gene__OF__microarray_results: Microarray_results
}


type Lane__band {
  text: String
  float: Float
  band__OF__lane: String
}


type Motif__remark {
  text: String
  remark__OF__motif: Motif
}


type Two_point_data__selected {
  x: Int
  xy: Int
  selected__OF__two_point_data: Two_point_data
}


type Feature__bound_by_product_of {
  gene: Gene
  bound_by_product_of__OF__feature: Feature
}


type Two_point_data__dom_let {
  all: Int
  wt: Int
  dom_let__OF__two_point_data: Two_point_data
}


type Microarray_results__max {
  experiment: Microarray_experiment
  value: Float
  max__OF__microarray_results: Microarray_results
}


type Variation__phenotype {
  phenotype: Phenotype
  phenotype__OF__variation: Variation
}


type Transposon__corresponding_pseudogene {
  pseudogene: Pseudogene
  corresponding_pseudogene__OF__transposon: Transposon
}


type Oligo_set {
  remark: [Oligo_set__remark]
  species: Species
  target_exons: [Oligo_set__target_exons]
  overlaps_cds: [Oligo_set__overlaps_cds]
  overlaps_pseudogene: [Oligo_set__overlaps_pseudogene]
  overlaps_transcript: [Oligo_set__overlaps_transcript]
  type: [String]
  id: String
  oligo: [Oligo]
  oligo_set__OF__microarray_results: [Microarray_results]
}


type Go_annotation__go_reference {
  database_field: Database_field
  text: String
  database: Database
  go_reference__OF__go_annotation: Go_annotation
}


type Two_point_data__full {
  xy: Int
  wt: Int
  x: Int
  y: Int
  full__OF__two_point_data: Two_point_data
}


type Molecule__affects_phenotype_of_transgene {
  transgene: Transgene
  phenotype: Phenotype
  affects_phenotype_of_transgene__OF__molecule: Molecule
}


type Db__install {
  partition: [String]
  valueType: [String]
  attribute: [String]
  function: [String]
}


type Gene__concise_description {
  text: String
  concise_description__OF__gene: Gene
}


type Variation__reference {
  paper: Paper
  reference__OF__variation: Variation
}


type Phenotype_info__quantity {
  int_b: Int
  int_a: Int
  quantity__OF__phenotype_info: String
}


type Pace__xref {
  view: Boolean
  use_ns: [String]
  obj_ref: String
  attribute: String
  export: Boolean
  tags: String
  import: Boolean
  xref__OF__pace: Pace
}


type Construct__summary {
  text: String
  summary__OF__construct: Construct
}


type Gene__database {
  field: Database_field
  database: Database
  accession: String
  database__OF__gene: Gene
}


type Phenotype_info__range {
  int_a: Int
  int_b: Int
  range__OF__phenotype_info: String
}


type Clone__positive_gene {
  gene: Gene
  positive_gene__OF__clone: Clone
}


type Molecule__remark {
  text: String
  remark__OF__molecule: Molecule
}


type Two_point_data {
  distance: Float
  temperature: String
  back_one: Two_point_data__back_one
  full: Two_point_data__full
  sex_cis: Two_point_data__sex_cis
  mapper: [Author]
  rearrangement_1: Rearrangement
  calc_lower_conf: Float
  tested: Two_point_data__tested
  date: String
  id: String
  min: Float
  evidence: String
  dom_one: Two_point_data__dom_one
  results: String
  linkage: String
  dom_let: Two_point_data__dom_let
  allele_2: Variation
  complex_mixed: Two_point_data__complex_mixed
  allele_1: Variation
  one_let: Two_point_data__one_let
  max: Float
  calc_distance: Float
  recs_all: Two_point_data__recs_all
  genotype: String
  remark: [Two_point_data__remark]
  dom_selected: Two_point_data__dom_selected
  dom_semi: Two_point_data__dom_semi
  locus_2: Two_point_data__locus_2
  locus_1: Two_point_data__locus_1
  sex_full: Two_point_data__sex_full
  calc_upper_conf: Float
  selected_trans: Two_point_data__selected_trans
  one_recombinant: Two_point_data__one_recombinant
  backcross: Two_point_data__backcross
  error: Float
  sex_one: Two_point_data__sex_one
  selected: Two_point_data__selected
  rearrangement_2: Rearrangement
  laboratory: [Laboratory]
  gene_2: Two_point_data__gene_2
  direct: Two_point_data__direct
  gene_1: Two_point_data__gene_1
  one_all: Two_point_data__one_all
  two_point__OF__rearrangement: [Rearrangement]
}


type Phenotype_info__molecule_affected {
  pato_term: Pato_term
  molecule: Molecule
  molecule_affected__OF__phenotype_info: String
}


type Role__postdoc {
  to: String
  from: String
  postdoc__OF__role: String
}


type Gene__cgc_name {
  text: String
  cgc_name__OF__gene: Gene
}


type Rnai__reference {
  paper: Paper
  reference__OF__rnai: Rnai
}


type Splice_confirmation {
  est: [Sequence]
  false: [Sequence]
  rst: [Sequence]
  rnaseq: [Splice_confirmation__rnaseq]
  homology: [String]
  id: String
  utr: [Sequence]
  ost: [Sequence]
  cdna: [Sequence]
  mass_spec: [Mass_spec_peptide]
  inconsistent: [Sequence]
  mrna: [Sequence]
}


type Sequence__source_exons {
  start: Int
  end: Int
  source_exons__OF__sequence: Sequence
}


type Molecule__extraction_method {
  text: String
  extraction_method__OF__molecule: Molecule
}


type Sequence__database {
  database: Database
  field: Database_field
  accession: String
  database__OF__sequence: Sequence
}


type Expression_cluster__remark {
  text: String
  remark__OF__expression_cluster: Expression_cluster
}


type Two_point_data__dom_one {
  non_wt: Int
  wt: Int
  dom_one__OF__two_point_data: Two_point_data
}


type Condition__remark {
  text: String
  remark__OF__condition: Condition
}


type Anatomy_term__reconstruction {
  reconstruction: Reconstruction
  reconstruction__OF__anatomy_term: Anatomy_term
}


type Sequence__gap_right {
  text: String
  size: Int
  gap_right__OF__sequence: Sequence
}


type Rearrangement__locus_outside {
  locus: Locus
  author: Author
  locus_outside__OF__rearrangement: Rearrangement
}


type Gene__reference_allele {
  variation: Variation
  reference_allele__OF__gene: Gene
}


type Transcription_factor__associated_with_gene {
  gene: Gene
  associated_with_gene__OF__transcription_factor: Transcription_factor
}


type Gene_history_action__changed_class {
  new: String
  old: String
  changed_class__OF__gene_history_action: String
}


type Map_position__left {
  float: Float
  left__OF__map_position: String
}


type Reconstruction__remark {
  text: String
  remark__OF__reconstruction: Reconstruction
}


type Microarray_data__range_within_paper {
  max: Float
  min: Float
  range_within_paper__OF__microarray_data: String
}


type Feature__flanking_sequences {
  five_prime: String
  three_prime: String
  flanking_sequences__OF__feature: Feature
}


type Grid__xy_labelling {
  x: String
  y: String
  xy_labelling__OF__grid: Grid
}


type Cds__reference {
  paper: Paper
  reference__OF__cds: Cds
}


type Cds__corresponding_protein {
  protein: Protein
  corresponding_protein__OF__cds: Cds
}


type Go_annotation__interacting_species {
  species: Species
  strain: Strain
  interacting_species__OF__go_annotation: Go_annotation
}


type Oligo {
  id: String
  gc: Float
  sequence: String
  score: Float
  length: Int
  pairwise_scores: [Oligo__pairwise_scores]
  tm: Float
  oligo__OF__pcr_product__VIA__oligo: [Pcr_product__oligo]
  oligo__OF__sequence__VIA__oligo: [Sequence__oligo]
  oligo__OF__oligo__VIA__pairwise_scores: [Oligo__pairwise_scores]
  oligo__OF__oligo_set: [Oligo_set]
}


type Position_matrix__value {
  a: Float
  c: Float
  t: Float
  g: Float
}


type Go_annotation__gene_relation {
  text: String
  gene: Gene
  gene_relation__OF__go_annotation: Go_annotation
}


type Do_term {
  definition: String
  comment: [String]
  status: String
  id: String
  version: String
  type: [String]
  alternate_id: [String]
  database: [Do_term__database]
  synonym: [Do_term__synonym]
  name: String
  is_a: [Do_term]
  do_term__OF__wbprocess__VIA__do_term: [Wbprocess__do_term]
  do_term__OF__gene__VIA__disease_experimental_model: [Gene__disease_experimental_model]
  do_term__OF__transgene__VIA__transgene_for_disease: [Transgene__transgene_for_disease]
  do_term__OF__construct__VIA__construct_for_disease: [Construct__construct_for_disease]
  do_term__OF__gene__VIA__disease_potential_model: [Gene__disease_potential_model]
  do_term__OF__antibody__VIA__antibody_for_disease: [Antibody__antibody_for_disease]
  do_term__OF__phenotype__VIA__do_term: [Phenotype__do_term]
  is_a__OF__do_term: [Do_term]
}


type Two_point_data__sex_one {
  wt: Int
  x: Int
  sex_one__OF__two_point_data: Two_point_data
}


type Expression_cluster__gene {
  text: String
  gene: Gene
  gene__OF__expression_cluster: Expression_cluster
}


type Person__supervised_by {
  person: Person
  supervised_by__OF__person: Person
}


type Interaction__remark {
  text: String
  remark__OF__interaction: Interaction
}


type Sequence_collection {
  strain: [Strain]
  laboratory: [Laboratory]
  status: Sequence_collection__status
  evidence: String
  species: [Species]
  first_ws_release: [Int]
  sequences: [Sequence]
  database: [Sequence_collection__database]
  id: String
  name: [String]
  latest_ws_release: [Int]
  supercedes: Sequence_collection
  remark: [String]
  supercedes__OF__sequence_collection: [Sequence_collection]
  assembly__OF__species: [Species]
}


type Anatomy_function__not_involved {
  anatomy_term: Anatomy_term
  not_involved__OF__anatomy_function: Anatomy_function
}


type Cds__cds {
  end: Int
  start: Int
  cds__OF__cds: Cds
}


type Pseudogene__source_exons {
  end: Int
  start: Int
  source_exons__OF__pseudogene: Pseudogene
}


type Sage_tag__results {
  sage_experiment: Sage_experiment
  results__OF__sage_tag: Sage_tag
}


type Transposon_family {
  remark: [Transposon_family__remark]
  associated_motif: [Motif]
  description: [String]
  title: String
  evidence: String
  db_annotation: [Transposon_family__db_annotation]
  id: String
  member_of__OF__transposon: [Transposon]
  transposon_insertion__OF__variation: [Variation]
  transposon_excision__OF__variation: [Variation]
}


type Cds__last_reviewed {
  datetype: String
  person: Person
  last_reviewed__OF__cds: Cds
}


type Two_point_data__one_let {
  x: Int
  all: Int
  one_let__OF__two_point_data: Two_point_data
}


type Cds__rnaseq {
  fpkm: Float
  stage: Life_stage
  rnaseq__OF__cds: Cds
}


type Person__old_address {
  datetype: String
  old_address__OF__person: Person
}


type Rnai__phenotype {
  phenotype: Phenotype
  phenotype__OF__rnai: Rnai
}


type Molecule__affects_phenotype_of_rnai {
  rnai: Rnai
  phenotype: Phenotype
  affects_phenotype_of_rnai__OF__molecule: Molecule
}


type Phenotype__go_term {
  go_term: Go_term
  go_code: Go_code
  go_term__OF__phenotype: Phenotype
}


type Phenotype_info__life_stage {
  life_stage: Life_stage
  pato_term: Pato_term
  life_stage__OF__phenotype_info: String
}


type Anatomy_term__definition {
  text: String
  definition__OF__anatomy_term: Anatomy_term
}


type Sk_map__remark {
  text: String
  remark__OF__sk_map: Sk_map
}


type Expr_pattern__not_in_anatomy_term {
  anatomy_term: Anatomy_term
  not_in_anatomy_term__OF__expr_pattern: Expr_pattern
}


type Gene__disease_potential_model {
  species: Species
  do_term: Do_term
  disease_potential_model__OF__gene: Gene
}


type Pcr_product__remark {
  text: String
  remark__OF__pcr_product: Pcr_product
}


type Rearrangement__remark {
  text: String
  remark__OF__rearrangement: Rearrangement
}


type Interaction__variation_interactor {
  variation: Variation
  variation_interactor__OF__interaction: Interaction
}


type Microarray_experiment {
  microarray: [Microarray]
  remark: [Microarray_experiment__remark]
  sample_a: Condition
  sample_b: Condition
  species: Species
  id: String
  reference: [Paper]
  microarray_sample: Condition
  microarray_experiment__OF__expression_cluster: [Expression_cluster]
  experiment__OF__microarray_results__VIA__min: [Microarray_results__min]
  experiment__OF__microarray_results__VIA__max: [Microarray_results__max]
  microarray__OF__expr_pattern: [Expr_pattern]
  microarray_experiment__OF__microarray_results__VIA__results: [Microarray_results__results]
}


type Sk_map {
  remark: [Sk_map__remark]
  y_coord: Float
  id: String
  x_coord: Float
  date: String
  mountain: Int
  expr_map__OF__expr_profile: [Expr_profile]
}


type Gene__ortholog_other {
  protein: Protein
  ortholog_other__OF__gene: Gene
}


type Gene_cluster__reference {
  paper: Paper
  reference__OF__gene_cluster: Gene_cluster
}


type Sequence__assembly_tags {
  start: Int
  stop: Int
  comment: String
  type: String
  assembly_tags__OF__sequence: Sequence
}


type Feature {
  merged_into: Feature__merged_into
  deprecated: [Feature__deprecated]
  defined_by_sequence: [Feature__defined_by_sequence]
  id: String
  strain: Strain
  associated_with_gene: [Feature__associated_with_gene]
  associated_with_transcript: [Feature__associated_with_transcript]
  associated_with_position_matrix: [Feature__associated_with_position_matrix]
  score: [Feature__score]
  defined_by_analysis: [Feature__defined_by_analysis]
  defined_by_person: [Person]
  confidential_remark: [String]
  associated_with_transcription_factor: [Feature__associated_with_transcription_factor]
  associated_with_cds: [Feature__associated_with_cds]
  description: [String]
  associated_with_operon: [Feature__associated_with_operon]
  other_name: [String]
  associated_with_transposon: [Feature__associated_with_transposon]
  bound_by_product_of: [Feature__bound_by_product_of]
  mapping_target: Sequence
  defined_by_paper: [Feature__defined_by_paper]
  remark: [Feature__remark]
  flanking_sequences: Feature__flanking_sequences
  so_term: [So_term]
  associated_with_feature: [Feature__associated_with_feature]
  dna_text: String
  associated_with_variation: [Feature__associated_with_variation]
  species: Species
  public_name: String
  source_location: Feature__source_location
  associated_with_pseudogene: [Feature__associated_with_pseudogene]
  sequence_feature__OF__construct: [Construct]
  feature_evidence__OF__evidence: [String]
  feature__OF__feature__VIA__merged_into: [Feature__merged_into]
  feature__OF__interaction__VIA__feature_interactor: [Interaction__feature_interactor]
  feature__OF__expr_pattern__VIA__associated_feature: [Expr_pattern__associated_feature]
  feature__OF__feature__VIA__associated_with_feature: [Feature__associated_with_feature]
}


type Phenotype__description {
  text: String
  description__OF__phenotype: Phenotype
}


type Splice_confirm__rnaseq {
  count: Int
  analysis: String
  rnaseq__OF__splice_confirm: Splice_confirm
}


type Interaction__other_interactor {
  text: String
  other_interactor__OF__interaction: Interaction
}


type Transgene__phenotype_not_observed {
  phenotype: Phenotype
  phenotype_not_observed__OF__transgene: Transgene
}


type Strain__reference {
  paper: Paper
  reference__OF__strain: Strain
}


type Cds__protein_id {
  version: Int
  sequence: Sequence
  accession: String
  protein_id__OF__cds: Cds
}


type Feature__associated_with_transcription_factor {
  transcription_factor: Transcription_factor
  associated_with_transcription_factor__OF__feature: Feature
}


type Wbprocess__life_stage {
  life_stage: Life_stage
  life_stage__OF__wbprocess: Wbprocess
}


type Transcript__go_term {
  go_code: Go_code
  go_term: Go_term
  go_term__OF__transcript: Transcript
}


type Protein__history {
  text_b: String
  text_c: String
  int: Int
  history__OF__protein: Protein
}


type Variation__phenotype_remark {
  text: String
  phenotype_remark__OF__variation: Variation
}


type Life_stage__reference {
  paper: Paper
  reference__OF__life_stage: Life_stage
}


type Clone__reference {
  paper: Paper
  reference__OF__clone: Clone
}


type Pseudogene__matching_cdna {
  sequence: Sequence
  matching_cdna__OF__pseudogene: Pseudogene
}


type Phenotype__short_name {
  text: String
  short_name__OF__phenotype: Phenotype
}


type Method {
  gf_3_cutoff: Float
  blixem: [String]
  align_mapping: [String]
  blastn: Boolean
  inter_gene_cost: Float
  embl_qualifier: [Method__embl_qualifier]
  score_by_width: Boolean
  gff_feature: String
  intron_cost: Method__intron_cost
  exon_min: Int
  remark: [Method__remark]
  join_blocks: Boolean
  width: Float
  gf_range: Int
  symbol: String
  percent: Boolean
  show_text: Boolean
  belvu: Boolean
  right_priority: Float
  score_bounds: Method__score_bounds
  gff_source: String
  score_by_offset: Boolean
  show_up_strand: String
  id: String
  gf_atg_cutoff: Float
  intron_min: Int
  embl_dump_info: String
  embl_threshold: Float
  gff_so: Method__gff_so
  score_by_histogram: Float
  min_mag: Float
  overlap_mode: String
  gapped: Boolean
  gene_assemble_method: [Method__gene_assemble_method]
  display_gaps: Boolean
  frame_sensitive: Boolean
  no_display: Boolean
  max_mag: Float
  gf_5_cutoff: Float
  embl_feature: String
  method__OF__cds__VIA__cds_predicted_by: [Cds__cds_predicted_by]
  method__OF__method__VIA__gene_assemble_method: [Method__gene_assemble_method]
  method__OF__sequence__VIA__oligo: [Sequence__oligo]
  method__OF__locatable: [String]
  embl_dump_method__OF__embl_dump_info: [String]
}


type Expression_cluster__reference {
  paper: Paper
  reference__OF__expression_cluster: Expression_cluster
}


type Phenotype_info__image {
  picture: Picture
  image__OF__phenotype_info: String
}


type Variation__status {
  value: String
  status__OF__variation: Variation
}


type Variation__interpolated_map_position {
  position: Float
  map: Map
  interpolated_map_position__OF__variation: Variation
}


type Contig__pmap {
  stop: Int
  start: Int
  pmap__OF__contig: Contig
}


type Variation__substitution {
  ref: String
  alt: String
  substitution__OF__variation: Variation
}


type Microarray {
  reference: [Paper]
  url: [String]
  chip_type: String
  remark: [Microarray__remark]
  id: String
  chip_info: [String]
  microarray__OF__microarray_experiment: [Microarray_experiment]
  microarray__OF__microarray_results: [Microarray_results]
}


type Role__collaborated {
  from: String
  to: String
  collaborated__OF__role: String
}


type Construct__construct_for_disease {
  do_term: Do_term
  construct_for_disease__OF__construct: Construct
}


type Reference__remark {
  text: String
  remark__OF__reference: Reference
}


type Laboratory {
  clean_address: String
  url: [String]
  remark: [Laboratory__remark]
  representative: [Person]
  alleles: [Variation]
  mail: [String]
  past_lab_members: [Person]
  registered_lab_members: [Person]
  allele_designation: String
  phone: [String]
  strain_designation: String
  id: String
  e_mail: [String]
  fax: [String]
  laboratory__OF__sequence_collection: [Sequence_collection]
  from_laboratory__OF__sequence: [Sequence]
  laboratory_evidence__OF__evidence: [String]
  designating_laboratory__OF__gene_class: [Gene_class]
  laboratory__OF__grid_data: [Grid_data]
  laboratory__OF__variation: [Variation]
  laboratory__OF__rnai: [Rnai]
  from_laboratory__OF__cds: [Cds]
  from_laboratory__OF__interaction: [Interaction]
  laboratory__OF__gene: [Gene]
  laboratory__OF__mass_spec_experiment: [Mass_spec_experiment]
  from_laboratory__OF__pseudogene: [Pseudogene]
  laboratory__OF__gene_class__VIA__former_designating_laboratory: [Gene_class__former_designating_laboratory]
  laboratory__OF__expr_pattern: [Expr_pattern]
  laboratory__OF__strain__VIA__location: [Strain__location]
  from_laboratory__OF__transposon: [Transposon]
  laboratory__OF__construct__VIA__laboratory: [Construct__laboratory]
  old_lab__OF__author: [Author]
  laboratory__OF__rearrangement__VIA__location: [Rearrangement__location]
  laboratory__OF__multi_pt_data: [Multi_pt_data]
  from_laboratory__OF__pcr_product: [Pcr_product]
  laboratory__OF__clone__VIA__location: [Clone__location]
  laboratory__OF__two_point_data: [Two_point_data]
  from_laboratory__OF__transcript: [Transcript]
  location__OF__antibody: [Antibody]
  laboratory__OF__locus: [Locus]
  laboratory__OF__transgene__VIA__laboratory: [Transgene__laboratory]
  laboratory__OF__pos_neg_data: [Pos_neg_data]
}


type Paper__type {
  type: String
  type__OF__paper: Paper
}


type Interaction__feature_interactor {
  feature: Feature
  feature_interactor__OF__interaction: Interaction
}


type Lab_location__remark {
  text: String
  remark__OF__lab_location: String
}


type So_term {
  synonym: [String]
  so_version: [String]
  ancestor: [So_term]
  located_sequence_feature: String
  id: String
  part_of: [So_term]
  name: String
  derived_from: [So_term]
  is_a: [So_term]
  member_of: [So_term]
  definition: String
  so_term__OF__method__VIA__gff_so: [Method__gff_so]
  biotype__OF__gene: [Gene]
  ancestor__OF__so_term: [So_term]
  coding_region__OF__ace2so: [Ace2so]
  part_of__OF__so_term: [So_term]
  derived_from__OF__so_term: [So_term]
  introns__OF__ace2so: [Ace2so]
  exons__OF__ace2so: [Ace2so]
  is_a__OF__so_term: [So_term]
  so_term__OF__feature: [Feature]
  member_of__OF__so_term: [So_term]
}


type Pseudogene__provisional_description {
  text: String
  provisional_description__OF__pseudogene: Pseudogene
}


type Sage_tag__pseudogene {
  pseudogene: Pseudogene
  pseudogene__OF__sage_tag: Sage_tag
}


type Expr_pattern__reference {
  paper: Paper
  reference__OF__expr_pattern: Expr_pattern
}


type Wbprocess__summary {
  text: String
  summary__OF__wbprocess: Wbprocess
}


type Db__alter {
  attribute: [String]
}


type Molecule__essential_for {
  species: Species
  essential_for__OF__molecule: Molecule
}


type Oligo_set__overlaps_transcript {
  transcript: Transcript
  overlaps_transcript__OF__oligo_set: Oligo_set
}


type Multi_pt_data {
  gene_b: Multi_pt_data__gene_b
  remark: [Multi_pt_data__remark]
  mapper: [Author]
  locus: [Multi_pt_data__locus]
  gene_a: Multi_pt_data__gene_a
  evidence: String
  allele_a: Variation
  allele_b: Variation
  b_non_a: String
  old_cgc_results: [String]
  combined: String
  rearrangement_a: Rearrangement
  a_non_b: String
  laboratory: [Laboratory]
  rearrangement_b: Rearrangement
  genotype: String
  locus_b: Multi_pt_data__locus_b
  date: String
  locus_a: Multi_pt_data__locus_a
  id: String
  gene: [Multi_pt_data__gene]
  multi_point__OF__rearrangement: [Rearrangement]
}


type Feature__defined_by_sequence {
  sequence: Sequence
  defined_by_sequence__OF__feature: Feature
}


type Timepoint__xyz {
  y: Float
  x: Float
  z: Float
  xyz__OF__timepoint: String
}


type Construct__gene {
  gene: Gene
  gene__OF__construct: Construct
}


type Go_term {
  alt_id: [String]
  type: String
  status: String
  instance: [Go_term]
  definition: [String]
  version: String
  component: [Go_term]
  synonym: [Go_term__synonym]
  ancestor: [Go_term]
  name: [String]
  id: String
  go_term__OF__phenotype__VIA__go_term: [Phenotype__go_term]
  go_term__OF__go_annotation__VIA__go_term_relation: [Go_annotation__go_term_relation]
  component__OF__go_term: [Go_term]
  go_term__OF__motif__VIA__go_term: [Motif__go_term]
  go_term__OF__go_annotation: [Go_annotation]
  cellular_component__OF__picture: [Picture]
  go_term__OF__expr_pattern__VIA__not_in_go_term: [Expr_pattern__not_in_go_term]
  inferred_from_go_term__OF__go_annotation: [Go_annotation]
  go_term__OF__transcript__VIA__go_term: [Transcript__go_term]
  go_term__OF__homology_group: [Homology_group]
  go_term__OF__expr_pattern__VIA__go_term: [Expr_pattern__go_term]
  go_ancestor__OF__anatomy_term: [Anatomy_term]
  go_descendent__OF__anatomy_term: [Anatomy_term]
  instance__OF__go_term: [Go_term]
  go_term_evidence__OF__evidence: [String]
  go_term__OF__paper: [Paper]
  go_term__OF__gene__VIA__go_term: [Gene__go_term]
  go_term__OF__cds__VIA__go_term: [Cds__go_term]
  go_term__OF__anatomy_term__VIA__go_term: [Anatomy_term__go_term]
  go_term__OF__wbprocess__VIA__go_term: [Wbprocess__go_term]
  ancestor__OF__go_term: [Go_term]
  go_term__OF__expression_cluster: [Expression_cluster]
  go_term__OF__phenotype_info__VIA__go_term: [Phenotype_info__go_term]
  go_term__OF__sequence__VIA__go_term: [Sequence__go_term]
}


type Method__remark {
  text: String
  remark__OF__method: Method
}


type Wbprocess__phenotype {
  phenotype: Phenotype
  phenotype__OF__wbprocess: Wbprocess
}


type Pseudogene__database {
  field: Database_field
  database: Database
  version: String
  database__OF__pseudogene: Pseudogene
}


type Anatomy_function__involved {
  anatomy_term: Anatomy_term
  involved__OF__anatomy_function: Anatomy_function
}


type Strain__phenotype {
  phenotype: Phenotype
  phenotype__OF__strain: Strain
}


type Neurodata__gap_junction {
  series: String
  count: Int
  gap_junction__OF__neurodata: String
}


type Library__database {
  accession: String
  database: Database
  field: Database_field
  database__OF__library: Library
}


type Expr_profile {
  expr_map: [Sk_map]
  remark: [Expr_profile__remark]
  rnai_result: [Rnai]
  id: String
  reference: [Expr_profile__reference]
  species: Species
}


type Strain__database {
  field: Database_field
  database: Database
  accession: String
  database__OF__strain: Strain
}


type Phenotype_info__low {
  text: String
  low__OF__phenotype_info: String
}


type Homology_group__remark {
  text: String
  remark__OF__homology_group: Homology_group
}


type Molecule__affects_phenotype_of_variation {
  phenotype: Phenotype
  variation: Variation
  affects_phenotype_of_variation__OF__molecule: Molecule
}


type Expr_pattern__associated_feature {
  feature: Feature
  associated_feature__OF__expr_pattern: Expr_pattern
}


type Rearrangement__location {
  laboratory: Laboratory
  location__OF__rearrangement: Rearrangement
}


type Gene {
  biotype: So_term
  sequence_name: String
  id: String
  strain: [Strain]
  other_description: [Gene__other_description]
  corresponding_pseudogene: [Gene__corresponding_pseudogene]
  other_name: [Gene__other_name]
  functional_pathway: [Gene__functional_pathway]
  disease_relevance: [Gene__disease_relevance]
  corresponding_transcript_history: [Transcript]
  landmark_gene: Boolean
  remark: [Gene__remark]
  legacy_information: [Gene__legacy_information]
  version_change: [Gene__version_change]
  corresponding_pseudogene_history: [Pseudogene]
  public_name: String
  pseudo_map_position: Boolean
  corresponding_cds_history: [Cds]
  acquires_merge: [Gene]
  provisional_description: [Gene__provisional_description]
  evidence: String
  species: Species
  well_ordered: Boolean
  ortholog: [Gene__ortholog]
  transposon_in_origin: Boolean
  corresponding_transposon: [Gene__corresponding_transposon]
  concise_description: [Gene__concise_description]
  corresponding_transcript: [Gene__corresponding_transcript]
  cgc_name: Gene__cgc_name
  functional_physical_interaction: [Gene__functional_physical_interaction]
  molecular_function: [Gene__molecular_function]
  map: Gene__map
  paralog: [Gene__paralog]
  go_term: [Gene__go_term]
  database: [Gene__database]
  sequence_features: [Gene__sequence_features]
  laboratory: [Laboratory]
  ortholog_other: [Gene__ortholog_other]
  interpolated_map_position: Gene__interpolated_map_position
  hide_under: [Gene]
  automated_description: [Gene__automated_description]
  corresponding_cds: [Gene__corresponding_cds]
  complementation_data: [String]
  version: Int
  cloned_by: String
  reference_allele: [Gene__reference_allele]
  status: Gene__status
  rnaseq: [Gene__rnaseq]
  biological_process: [Gene__biological_process]
  expression: [Gene__expression]
  reference: [Paper]
  molecular_name: [String]
  gene_class: Gene_class
  disease_potential_model: [Gene__disease_potential_model]
  disease_experimental_model: [Gene__disease_experimental_model]
  split_into: [Gene]
  other_sequence: [Gene__other_sequence]
  gene__OF__variation__VIA__possibly_affects: [Variation__possibly_affects]
  acquires_merge__OF__gene_history_action: [String]
  gene__OF__expr_pattern__VIA__historical_gene: [Expr_pattern__historical_gene]
  gene__OF__picture: [Picture]
  gene__OF__anatomy_function__VIA__gene: [Anatomy_function__gene]
  gene__OF__pos_neg_data__VIA__gene_1: [Pos_neg_data__gene_1]
  gene__OF__multi_counts__VIA__gene: [Multi_counts__gene]
  main_locus__OF__map: [Map]
  gene__OF__pos_neg_data__VIA__gene_2: [Pos_neg_data__gene_2]
  gene__OF__rearrangement__VIA__gene_inside: [Rearrangement__gene_inside]
  gene__OF__gene__VIA__paralog: [Gene__paralog]
  split_into__OF__gene_history_action: [String]
  regulated_by_gene__OF__expression_cluster: [Expression_cluster]
  product_of__OF__transcription_factor: [Transcription_factor]
  split_from__OF__gene_history_action: [String]
  contains_gene__OF__gene_cluster: [Gene_cluster]
  gene__OF__interaction__VIA__historical_gene: [Interaction__historical_gene]
  gene__OF__position_matrix__VIA__bound_by_gene_product: [Position_matrix__bound_by_gene_product]
  gene__OF__sage_tag__VIA__gene: [Sage_tag__gene]
  gene__OF__phenotype_info__VIA__caused_by_gene: [Phenotype_info__caused_by_gene]
  gene__OF__antibody__VIA__historical_gene: [Antibody__historical_gene]
  gene__OF__gene__VIA__ortholog: [Gene__ortholog]
  gene__OF__expr_pattern__VIA__gene: [Expr_pattern__gene]
  gene__OF__antibody__VIA__gene: [Antibody__gene]
  acquires_merge__OF__gene: [Gene]
  gene__OF__microarray_results__VIA__gene: [Microarray_results__gene]
  gene__OF__wbprocess__VIA__gene: [Wbprocess__gene]
  gene__OF__construct__VIA__historical_gene: [Construct__historical_gene]
  gene__OF__operon__VIA__contains_gene: [Operon__contains_gene]
  merged_into__OF__gene_history_action: [String]
  gene__OF__clone__VIA__negative_gene: [Clone__negative_gene]
  gene__OF__multi_pt_data__VIA__gene_b: [Multi_pt_data__gene_b]
  gene__OF__multi_pt_data__VIA__gene_a: [Multi_pt_data__gene_a]
  gene__OF__feature__VIA__bound_by_product_of: [Feature__bound_by_product_of]
  gene__OF__construct__VIA__gene: [Construct__gene]
  gene__OF__wbprocess__VIA__historical_gene: [Wbprocess__historical_gene]
  gene__OF__expression_cluster__VIA__gene: [Expression_cluster__gene]
  gene__OF__construct__VIA__driven_by_gene: [Construct__driven_by_gene]
  gene__OF__go_annotation: [Go_annotation]
  gene__OF__clone__VIA__positive_gene: [Clone__positive_gene]
  gene__OF__rnai__VIA__gene: [Rnai__gene]
  hide_under__OF__gene: [Gene]
  gene__OF__transcription_factor__VIA__associated_with_gene: [Transcription_factor__associated_with_gene]
  gene__OF__two_point_data__VIA__gene_2: [Two_point_data__gene_2]
  gene__OF__rearrangement__VIA__gene_outside: [Rearrangement__gene_outside]
  gene__OF__two_point_data__VIA__gene_1: [Two_point_data__gene_1]
  gene__OF__feature__VIA__associated_with_gene: [Feature__associated_with_gene]
  gene__OF__interaction__VIA__interactor_overlapping_gene: [Interaction__interactor_overlapping_gene]
  interacting_gene__OF__go_annotation: [Go_annotation]
  gene__OF__variation__VIA__gene: [Variation__gene]
  split_into__OF__gene: [Gene]
  reflects_endogenous_expression_of__OF__expr_pattern: [Expr_pattern]
  gene__OF__multi_pt_data__VIA__gene: [Multi_pt_data__gene]
  gene__OF__construct__VIA__three_prime_utr: [Construct__three_prime_utr]
  gene__OF__balancer: [String]
  gene__OF__go_annotation__VIA__gene_relation: [Go_annotation__gene_relation]
}


type Antibody {
  historical_gene: [Antibody__historical_gene]
  gene: [Antibody__gene]
  antibody_for_disease: [Antibody__antibody_for_disease]
  id: String
  remark: [Antibody__remark]
  reference: [Antibody__reference]
  person: [Person]
  possible_pseudonym_of: [Antibody]
  summary: Antibody__summary
  antigen: Antibody__antigen
  clonality: String
  animal: Antibody__animal
  other_name: [String]
  original_publication: Paper
  location: [Laboratory]
  no_original_reference: Boolean
  unaffiliated_antibody__OF__interaction: [Interaction]
  antibody_info__OF__expr_pattern: [Expr_pattern]
  possible_pseudonym_of__OF__antibody: [Antibody]
  antibody__OF__interactor_info: [String]
}


type Ao_code {
  remark: [Ao_code__remark]
  description: [String]
  id: String
  ao_code__OF__anatomy_function__VIA__assay: [Anatomy_function__assay]
  ao_code__OF__anatomy_term__VIA__go_term: [Anatomy_term__go_term]
}


type Gene__ortholog {
  species: Species
  gene: Gene
  ortholog__OF__gene: Gene
}


type Construct__three_prime_utr {
  gene: Gene
  three_prime_utr__OF__construct: Construct
}


type Gene__other_description {
  text: String
  other_description__OF__gene: Gene
}


type Phenotype_info__genotype {
  text: String
  genotype__OF__phenotype_info: String
}


type Picture__wbprocess {
  wbprocess: Wbprocess
  wbprocess__OF__picture: Picture
}


type Multi_pt_data__locus {
  locus: Locus
  variation: Variation
  locus__OF__multi_pt_data: Multi_pt_data
}


type Operon__deprecated {
  text: String
  deprecated__OF__operon: Operon
}


type Operon {
  public_name: String
  description: Operon__description
  merged_into: Operon__merged_into
  split_into: [Operon__split_into]
  deprecated: [Operon__deprecated]
  remark: [Operon__remark]
  contains_gene: [Operon__contains_gene]
  reference: [Operon__reference]
  id: String
  species: Species
  operon__OF__operon__VIA__split_into: [Operon__split_into]
  operon__OF__operon__VIA__merged_into: [Operon__merged_into]
  operon__OF__feature__VIA__associated_with_operon: [Feature__associated_with_operon]
}


type Two_point_data__one_recombinant {
  x: Int
  wt: Int
  one_recombinant__OF__two_point_data: Two_point_data
}


type Position_matrix {
  bound_by_gene_product: [Position_matrix__bound_by_gene_product]
  values: [String]
  remark: [Position_matrix__remark]
  brief_id: String
  type: String
  transcription_factor: [Position_matrix__transcription_factor]
  id: String
  consensus: [Position_matrix__consensus]
  background: String
  threshold: [Float]
  derived_from_matrix: [Position_matrix]
  sites_used: Int
  description: [Position_matrix__description]
  position_matrix__OF__feature__VIA__associated_with_position_matrix: [Feature__associated_with_position_matrix]
  derived_from_matrix__OF__position_matrix: [Position_matrix]
}


type Clone__in_situ {
  stop: Int
  start: Int
  in_situ__OF__clone: Clone
}


type Motif__go_term {
  go_term: Go_term
  go_code: Go_code
  go_term__OF__motif: Motif
}


type Gene__sequence_features {
  text: String
  sequence_features__OF__gene: Gene
}


type Paper__species {
  species: Species
  species__OF__paper: Paper
}


type Go_annotation__go_term_relation {
  go_term: Go_term
  text: String
  go_term_relation__OF__go_annotation: Go_annotation
}


type Interaction__interaction_summary {
  text: String
  interaction_summary__OF__interaction: Interaction
}


type Paper__author {
  author: Author
  author__OF__paper: Paper
}


type Expression_cluster__anatomy_term {
  anatomy_term: Anatomy_term
  anatomy_term__OF__expression_cluster: Expression_cluster
}


type Transcript__corresponding_cds {
  cds: Cds
  corresponding_cds__OF__transcript: Transcript
}


type Gene__automated_description {
  text: String
  automated_description__OF__gene: Gene
}


type Phenotype_info__pathogen {
  species: Species
  pathogen__OF__phenotype_info: String
}


type Pato_term {
  name: [String]
  status: String
  parent: Boolean
  definition: [String]
  synonym: [String]
  alt_id: [String]
  version: String
  id: String
  child: Boolean
  pato_term__OF__phenotype_info__VIA__go_term: [Phenotype_info__go_term]
  pato_term__OF__phenotype_info__VIA__anatomy_term: [Phenotype_info__anatomy_term]
  pato_term__OF__phenotype_info__VIA__life_stage: [Phenotype_info__life_stage]
  pato_term__OF__phenotype_info__VIA__molecule_affected: [Phenotype_info__molecule_affected]
}


type Sage_tag__predicted_cds {
  cds: Cds
  predicted_cds__OF__sage_tag: Sage_tag
}


type Transgene__remark {
  text: String
  remark__OF__transgene: Transgene
}


type Feature__score {
  text: String
  float: Float
  score__OF__feature: Feature
}


type Phenotype_info__treatment {
  text: String
  treatment__OF__phenotype_info: String
}


type Neurodata__receive_joint {
  series: String
  count: Int
  receive_joint__OF__neurodata: String
}


type Transcript {
  go_term: [Transcript__go_term]
  ignore: String
  detailed_description: [Transcript__detailed_description]
  matching_cdna: [Transcript__matching_cdna]
  remark: [Transcript__remark]
  mrna: String
  lincrna: String
  evidence: String
  asrna: String
  end_not_found: Boolean
  database: [Transcript__database]
  reference: [Transcript__reference]
  snorna: String
  start_not_found: Boolean
  species: Species
  confidential_remark: [String]
  brief_identification: String
  mirna: String
  isoform: String
  id: String
  rrna: String
  ncrna: String
  provisional_description: [Transcript__provisional_description]
  source_exons: [Transcript__source_exons]
  scrna: String
  anticodon: String
  snrna: String
  corresponding_pcr_product: [Pcr_product]
  db_remark: [Transcript__db_remark]
  type: String
  from_laboratory: Laboratory
  snlrna: String
  pirna: String
  concise_description: [Transcript__concise_description]
  rnaseq: [Transcript__rnaseq]
  corresponding_cds: Transcript__corresponding_cds
  transcript__OF__variation__VIA__transcript: [Variation__transcript]
  transcript__OF__sage_tag__VIA__transcript: [Sage_tag__transcript]
  transcript__OF__rnai__VIA__transcript: [Rnai__transcript]
  corresponding_transcript_history__OF__gene: [Gene]
  transcript__OF__gene__VIA__corresponding_transcript: [Gene__corresponding_transcript]
  transcript__OF__microarray_results__VIA__transcript: [Microarray_results__transcript]
  transcript__OF__feature__VIA__associated_with_transcript: [Feature__associated_with_transcript]
  transcript__OF__oligo_set__VIA__overlaps_transcript: [Oligo_set__overlaps_transcript]
}


type Microarray_results__cds {
  cds: Cds
  cds__OF__microarray_results: Microarray_results
}


type Database {
  url_constructor: String
  id: String
  email: [String]
  url: String
  name: String
  description: String
  database__OF__person__VIA__database: [Person__database]
  database__OF__expr_pattern__VIA__db_info: [Expr_pattern__db_info]
  publisher_url__OF__picture: [Picture]
  database__OF__transcript__VIA__database: [Transcript__database]
  database__OF__go_annotation__VIA__go_reference: [Go_annotation__go_reference]
  database__OF__variation__VIA__database: [Variation__database]
  database__OF__anatomy_term__VIA__database: [Anatomy_term__database]
  database__OF__gene__VIA__database: [Gene__database]
  database__OF__cds__VIA__database: [Cds__database]
  database__OF__rnai__VIA__database: [Rnai__database]
  database__OF__sequence__VIA__database: [Sequence__database]
  database__OF__motif__VIA__database: [Motif__database]
  database__OF__protein__VIA__database: [Protein__database]
  database__OF__pseudogene__VIA__database: [Pseudogene__database]
  database__OF__sequence__VIA__from_database: [Sequence__from_database]
  database__OF__strain__VIA__database: [Strain__database]
  database__OF__sequence__VIA__db_annotation: [Sequence__db_annotation]
  database__OF__structure_data__VIA__database: [Structure_data__database]
  database__OF__sequence_collection__VIA__database: [Sequence_collection__database]
  journal_url__OF__picture: [Picture]
  database__OF__picture__VIA__article_url: [Picture__article_url]
  database__OF__evidence__VIA__accession_evidence: [Evidence__accession_evidence]
  database__OF__transposon_family__VIA__db_annotation: [Transposon_family__db_annotation]
  database__OF__do_term__VIA__database: [Do_term__database]
  database__OF__molecule__VIA__database: [Molecule__database]
  database__OF__library__VIA__database: [Library__database]
  database__OF__clone__VIA__database: [Clone__database]
  database__OF__interaction__VIA__database: [Interaction__database]
  database__OF__wbprocess__VIA__database: [Wbprocess__database]
  database__OF__construct__VIA__database: [Construct__database]
  database__OF__analysis__VIA__database: [Analysis__database]
  database__OF__paper__VIA__database: [Paper__database]
  database__OF__homology_group__VIA__database: [Homology_group__database]
  database__OF__go_annotation__VIA__database: [Go_annotation__database]
  database__OF__movie__VIA__db_info: [Movie__db_info]
}


type Rearrangement__locus_inside {
  locus: Locus
  author: Author
  locus_inside__OF__rearrangement: Rearrangement
}


type Variation__pseudogene {
  pseudogene: Pseudogene
  pseudogene__OF__variation: Variation
}


type Strain {
  id: String
  contact: [Person]
  elevation: Strain__elevation
  made_by: [Person]
  date_first_frozen: String
  species: Species
  database: [Strain__database]
  strain_history: [String]
  substrate: String
  cgc_received: [String]
  log_size_of_population: Float
  genotype: String
  other_name: [Strain__other_name]
  inbreeding_state: String
  phenotype_not_observed: [Strain__phenotype_not_observed]
  sampled_by: [String]
  reference: [Strain__reference]
  geolocation: Strain__geolocation
  evidence: String
  outcrossed: String
  picture: [Picture]
  phenotype: [Strain__phenotype]
  landscape: String
  mutagen: [String]
  ncbi_taxonomy: Int
  remark: [Strain__remark]
  life_stage: [Life_stage]
  location: [Strain__location]
  associated_organisms: [Species]
  date: String
  isolated_by: [Person]
  place: String
  wild_isolate: Boolean
  strain__OF__sequence_collection: [Sequence_collection]
  strain__OF__expr_pattern: [Expr_pattern]
  in_strain__OF__clone: [Clone]
  strain__OF__gene: [Gene]
  strain__OF__mass_spec_experiment: [Mass_spec_experiment]
  strain__OF__sequence: [Sequence]
  strain__OF__molecule__VIA__affects_phenotype_of_strain: [Molecule__affects_phenotype_of_strain]
  strain__OF__feature: [Feature]
  strain__OF__phenotype_info__VIA__control_strain: [Phenotype_info__control_strain]
  strain__OF__condition: [Condition]
  strain__OF__phenotype_info__VIA__strain: [Phenotype_info__strain]
  strain__OF__transgene: [Transgene]
  strain__OF__rnai: [Rnai]
  strain__OF__variation__VIA__strain: [Variation__strain]
  strain__OF__rearrangement: [Rearrangement]
  strain__OF__library: [Library]
  reference_strain__OF__rearrangement: [Rearrangement]
  strain__OF__go_annotation__VIA__interacting_species: [Go_annotation__interacting_species]
}


type Sage_experiment__remark {
  text: String
  remark__OF__sage_experiment: Sage_experiment
}


type Transcription_factor {
  species: Species
  remark: [Transcription_factor__remark]
  id: String
  type: [Transcription_factor__type]
  associated_with_gene: [Transcription_factor__associated_with_gene]
  name: String
  product_of: [Gene]
  transcription_factor__OF__feature__VIA__associated_with_transcription_factor: [Feature__associated_with_transcription_factor]
  transcription_factor__OF__position_matrix__VIA__transcription_factor: [Position_matrix__transcription_factor]
}


type Multi_counts__locus {
  int: Int
  locus: Locus
  locus__OF__multi_counts: String
}


type Map_position__with_clone {
  clone: Clone
  with_clone__OF__map_position: String
}


type Sequence__protein_id {
  sequence: Sequence
  accession: String
  version: Int
  protein_id__OF__sequence: Sequence
}


type Interaction__detection_method {
  value: String
  text: String
  detection_method__OF__interaction: Interaction
}


type Variation__cgh_deleted_probes {
  text_a: String
  text_b: String
  cgh_deleted_probes__OF__variation: Variation
}


type Transposon__remark {
  text: String
  remark__OF__transposon: Transposon
}


type Clone__database {
  database: Database
  accession: String
  field: Database_field
  database__OF__clone: Clone
}


type Method__score_bounds {
  max: Float
  min: Float
  score_bounds__OF__method: Method
}


type Molecular_change__frameshift {
  text: String
  frameshift__OF__molecular_change: String
}


type Microarray_results__pseudogene {
  pseudogene: Pseudogene
  pseudogene__OF__microarray_results: Microarray_results
}


type Genetic_code {
  id: String
  ncbi_id: Int
  base2: String
  base1: String
  start: String
  translation: String
  stop: String
  base3: String
  other_name: [String]
  remark: [String]
  genetic_code__OF__sequence: [Sequence]
  genetic_code__OF__cds: [Cds]
}


type Grid {
  no_stagger: Boolean
  id: String
  columns: Int
  size: Grid__size
  space_at: Grid__space_at
  row: [Grid__row]
  xy_labelling: Grid__xy_labelling
  title: [String]
  lines_at: Grid__lines_at
  a1_labelling: Boolean
  grid__OF__clone__VIA__hybridizes_weak: [Clone__hybridizes_weak]
  grid__OF__clone__VIA__does_not_hybridize_to: [Clone__does_not_hybridize_to]
  grid__OF__grid_data: [Grid_data]
  grid__OF__clone__VIA__hybridizes_to: [Clone__hybridizes_to]
}


type Rnai__dna_text {
  sequence: String
  name: String
  dna_text__OF__rnai: Rnai
}


type Molecular_change__readthrough {
  text: String
  readthrough__OF__molecular_change: String
}


type Two_point_data__sex_full {
  y: Int
  x: Int
  xy: Int
  wt: Int
  sex_full__OF__two_point_data: Two_point_data
}


type Expr_pattern__go_term {
  go_term: Go_term
  go_term__OF__expr_pattern: Expr_pattern
}


type Movie__db_info {
  accession: String
  field: Database_field
  database: Database
  db_info__OF__movie: Movie
}


type Sequence__db_annotation {
  database: Database
  longtext: Longtext
  db_annotation__OF__sequence: Sequence
}


type Phenotype_info__remark {
  text: String
  remark__OF__phenotype_info: String
}


type Variation__strain {
  strain: Strain
  strain__OF__variation: Variation
}


type Transgene {
  extrachromosomal: Boolean
  integration_method: String
  reference: [Transgene__reference]
  remark: [Transgene__remark]
  phenotype_not_observed: [Transgene__phenotype_not_observed]
  laboratory: [Transgene__laboratory]
  coinjection_other: [String]
  evidence: String
  mapping_data: [String]
  id: String
  integrated_from: [Transgene]
  transgene_for_disease: [Transgene__transgene_for_disease]
  map_evidence: String
  phenotype: [Transgene__phenotype]
  author: [Author]
  marker_for: [Transgene__marker_for]
  construction_summary: [String]
  strain: [Strain]
  species: Species
  synonym: [String]
  integrated: Boolean
  map: [Transgene__map]
  summary: Transgene__summary
  public_name: String
  integrated_from__OF__transgene: [Transgene]
  transgene__OF__interactor_info: [String]
  rescued_by_transgene__OF__phenotype_info: [String]
  transgene__OF__multi_counts__VIA__transgene: [Multi_counts__transgene]
  transgene__OF__molecule__VIA__affects_phenotype_of_transgene: [Molecule__affects_phenotype_of_transgene]
  corresponding_transgene__OF__variation: [Variation]
  transgene__OF__expr_pattern: [Expr_pattern]
  unaffiliated_transgene__OF__interaction: [Interaction]
  transgene_construct__OF__construct: [Construct]
  marked_by_transgene__OF__rearrangement: [Rearrangement]
  transgene_coinjection__OF__construct: [Construct]
}


type Gene__status {
  status: String
  status__OF__gene: Gene
}


type Gene__other_name {
  text: String
  other_name__OF__gene: Gene
}


type Rearrangement__gene_outside {
  gene: Gene
  gene_outside__OF__rearrangement: Rearrangement
}


type Go_code {
  id: String
  description: [String]
  remark: [Go_code__remark]
  go_code__OF__phenotype__VIA__go_term: [Phenotype__go_term]
  go_code__OF__go_annotation: [Go_annotation]
  go_code__OF__gene__VIA__go_term: [Gene__go_term]
  go_code__OF__cds__VIA__go_term: [Cds__go_term]
  go_code__OF__motif__VIA__go_term: [Motif__go_term]
  go_code__OF__transcript__VIA__go_term: [Transcript__go_term]
  go_code__OF__sequence__VIA__go_term: [Sequence__go_term]
}


type Position_matrix__description {
  text: String
  description__OF__position_matrix: Position_matrix
}


type Molecule__endogenous_in {
  species: Species
  endogenous_in__OF__molecule: Molecule
}


type Molecule__biofunction_role {
  value: String
  text: String
  biofunction_role__OF__molecule: Molecule
}


type Pseudogene__rnaseq {
  fpkm: Float
  stage: Life_stage
  rnaseq__OF__pseudogene: Pseudogene
}


type Interaction__library_screened {
  library: String
  version: Int
  library_screened__OF__interaction: Interaction
}


type Structure_data__remark {
  text: String
  remark__OF__structure_data: Structure_data
}


type Go_annotation__database {
  text: String
  database_field: Database_field
  database: Database
  database__OF__go_annotation: Go_annotation
}


type Gene__biological_process {
  text: String
  biological_process__OF__gene: Gene
}


type Sequence__reference {
  paper: Paper
  reference__OF__sequence: Sequence
}


type Life_stage__remark {
  text: String
  remark__OF__life_stage: Life_stage
}


type Gene__remark {
  text: String
  remark__OF__gene: Gene
}


type Do_term__synonym {
  text: String
  scope: String
  synonym__OF__do_term: Do_term
}


type Cds__go_term {
  go_code: Go_code
  go_term: Go_term
  go_term__OF__cds: Cds
}


type Transcription_factor__remark {
  text: String
  remark__OF__transcription_factor: Transcription_factor
}


type Sequence__date {
  comment: String
  datetype: String
  date__OF__sequence: Sequence
}


type Tree {
  root: Treenode
  description: String
  colour: Boolean
  id: String
  type: String
  descriptive_labels: Boolean
  embedded_tree: [Tree]
  no_header: Boolean
  normalization: Float
  alignment: String
  bootstrap_factor: Float
  hide_bootstraps: Boolean
  tree__OF__treenode: [Treenode]
  embedded_tree__OF__tree: [Tree]
  embedded_tree__OF__treenode: [Treenode]
}


type Interaction__database {
  field: Database_field
  accession: String
  database: Database
  database__OF__interaction: Interaction
}


type Variation__insertion {
  text: String
  insertion__OF__variation: Variation
}


type Sequence {
  from_laboratory: Laboratory
  flipped: Boolean
  source_exons: [Sequence__source_exons]
  db_remark: [Sequence__db_remark]
  strain: Strain
  from_database: Sequence__from_database
  genomic_canonical: Boolean
  ignore: String
  read_coverage: Float
  id: String
  annotated: String
  clone_end_seq_read: [Clone]
  shotgun: String
  anatomy_term: [Anatomy_term]
  mrna: String
  snrna: Boolean
  crc64: String
  ncrna: Boolean
  protein_id: [Sequence__protein_id]
  cdna: [String]
  genomic: Boolean
  map: [Sequence__map]
  overlap_right: Sequence__overlap_right
  gap_right: [Sequence__gap_right]
  submitted: String
  interpolated_map_position: Sequence__interpolated_map_position
  library_construction: String
  clone_left_end: [Sequence__clone_left_end]
  briggsae_canonical: Boolean
  clone_right_end: [Sequence__clone_right_end]
  reference: [Sequence__reference]
  trna: Boolean
  shotgun_complete: String
  species: Species
  oligo: [Sequence__oligo]
  match_type: String
  md5: String
  overlap_left: Sequence
  received: String
  date_directory: String
  est_consensus: Boolean
  clone: [Clone]
  contiguous: String
  keyword: [Keyword]
  genetic_code: Genetic_code
  confidential_remark: [String]
  assembly_tags: [Sequence__assembly_tags]
  db_annotation: [Sequence__db_annotation]
  database: [Sequence__database]
  library: Library
  link: Boolean
  title: String
  go_term: [Sequence__go_term]
  date: [Sequence__date]
  archived: Sequence__archived
  embl_dump_info: String
  snorna: Boolean
  contains_reads: [Sequence]
  paired_read: [Sequence]
  remark: [Sequence__remark]
  show_in_reverse_orientation: Boolean
  secondary_accession: [String]
  finished: String
  mirna: Boolean
  from_author: [Author]
  rrna: Boolean
  life_stage: Life_stage
  analysis: Analysis
  scrna: Boolean
  dna: Sequence__dna
  mapping_target__OF__variation: [Variation]
  sequence__OF__sequence__VIA__protein_id: [Sequence__protein_id]
  sequence__OF__feature__VIA__source_location: [Feature__source_location]
  rst__OF__splice_confirmation: [Splice_confirmation]
  sequence_evidence__OF__evidence: [String]
  sequence__OF__sequence__VIA__overlap_right: [Sequence__overlap_right]
  sequences__OF__sequence_collection: [Sequence_collection]
  sequence__OF__variation__VIA__source_location: [Variation__source_location]
  sequence__OF__expr_pattern: [Expr_pattern]
  parent__OF__locatable: [String]
  inconsistent__OF__splice_confirmation: [Splice_confirmation]
  vector__OF__library: [Library]
  sequence__OF__interaction__VIA__sequence_interactor: [Interaction__sequence_interactor]
  false__OF__splice_confirmation: [Splice_confirmation]
  mapping_target__OF__feature: [Feature]
  contains_reads__OF__sequence: [Sequence]
  sequence__OF__feature__VIA__defined_by_sequence: [Feature__defined_by_sequence]
  paired_read__OF__sequence: [Sequence]
  sequence__OF__rnai: [Rnai]
  utr__OF__splice_confirmation: [Splice_confirmation]
  sequence__OF__pseudogene__VIA__matching_cdna: [Pseudogene__matching_cdna]
  mrna__OF__splice_confirmation: [Splice_confirmation]
  sequence__OF__transcript__VIA__matching_cdna: [Transcript__matching_cdna]
  est__OF__splice_confirmation: [Splice_confirmation]
  sequence__OF__cds__VIA__protein_id: [Cds__protein_id]
  sequence__OF__cds__VIA__matching_cdna: [Cds__matching_cdna]
  overlap_left__OF__sequence: [Sequence]
  ost__OF__splice_confirmation: [Splice_confirmation]
  sequence__OF__gene__VIA__other_sequence: [Gene__other_sequence]
  cdna__OF__splice_confirmation: [Splice_confirmation]
}


type Gene__interpolated_map_position {
  position: Float
  map: Map
  interpolated_map_position__OF__gene: Gene
}


type Method__embl_qualifier {
  text_b: String
  text_a: String
  embl_qualifier__OF__method: Method
}


type Multi_counts__gene {
  gene: Gene
  int: Int
  gene__OF__multi_counts: String
}


type Person {
  last_name: String
  old_address: [Person__old_address]
  last_attempt_to_contact: Person__last_attempt_to_contact
  full_name: String
  last_verified: String
  possibly_publishes_as: [Author]
  worked_with: [Person__worked_with]
  publishes_as: [Author]
  merged_into: Person
  first_name: String
  standard_name: String
  left_the_field: [String]
  comment: [String]
  supervised_by: [Person__supervised_by]
  address: String
  id: String
  also_known_as: [String]
  status: [String]
  database: [Person__database]
  affiliation: [String]
  middle_name: [String]
  postgresql_id: String
  principal_investigator: Boolean
  contact__OF__strain: [Strain]
  person__OF__variation: [Variation]
  made_by__OF__strain: [Strain]
  person__OF__person__VIA__supervised_by: [Person__supervised_by]
  person__OF__antibody: [Antibody]
  person_evidence__OF__phenotype_info: [String]
  person__OF__construct: [Construct]
  registered_lab_members__OF__laboratory: [Laboratory]
  person__OF__gene__VIA__version_change: [Gene__version_change]
  person__OF__rearrangement: [Rearrangement]
  person__OF__paper__VIA__person: [Paper__person]
  person__OF__affiliation: [String]
  person__OF__mass_spec_experiment: [Mass_spec_experiment]
  person__OF__cds__VIA__last_reviewed: [Cds__last_reviewed]
  defined_by_person__OF__feature: [Feature]
  person__OF__person__VIA__worked_with: [Person__worked_with]
  person_evidence__OF__evidence: [String]
  curator_confirmed__OF__evidence: [String]
  merged_into__OF__person: [Person]
  representative__OF__laboratory: [Laboratory]
  person__OF__pseudogene__VIA__last_reviewed: [Pseudogene__last_reviewed]
  past_lab_members__OF__laboratory: [Laboratory]
  person__OF__paper__VIA__not_person: [Paper__not_person]
  curator_confirmed__OF__phenotype_info: [String]
  produced_by_person__OF__clone: [Clone]
  contact__OF__picture: [Picture]
  conducted_by__OF__analysis: [Analysis]
  isolated_by__OF__strain: [Strain]
}


type Mass_spec_experiment {
  anatomy_term: [Anatomy_term]
  reference: [Paper]
  strain: Strain
  genotype: [String]
  instrumentation: String
  false_discovery_rate: Float
  minimum_ion_proportion: Float
  life_stage: [Life_stage]
  digestion: String
  sub_cellular_localization: [String]
  ionisation_source: String
  person: [Person]
  minimum_peptide_length: Int
  multiple_ambiguous_ids_allowed: Boolean
  id: String
  program: [String]
  laboratory: [Laboratory]
  remark: [Mass_spec_experiment__remark]
  author: [Author]
  database: [String]
  species: Species
  mass_spec_experiment__OF__mass_spec_peptide__VIA__mass_spec_experiments: [Mass_spec_peptide__mass_spec_experiments]
  mass_spectrometry__OF__expression_cluster: [Expression_cluster]
}


type Homol_data {
  id: String
}


type Variation__flanking_sequences {
  five_prime: String
  three_prime: String
  flanking_sequences__OF__variation: Variation
}


type Sequence__oligo {
  method: Method
  int_c: Int
  int_b: Int
  oligo: Oligo
  oligo__OF__sequence: Sequence
}


type Expression_cluster {
  microarray_experiment: [Microarray_experiment]
  remark: [Expression_cluster__remark]
  rnaseq: [Analysis]
  anatomy_term: [Expression_cluster__anatomy_term]
  regulated_by_molecule: [Molecule]
  reference: [Expression_cluster__reference]
  algorithm: [String]
  based_on_wb_release: [Int]
  sage_tag: [Expression_cluster__sage_tag]
  expr_pattern: [Expression_cluster__expr_pattern]
  tiling_array: [Analysis]
  life_stage: [Life_stage]
  gene: [Expression_cluster__gene]
  description: [String]
  qpcr: [Analysis]
  id: String
  go_term: [Go_term]
  regulated_by_gene: [Gene]
  species: Species
  mass_spectrometry: [Mass_spec_experiment]
  regulated_by_treatment: [String]
  microarray_results: [Expression_cluster__microarray_results]
  expression_cluster__OF__wbprocess__VIA__expression_cluster: [Wbprocess__expression_cluster]
}


type Phenotype_info__molecule {
  molecule: Molecule
  molecule__OF__phenotype_info: String
}


type Position_matrix__remark {
  text: String
  remark__OF__position_matrix: Position_matrix
}


type Transcription_factor__type {
  text: String
  type__OF__transcription_factor: Transcription_factor
}


type Microarray_results__results {
  microarray_experiment: Microarray_experiment
  results__OF__microarray_results: Microarray_results
}


type Transgene__transgene_for_disease {
  do_term: Do_term
  transgene_for_disease__OF__transgene: Transgene
}


type Clone__location {
  laboratory: Laboratory
  location__OF__clone: Clone
}


type Expression_cluster__sage_tag {
  text: String
  sage_tag: Sage_tag
  sage_tag__OF__expression_cluster: Expression_cluster
}


type Transgene__summary {
  text: String
  summary__OF__transgene: Transgene
}


type Mass_spec_peptide {
  mass_spec_experiments: [Mass_spec_peptide__mass_spec_experiments]
  petide_is_natural: Boolean
  peptide: String
  protein_seq: Protein
  id: String
  mass_spec_evidence__OF__evidence: [String]
  mass_spec__OF__splice_confirmation: [Splice_confirmation]
}


type Reference {
  id: String
  species: [Species]
  remark: [Reference__remark]
  description: [String]
  reference: [Paper]
}


type Rnai {
  genotype: String
  phenotype: [Rnai__phenotype]
  life_stage: Life_stage
  phenotype_not_observed: [Rnai__phenotype_not_observed]
  treatment: String
  laboratory: [Laboratory]
  pseudogene: [Rnai__pseudogene]
  history_name: String
  species: Species
  temperature: Int
  reference: Rnai__reference
  clone: [Clone]
  predicted_gene: [Rnai__predicted_gene]
  dna_text: [Rnai__dna_text]
  remark: [Rnai__remark]
  pcr_product: [Pcr_product]
  delivered_by: String
  sequence: [Sequence]
  transcript: [Rnai__transcript]
  evidence: String
  date: String
  database: [Rnai__database]
  id: String
  strain: Strain
  gene: [Rnai__gene]
  uniquely_mapped: Boolean
  interaction_rnai__OF__interaction: [Interaction]
  rnai__OF__movie: [Movie]
  rnai_evidence__OF__evidence: [String]
  rnai__OF__molecule__VIA__affects_phenotype_of_rnai: [Molecule__affects_phenotype_of_rnai]
  rnai_result__OF__expr_profile: [Expr_profile]
  rnai_result__OF__go_annotation: [Go_annotation]
}


type Two_point_data__recs_all {
  y: Int
  x: Int
  all: Int
  recs_all__OF__two_point_data: Two_point_data
}


type Fressian {
  tag: String
}


type Cds__matching_cdna {
  sequence: Sequence
  matching_cdna__OF__cds: Cds
}


type Variation__map {
  map: Map
  map__OF__variation: Variation
}


type Transposon__corresponding_cds {
  cds: Cds
  corresponding_cds__OF__transposon: Transposon
}


type Two_point_data__locus_1 {
  locus: Locus
  variation: Variation
  locus_1__OF__two_point_data: Two_point_data
}


type Picture__article_url {
  database: Database
  field: Database_field
  accession: String
  article_url__OF__picture: Picture
}


type Anatomy_term__remark {
  text: String
  remark__OF__anatomy_term: Anatomy_term
}


type Two_point_data__locus_2 {
  locus: Locus
  variation: Variation
  locus_2__OF__two_point_data: Two_point_data
}


type Phenotype__synonym {
  text: String
  synonym__OF__phenotype: Phenotype
}


type Clone__map {
  map: Map
  map__OF__clone: Clone
}


type Variation__phenotype_not_observed {
  phenotype: Phenotype
  phenotype_not_observed__OF__variation: Variation
}


type Rnai__predicted_gene {
  cds: Cds
  predicted_gene__OF__rnai: Rnai
}


type Locus__other_name {
  text: String
  other_name__OF__locus: Locus
}


type Splice_confirm {
  mrna: String
  rnaseq: Splice_confirm__rnaseq
  mass_spec: String
  cdna: String
  est: String
  false_splice: String
  rst: String
  inconsistent: String
  homology: String
  ost: String
  utr: String
}


type Pos_neg_data__locus_1 {
  locus: Locus
  variation: Variation
  locus_1__OF__pos_neg_data: Pos_neg_data
}


type Variation__male_mating_efficiency {
  value: String
  male_mating_efficiency__OF__variation: Variation
}


type Pos_neg_data__locus_2 {
  variation: Variation
  locus: Locus
  locus_2__OF__pos_neg_data: Pos_neg_data
}


type Phenotype_info__quantity_description {
  text: String
  quantity_description__OF__phenotype_info: String
}


type Locus {
  detection_method: [String]
  id: String
  remark: [Locus__remark]
  other_name: [Locus__other_name]
  evidence: String
  map: Locus__map
  well_ordered: Boolean
  transposon_insertion: [String]
  status: [String]
  snp_assay: [Locus__snp_assay]
  rflp: [String]
  laboratory: [Laboratory]
  species: Species
  snp: [String]
  locus__OF__multi_pt_data__VIA__locus_b: [Multi_pt_data__locus_b]
  locus__OF__two_point_data__VIA__locus_1: [Two_point_data__locus_1]
  locus__OF__balancer: [String]
  locus__OF__two_point_data__VIA__locus_2: [Two_point_data__locus_2]
  locus__OF__pos_neg_data__VIA__locus_1: [Pos_neg_data__locus_1]
  locus__OF__pos_neg_data__VIA__locus_2: [Pos_neg_data__locus_2]
  locus__OF__rearrangement__VIA__locus_inside: [Rearrangement__locus_inside]
  locus__OF__map_position__VIA__with_locus: [Map_position__with_locus]
  locus__OF__multi_pt_data__VIA__locus_a: [Multi_pt_data__locus_a]
  locus__OF__multi_pt_data__VIA__locus: [Multi_pt_data__locus]
  locus__OF__rearrangement__VIA__locus_outside: [Rearrangement__locus_outside]
  locus__OF__multi_counts__VIA__locus: [Multi_counts__locus]
  locus__OF__clone__VIA__negative_locus: [Clone__negative_locus]
}


type Gene__functional_physical_interaction {
  text: String
  functional_physical_interaction__OF__gene: Gene
}


type Interaction {
  interactor_overlapping_protein: [Interaction__interactor_overlapping_protein]
  variation_interactor: [Interaction__variation_interactor]
  throughput: String
  interaction_summary: [Interaction__interaction_summary]
  unaffiliated_variation: [Variation]
  detection_method: [Interaction__detection_method]
  library_screened: [Interaction__library_screened]
  unaffiliated_construct: [Construct]
  log_likelihood_score: Float
  feature_interactor: [Interaction__feature_interactor]
  regulation_level: [String]
  regulation_result: [Interaction__regulation_result]
  confidence_description: [String]
  from_laboratory: Laboratory
  database: [Interaction__database]
  historical_gene: [Interaction__historical_gene]
  unaffiliated_transgene: [Transgene]
  molecule_interactor: [Interaction__molecule_interactor]
  remark: [Interaction__remark]
  other_interactor: [Interaction__other_interactor]
  paper: [Paper]
  interactor_overlapping_cds: [Interaction__interactor_overlapping_cds]
  type: [String]
  unaffiliated_antibody: [Antibody]
  rearrangement: [Interaction__rearrangement]
  sequence_interactor: [Interaction__sequence_interactor]
  from_company: String
  interaction_rnai: [Rnai]
  unaffiliated_expr_pattern: [Expr_pattern]
  p_value: Float
  interactor_overlapping_gene: [Interaction__interactor_overlapping_gene]
  antibody_remark: [String]
  interaction_phenotype: [Phenotype]
  pcr_interactor: [Interaction__pcr_interactor]
  id: String
  interaction__OF__wbprocess__VIA__interaction: [Wbprocess__interaction]
}


type Phenotype_info__heat_sensitive {
  text: String
  heat_sensitive__OF__phenotype_info: String
}


type Variation__remark {
  text: String
  remark__OF__variation: Variation
}


type Feature__associated_with_pseudogene {
  pseudogene: Pseudogene
  associated_with_pseudogene__OF__feature: Feature
}


type Expr_pattern__anatomy_term {
  anatomy_term: Anatomy_term
  anatomy_term__OF__expr_pattern: Expr_pattern
}


type Transgene__laboratory {
  laboratory: Laboratory
  laboratory__OF__transgene: Transgene
}


type Transgene__phenotype {
  phenotype: Phenotype
  phenotype__OF__transgene: Transgene
}


type Oligo_set__overlaps_cds {
  cds: Cds
  overlaps_cds__OF__oligo_set: Oligo_set
}


type Clone__hybridizes_weak {
  grid: Grid
  clone: Clone
  hybridizes_weak__OF__clone: Clone
}


type Gene_class__former_designating_laboratory {
  until: String
  laboratory: Laboratory
  former_designating_laboratory__OF__gene_class: Gene_class
}


type Clone__bands {
  stop: Int
  start: Int
  bands__OF__clone: Clone
}


type Gene__version_change {
  person: Person
  date: String
  version: Int
  version_change__OF__gene: Gene
}


type Microarray__remark {
  text: String
  remark__OF__microarray: Microarray
}


type Mass_spec_experiment__remark {
  text: String
  remark__OF__mass_spec_experiment: Mass_spec_experiment
}


type Sequence__go_term {
  go_code: Go_code
  go_term: Go_term
  go_term__OF__sequence: Sequence
}


type Paper {
  publication_date: String
  author: [Paper__author]
  page: String
  abstract: [Longtext]
  publisher: String
  go_term: [Go_term]
  keyword: [String]
  journal: String
  erratum_for: [Paper]
  url: [String]
  id: String
  person: [Paper__person]
  not_person: [Paper__not_person]
  affiliation: [String]
  editor: [String]
  type: [Paper__type]
  remark: [Paper__remark]
  species: [Paper__species]
  brief_citation: String
  contained_in: [Paper]
  status: [String]
  merged_into: Paper
  curation_pipeline: [String]
  name: [String]
  title: String
  database: [Paper__database]
  volume: String
  paper__OF__strain__VIA__reference: [Strain__reference]
  reference__OF__reference: [Reference]
  paper__OF__rearrangement__VIA__reference: [Rearrangement__reference]
  embl_reference__OF__embl_dump_info: [String]
  paper__OF__sequence__VIA__reference: [Sequence__reference]
  paper__OF__expr_pattern__VIA__reference: [Expr_pattern__reference]
  paper_evidence__OF__evidence: [String]
  reference__OF__go_annotation: [Go_annotation]
  reference__OF__wbprocess: [Wbprocess]
  paper__OF__operon__VIA__reference: [Operon__reference]
  paper__OF__cds__VIA__reference: [Cds__reference]
  reference__OF__sage_experiment: [Sage_experiment]
  reference__OF__picture: [Picture]
  paper_evidence__OF__phenotype_info: [String]
  original_publication__OF__antibody: [Antibody]
  paper__OF__variation__VIA__reference: [Variation__reference]
  paper__OF__clone__VIA__reference: [Clone__reference]
  paper__OF__life_stage__VIA__reference: [Life_stage__reference]
  paper__OF__author: [Author]
  erratum_for__OF__paper: [Paper]
  paper__OF__transgene__VIA__reference: [Transgene__reference]
  reference__OF__mass_spec_experiment: [Mass_spec_experiment]
  reference__OF__molecule: [Molecule]
  reference__OF__anatomy_function: [Anatomy_function]
  paper__OF__rnai__VIA__reference: [Rnai__reference]
  paper__OF__expr_profile__VIA__reference: [Expr_profile__reference]
  paper__OF__interaction: [Interaction]
  paper__OF__antibody__VIA__reference: [Antibody__reference]
  paper__OF__feature__VIA__defined_by_paper: [Feature__defined_by_paper]
  reference__OF__analysis: [Analysis]
  reference__OF__movie: [Movie]
  reference__OF__gene: [Gene]
  reference__OF__condition: [Condition]
  paper__OF__gene_cluster__VIA__reference: [Gene_cluster__reference]
  paper__OF__expression_cluster__VIA__reference: [Expression_cluster__reference]
  reference__OF__microarray: [Microarray]
  paper__OF__transcript__VIA__reference: [Transcript__reference]
  contained_in__OF__paper: [Paper]
  reference__OF__construct: [Construct]
  merged_into__OF__paper: [Paper]
  reference__OF__microarray_experiment: [Microarray_experiment]
}


type Paper__database {
  database: Database
  accession: String
  field: Database_field
  database__OF__paper: Paper
}


type Locus__map {
  map: Map
  map__OF__locus: Locus
}


type Go_term__synonym {
  text: String
  scope: String
  synonym__OF__go_term: Go_term
}


type Phenotype_info__highEdge {
  node: Phenotype_info__high
  cursor: String
}

type Phenotype_info__highConnection {
  edges: [Phenotype_info__highEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__go_termEdge {
  node: Gene__go_term
  cursor: String
}

type Gene__go_termConnection {
  edges: [Gene__go_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Interaction__molecule_interactorEdge {
  node: Interaction__molecule_interactor
  cursor: String
}

type Interaction__molecule_interactorConnection {
  edges: [Interaction__molecule_interactorEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type AnalysisEdge {
  node: Analysis
  cursor: String
}

type AnalysisConnection {
  edges: [AnalysisEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature__associated_with_operonEdge {
  node: Feature__associated_with_operon
  cursor: String
}

type Feature__associated_with_operonConnection {
  edges: [Feature__associated_with_operonEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transcript__provisional_descriptionEdge {
  node: Transcript__provisional_description
  cursor: String
}

type Transcript__provisional_descriptionConnection {
  edges: [Transcript__provisional_descriptionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transcript__rnaseqEdge {
  node: Transcript__rnaseq
  cursor: String
}

type Transcript__rnaseqConnection {
  edges: [Transcript__rnaseqEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__expressionEdge {
  node: Gene__expression
  cursor: String
}

type Gene__expressionConnection {
  edges: [Gene__expressionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Clone__negative_geneEdge {
  node: Clone__negative_gene
  cursor: String
}

type Clone__negative_geneConnection {
  edges: [Clone__negative_geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type TreenodeEdge {
  node: Treenode
  cursor: String
}

type TreenodeConnection {
  edges: [TreenodeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Role__phdEdge {
  node: Role__phd
  cursor: String
}

type Role__phdConnection {
  edges: [Role__phdEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Operon__referenceEdge {
  node: Operon__reference
  cursor: String
}

type Operon__referenceConnection {
  edges: [Operon__referenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expr_pattern__life_stageEdge {
  node: Expr_pattern__life_stage
  cursor: String
}

type Expr_pattern__life_stageConnection {
  edges: [Expr_pattern__life_stageEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rearrangement__phenotype_not_observedEdge {
  node: Rearrangement__phenotype_not_observed
  cursor: String
}

type Rearrangement__phenotype_not_observedConnection {
  edges: [Rearrangement__phenotype_not_observedEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Reconcellinfo__timepointEdge {
  node: Reconcellinfo__timepoint
  cursor: String
}

type Reconcellinfo__timepointConnection {
  edges: [Reconcellinfo__timepointEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype__primary_nameEdge {
  node: Phenotype__primary_name
  cursor: String
}

type Phenotype__primary_nameConnection {
  edges: [Phenotype__primary_nameEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Map__mapEdge {
  node: Map__map
  cursor: String
}

type Map__mapConnection {
  edges: [Map__mapEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__cold_sensitiveEdge {
  node: Phenotype_info__cold_sensitive
  cursor: String
}

type Phenotype_info__cold_sensitiveConnection {
  edges: [Phenotype_info__cold_sensitiveEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expr_profile__remarkEdge {
  node: Expr_profile__remark
  cursor: String
}

type Expr_profile__remarkConnection {
  edges: [Expr_profile__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__corresponding_cdsEdge {
  node: Gene__corresponding_cds
  cursor: String
}

type Gene__corresponding_cdsConnection {
  edges: [Gene__corresponding_cdsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence__overlap_rightEdge {
  node: Sequence__overlap_right
  cursor: String
}

type Sequence__overlap_rightConnection {
  edges: [Sequence__overlap_rightEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Operon__split_intoEdge {
  node: Operon__split_into
  cursor: String
}

type Operon__split_intoConnection {
  edges: [Operon__split_intoEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type TransposonEdge {
  node: Transposon
  cursor: String
}

type TransposonConnection {
  edges: [TransposonEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Anatomy_function__geneEdge {
  node: Anatomy_function__gene
  cursor: String
}

type Anatomy_function__geneConnection {
  edges: [Anatomy_function__geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Locus__remarkEdge {
  node: Locus__remark
  cursor: String
}

type Locus__remarkConnection {
  edges: [Locus__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Motif__databaseEdge {
  node: Motif__database
  cursor: String
}

type Motif__databaseConnection {
  edges: [Motif__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Clone__does_not_hybridize_toEdge {
  node: Clone__does_not_hybridize_to
  cursor: String
}

type Clone__does_not_hybridize_toConnection {
  edges: [Clone__does_not_hybridize_toEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expression_cluster__expr_patternEdge {
  node: Expression_cluster__expr_pattern
  cursor: String
}

type Expression_cluster__expr_patternConnection {
  edges: [Expression_cluster__expr_patternEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Molecular_change__silentEdge {
  node: Molecular_change__silent
  cursor: String
}

type Molecular_change__silentConnection {
  edges: [Molecular_change__silentEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Multi_counts__alleleEdge {
  node: Multi_counts__allele
  cursor: String
}

type Multi_counts__alleleConnection {
  edges: [Multi_counts__alleleEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__go_termEdge {
  node: Phenotype_info__go_term
  cursor: String
}

type Phenotype_info__go_termConnection {
  edges: [Phenotype_info__go_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Interaction__regulation_resultEdge {
  node: Interaction__regulation_result
  cursor: String
}

type Interaction__regulation_resultConnection {
  edges: [Interaction__regulation_resultEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Method__gene_assemble_methodEdge {
  node: Method__gene_assemble_method
  cursor: String
}

type Method__gene_assemble_methodConnection {
  edges: [Method__gene_assemble_methodEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Contig__mapEdge {
  node: Contig__map
  cursor: String
}

type Contig__mapConnection {
  edges: [Contig__mapEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__caused_by_otherEdge {
  node: Phenotype_info__caused_by_other
  cursor: String
}

type Phenotype_info__caused_by_otherConnection {
  edges: [Phenotype_info__caused_by_otherEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expr_pattern__not_in_life_stageEdge {
  node: Expr_pattern__not_in_life_stage
  cursor: String
}

type Expr_pattern__not_in_life_stageConnection {
  edges: [Expr_pattern__not_in_life_stageEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene_classEdge {
  node: Gene_class
  cursor: String
}

type Gene_classConnection {
  edges: [Gene_classEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Cds__concise_descriptionEdge {
  node: Cds__concise_description
  cursor: String
}

type Cds__concise_descriptionConnection {
  edges: [Cds__concise_descriptionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__legacy_informationEdge {
  node: Gene__legacy_information
  cursor: String
}

type Gene__legacy_informationConnection {
  edges: [Gene__legacy_informationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type CdsEdge {
  node: Cds
  cursor: String
}

type CdsConnection {
  edges: [CdsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Role__assistant_professorEdge {
  node: Role__assistant_professor
  cursor: String
}

type Role__assistant_professorConnection {
  edges: [Role__assistant_professorEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Construct__remarkEdge {
  node: Construct__remark
  cursor: String
}

type Construct__remarkConnection {
  edges: [Construct__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Antibody__historical_geneEdge {
  node: Antibody__historical_gene
  cursor: String
}

type Antibody__historical_geneConnection {
  edges: [Antibody__historical_geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Grid__sizeEdge {
  node: Grid__size
  cursor: String
}

type Grid__sizeConnection {
  edges: [Grid__sizeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Anatomy_term__neurodataEdge {
  node: Anatomy_term__neurodata
  cursor: String
}

type Anatomy_term__neurodataConnection {
  edges: [Anatomy_term__neurodataEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Homology_groupEdge {
  node: Homology_group
  cursor: String
}

type Homology_groupConnection {
  edges: [Homology_groupEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rearrangement__referenceEdge {
  node: Rearrangement__reference
  cursor: String
}

type Rearrangement__referenceConnection {
  edges: [Rearrangement__referenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Map__extentEdge {
  node: Map__extent
  cursor: String
}

type Map__extentConnection {
  edges: [Map__extentEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__complex_mixedEdge {
  node: Two_point_data__complex_mixed
  cursor: String
}

type Two_point_data__complex_mixedConnection {
  edges: [Two_point_data__complex_mixedEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rearrangement__gene_insideEdge {
  node: Rearrangement__gene_inside
  cursor: String
}

type Rearrangement__gene_insideConnection {
  edges: [Rearrangement__gene_insideEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Position_matrix__bound_by_gene_productEdge {
  node: Position_matrix__bound_by_gene_product
  cursor: String
}

type Position_matrix__bound_by_gene_productConnection {
  edges: [Position_matrix__bound_by_gene_productEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Clone__containsEdge {
  node: Clone__contains
  cursor: String
}

type Clone__containsConnection {
  edges: [Clone__containsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature__associated_with_transposonEdge {
  node: Feature__associated_with_transposon
  cursor: String
}

type Feature__associated_with_transposonConnection {
  edges: [Feature__associated_with_transposonEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Microarray_data__remarkEdge {
  node: Microarray_data__remark
  cursor: String
}

type Microarray_data__remarkConnection {
  edges: [Microarray_data__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__backcrossEdge {
  node: Two_point_data__backcross
  cursor: String
}

type Two_point_data__backcrossConnection {
  edges: [Two_point_data__backcrossEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Evidence__author_evidenceEdge {
  node: Evidence__author_evidence
  cursor: String
}

type Evidence__author_evidenceConnection {
  edges: [Evidence__author_evidenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Molecule__detection_methodEdge {
  node: Molecule__detection_method
  cursor: String
}

type Molecule__detection_methodConnection {
  edges: [Molecule__detection_methodEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__back_oneEdge {
  node: Two_point_data__back_one
  cursor: String
}

type Two_point_data__back_oneConnection {
  edges: [Two_point_data__back_oneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rearrangement__mapEdge {
  node: Rearrangement__map
  cursor: String
}

type Rearrangement__mapConnection {
  edges: [Rearrangement__mapEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Splice_confirmation__rnaseqEdge {
  node: Splice_confirmation__rnaseq
  cursor: String
}

type Splice_confirmation__rnaseqConnection {
  edges: [Splice_confirmation__rnaseqEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Neurodata__send_jointEdge {
  node: Neurodata__send_joint
  cursor: String
}

type Neurodata__send_jointConnection {
  edges: [Neurodata__send_jointEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Grid_dataEdge {
  node: Grid_data
  cursor: String
}

type Grid_dataConnection {
  edges: [Grid_dataEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__mutagenEdge {
  node: Variation__mutagen
  cursor: String
}

type Variation__mutagenConnection {
  edges: [Variation__mutagenEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__polymorphic_strain_digestEdge {
  node: Variation__polymorphic_strain_digest
  cursor: String
}

type Variation__polymorphic_strain_digestConnection {
  edges: [Variation__polymorphic_strain_digestEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Structure_data__databaseEdge {
  node: Structure_data__database
  cursor: String
}

type Structure_data__databaseConnection {
  edges: [Structure_data__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__selected_transEdge {
  node: Two_point_data__selected_trans
  cursor: String
}

type Two_point_data__selected_transConnection {
  edges: [Two_point_data__selected_transEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__variation_effectEdge {
  node: Phenotype_info__variation_effect
  cursor: String
}

type Phenotype_info__variation_effectConnection {
  edges: [Phenotype_info__variation_effectEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__molecular_functionEdge {
  node: Gene__molecular_function
  cursor: String
}

type Gene__molecular_functionConnection {
  edges: [Gene__molecular_functionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Molecular_change__nonsenseEdge {
  node: Molecular_change__nonsense
  cursor: String
}

type Molecular_change__nonsenseConnection {
  edges: [Molecular_change__nonsenseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expr_pattern__not_in_go_termEdge {
  node: Expr_pattern__not_in_go_term
  cursor: String
}

type Expr_pattern__not_in_go_termConnection {
  edges: [Expr_pattern__not_in_go_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Grid__space_atEdge {
  node: Grid__space_at
  cursor: String
}

type Grid__space_atConnection {
  edges: [Grid__space_atEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Anatomy_term__termEdge {
  node: Anatomy_term__term
  cursor: String
}

type Anatomy_term__termConnection {
  edges: [Anatomy_term__termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Interaction__interactor_overlapping_geneEdge {
  node: Interaction__interactor_overlapping_gene
  cursor: String
}

type Interaction__interactor_overlapping_geneConnection {
  edges: [Interaction__interactor_overlapping_geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Go_annotation__life_stage_relationEdge {
  node: Go_annotation__life_stage_relation
  cursor: String
}

type Go_annotation__life_stage_relationConnection {
  edges: [Go_annotation__life_stage_relationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Anatomy_function__phenotypeEdge {
  node: Anatomy_function__phenotype
  cursor: String
}

type Anatomy_function__phenotypeConnection {
  edges: [Anatomy_function__phenotypeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expr_pattern__remarkEdge {
  node: Expr_pattern__remark
  cursor: String
}

type Expr_pattern__remarkConnection {
  edges: [Expr_pattern__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Microarray_resultsEdge {
  node: Microarray_results
  cursor: String
}

type Microarray_resultsConnection {
  edges: [Microarray_resultsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Db__exciseEdge {
  node: Db__excise
  cursor: String
}

type Db__exciseConnection {
  edges: [Db__exciseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Wbprocess__historical_geneEdge {
  node: Wbprocess__historical_gene
  cursor: String
}

type Wbprocess__historical_geneConnection {
  edges: [Wbprocess__historical_geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type PictureEdge {
  node: Picture
  cursor: String
}

type PictureConnection {
  edges: [PictureEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rnai__databaseEdge {
  node: Rnai__database
  cursor: String
}

type Rnai__databaseConnection {
  edges: [Rnai__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature__associated_with_geneEdge {
  node: Feature__associated_with_gene
  cursor: String
}

type Feature__associated_with_geneConnection {
  edges: [Feature__associated_with_geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Go_code__remarkEdge {
  node: Go_code__remark
  cursor: String
}

type Go_code__remarkConnection {
  edges: [Go_code__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__databaseEdge {
  node: Variation__database
  cursor: String
}

type Variation__databaseConnection {
  edges: [Variation__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Movie__variationEdge {
  node: Movie__variation
  cursor: String
}

type Movie__variationConnection {
  edges: [Movie__variationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Motif__db_remarkEdge {
  node: Motif__db_remark
  cursor: String
}

type Motif__db_remarkConnection {
  edges: [Motif__db_remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Wbprocess__go_termEdge {
  node: Wbprocess__go_term
  cursor: String
}

type Wbprocess__go_termConnection {
  edges: [Wbprocess__go_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence_collection__statusEdge {
  node: Sequence_collection__status
  cursor: String
}

type Sequence_collection__statusConnection {
  edges: [Sequence_collection__statusEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Antibody__referenceEdge {
  node: Antibody__reference
  cursor: String
}

type Antibody__referenceConnection {
  edges: [Antibody__referenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type DbEdge {
  node: Db
  cursor: String
}

type DbConnection {
  edges: [DbEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__possibly_affectsEdge {
  node: Variation__possibly_affects
  cursor: String
}

type Variation__possibly_affectsConnection {
  edges: [Variation__possibly_affectsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Multi_counts__transgeneEdge {
  node: Multi_counts__transgene
  cursor: String
}

type Multi_counts__transgeneConnection {
  edges: [Multi_counts__transgeneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Construct__laboratoryEdge {
  node: Construct__laboratory
  cursor: String
}

type Construct__laboratoryConnection {
  edges: [Construct__laboratoryEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rnai__phenotype_not_observedEdge {
  node: Rnai__phenotype_not_observed
  cursor: String
}

type Rnai__phenotype_not_observedConnection {
  edges: [Rnai__phenotype_not_observedEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Cds__db_remarkEdge {
  node: Cds__db_remark
  cursor: String
}

type Cds__db_remarkConnection {
  edges: [Cds__db_remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature__associated_with_cdsEdge {
  node: Feature__associated_with_cds
  cursor: String
}

type Feature__associated_with_cdsConnection {
  edges: [Feature__associated_with_cdsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Person__worked_withEdge {
  node: Person__worked_with
  cursor: String
}

type Person__worked_withConnection {
  edges: [Person__worked_withEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__disease_relevanceEdge {
  node: Gene__disease_relevance
  cursor: String
}

type Gene__disease_relevanceConnection {
  edges: [Gene__disease_relevanceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Oligo_set__target_exonsEdge {
  node: Oligo_set__target_exons
  cursor: String
}

type Oligo_set__target_exonsConnection {
  edges: [Oligo_set__target_exonsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Clone__typeEdge {
  node: Clone__type
  cursor: String
}

type Clone__typeConnection {
  edges: [Clone__typeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Method__gff_soEdge {
  node: Method__gff_so
  cursor: String
}

type Method__gff_soConnection {
  edges: [Method__gff_soEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__functional_pathwayEdge {
  node: Gene__functional_pathway
  cursor: String
}

type Gene__functional_pathwayConnection {
  edges: [Gene__functional_pathwayEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Molecule__statusEdge {
  node: Molecule__status
  cursor: String
}

type Molecule__statusConnection {
  edges: [Molecule__statusEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Clone__inside_rearrEdge {
  node: Clone__inside_rearr
  cursor: String
}

type Clone__inside_rearrConnection {
  edges: [Clone__inside_rearrEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Map_position__positionEdge {
  node: Map_position__position
  cursor: String
}

type Map_position__positionConnection {
  edges: [Map_position__positionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pos_neg_data__remarkEdge {
  node: Pos_neg_data__remark
  cursor: String
}

type Pos_neg_data__remarkConnection {
  edges: [Pos_neg_data__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Method__intron_costEdge {
  node: Method__intron_cost
  cursor: String
}

type Method__intron_costConnection {
  edges: [Method__intron_costEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene_clusterEdge {
  node: Gene_cluster
  cursor: String
}

type Gene_clusterConnection {
  edges: [Gene_clusterEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__disease_experimental_modelEdge {
  node: Gene__disease_experimental_model
  cursor: String
}

type Gene__disease_experimental_modelConnection {
  edges: [Gene__disease_experimental_modelEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Do_term__databaseEdge {
  node: Do_term__database
  cursor: String
}

type Do_term__databaseConnection {
  edges: [Do_term__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rnai__pseudogeneEdge {
  node: Rnai__pseudogene
  cursor: String
}

type Rnai__pseudogeneConnection {
  edges: [Rnai__pseudogeneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature__associated_with_variationEdge {
  node: Feature__associated_with_variation
  cursor: String
}

type Feature__associated_with_variationConnection {
  edges: [Feature__associated_with_variationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rearrangement__phenotypeEdge {
  node: Rearrangement__phenotype
  cursor: String
}

type Rearrangement__phenotypeConnection {
  edges: [Rearrangement__phenotypeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pseudogene__concise_descriptionEdge {
  node: Pseudogene__concise_description
  cursor: String
}

type Pseudogene__concise_descriptionConnection {
  edges: [Pseudogene__concise_descriptionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature__associated_with_position_matrixEdge {
  node: Feature__associated_with_position_matrix
  cursor: String
}

type Feature__associated_with_position_matrixConnection {
  edges: [Feature__associated_with_position_matrixEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__remarkEdge {
  node: Two_point_data__remark
  cursor: String
}

type Two_point_data__remarkConnection {
  edges: [Two_point_data__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type ContigEdge {
  node: Contig
  cursor: String
}

type ContigConnection {
  edges: [ContigEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Paper__not_personEdge {
  node: Paper__not_person
  cursor: String
}

type Paper__not_personConnection {
  edges: [Paper__not_personEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Strain__phenotype_not_observedEdge {
  node: Strain__phenotype_not_observed
  cursor: String
}

type Strain__phenotype_not_observedConnection {
  edges: [Strain__phenotype_not_observedEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Protein__databaseEdge {
  node: Protein__database
  cursor: String
}

type Protein__databaseConnection {
  edges: [Protein__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__corresponding_transcriptEdge {
  node: Gene__corresponding_transcript
  cursor: String
}

type Gene__corresponding_transcriptConnection {
  edges: [Gene__corresponding_transcriptEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sage_tagEdge {
  node: Sage_tag
  cursor: String
}

type Sage_tagConnection {
  edges: [Sage_tagEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pos_neg_dataEdge {
  node: Pos_neg_data
  cursor: String
}

type Pos_neg_dataConnection {
  edges: [Pos_neg_dataEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Construct__driven_by_geneEdge {
  node: Construct__driven_by_gene
  cursor: String
}

type Construct__driven_by_geneConnection {
  edges: [Construct__driven_by_geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type CloneEdge {
  node: Clone
  cursor: String
}

type CloneConnection {
  edges: [CloneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transcript__databaseEdge {
  node: Transcript__database
  cursor: String
}

type Transcript__databaseConnection {
  edges: [Transcript__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__control_strainEdge {
  node: Phenotype_info__control_strain
  cursor: String
}

type Phenotype_info__control_strainConnection {
  edges: [Phenotype_info__control_strainEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__deletionEdge {
  node: Variation__deletion
  cursor: String
}

type Variation__deletionConnection {
  edges: [Variation__deletionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expr_pattern__db_infoEdge {
  node: Expr_pattern__db_info
  cursor: String
}

type Expr_pattern__db_infoConnection {
  edges: [Expr_pattern__db_infoEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature__defined_by_paperEdge {
  node: Feature__defined_by_paper
  cursor: String
}

type Feature__defined_by_paperConnection {
  edges: [Feature__defined_by_paperEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__strainEdge {
  node: Phenotype_info__strain
  cursor: String
}

type Phenotype_info__strainConnection {
  edges: [Phenotype_info__strainEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Evidence__accession_evidenceEdge {
  node: Evidence__accession_evidence
  cursor: String
}

type Evidence__accession_evidenceConnection {
  edges: [Evidence__accession_evidenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Anatomy_termEdge {
  node: Anatomy_term
  cursor: String
}

type Anatomy_termConnection {
  edges: [Anatomy_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__sex_cisEdge {
  node: Two_point_data__sex_cis
  cursor: String
}

type Two_point_data__sex_cisConnection {
  edges: [Two_point_data__sex_cisEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Multi_pt_data__gene_aEdge {
  node: Multi_pt_data__gene_a
  cursor: String
}

type Multi_pt_data__gene_aConnection {
  edges: [Multi_pt_data__gene_aEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Molecule__databaseEdge {
  node: Molecule__database
  cursor: String
}

type Molecule__databaseConnection {
  edges: [Molecule__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Anatomy_term__databaseEdge {
  node: Anatomy_term__database
  cursor: String
}

type Anatomy_term__databaseConnection {
  edges: [Anatomy_term__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__mapEdge {
  node: Gene__map
  cursor: String
}

type Gene__mapConnection {
  edges: [Gene__mapEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type WbprocessEdge {
  node: Wbprocess
  cursor: String
}

type WbprocessConnection {
  edges: [WbprocessEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Multi_pt_data__gene_bEdge {
  node: Multi_pt_data__gene_b
  cursor: String
}

type Multi_pt_data__gene_bConnection {
  edges: [Multi_pt_data__gene_bEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Strain__geolocationEdge {
  node: Strain__geolocation
  cursor: String
}

type Strain__geolocationConnection {
  edges: [Strain__geolocationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Laboratory__remarkEdge {
  node: Laboratory__remark
  cursor: String
}

type Laboratory__remarkConnection {
  edges: [Laboratory__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transgene__mapEdge {
  node: Transgene__map
  cursor: String
}

type Transgene__mapConnection {
  edges: [Transgene__mapEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transcript__referenceEdge {
  node: Transcript__reference
  cursor: String
}

type Transcript__referenceConnection {
  edges: [Transcript__referenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Anatomy_function__remarkEdge {
  node: Anatomy_function__remark
  cursor: String
}

type Anatomy_function__remarkConnection {
  edges: [Anatomy_function__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__reference_strain_digestEdge {
  node: Variation__reference_strain_digest
  cursor: String
}

type Variation__reference_strain_digestConnection {
  edges: [Variation__reference_strain_digestEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rearrangement__mutagenEdge {
  node: Rearrangement__mutagen
  cursor: String
}

type Rearrangement__mutagenConnection {
  edges: [Rearrangement__mutagenEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Wbprocess__databaseEdge {
  node: Wbprocess__database
  cursor: String
}

type Wbprocess__databaseConnection {
  edges: [Wbprocess__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__anatomy_termEdge {
  node: Phenotype_info__anatomy_term
  cursor: String
}

type Phenotype_info__anatomy_termConnection {
  edges: [Phenotype_info__anatomy_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Oligo_set__overlaps_pseudogeneEdge {
  node: Oligo_set__overlaps_pseudogene
  cursor: String
}

type Oligo_set__overlaps_pseudogeneConnection {
  edges: [Oligo_set__overlaps_pseudogeneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Interaction__rearrangementEdge {
  node: Interaction__rearrangement
  cursor: String
}

type Interaction__rearrangementConnection {
  edges: [Interaction__rearrangementEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Construct__historical_geneEdge {
  node: Construct__historical_gene
  cursor: String
}

type Construct__historical_geneConnection {
  edges: [Construct__historical_geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Microarray_experiment__remarkEdge {
  node: Microarray_experiment__remark
  cursor: String
}

type Microarray_experiment__remarkConnection {
  edges: [Microarray_experiment__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Go_annotation__molecule_relationEdge {
  node: Go_annotation__molecule_relation
  cursor: String
}

type Go_annotation__molecule_relationConnection {
  edges: [Go_annotation__molecule_relationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Map__centreEdge {
  node: Map__centre
  cursor: String
}

type Map__centreConnection {
  edges: [Map__centreEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__transcriptEdge {
  node: Variation__transcript
  cursor: String
}

type Variation__transcriptConnection {
  edges: [Variation__transcriptEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__one_allEdge {
  node: Two_point_data__one_all
  cursor: String
}

type Two_point_data__one_allConnection {
  edges: [Two_point_data__one_allEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Mixed_grid_row__cloneEdge {
  node: Mixed_grid_row__clone
  cursor: String
}

type Mixed_grid_row__cloneConnection {
  edges: [Mixed_grid_row__cloneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sage_tag__transcriptEdge {
  node: Sage_tag__transcript
  cursor: String
}

type Sage_tag__transcriptConnection {
  edges: [Sage_tag__transcriptEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expr_pattern__geneEdge {
  node: Expr_pattern__gene
  cursor: String
}

type Expr_pattern__geneConnection {
  edges: [Expr_pattern__geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transgene__marker_forEdge {
  node: Transgene__marker_for
  cursor: String
}

type Transgene__marker_forConnection {
  edges: [Transgene__marker_forEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pseudogene__last_reviewedEdge {
  node: Pseudogene__last_reviewed
  cursor: String
}

type Pseudogene__last_reviewedConnection {
  edges: [Pseudogene__last_reviewedEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__hermaphrodite_mating_efficiencyEdge {
  node: Variation__hermaphrodite_mating_efficiency
  cursor: String
}

type Variation__hermaphrodite_mating_efficiencyConnection {
  edges: [Variation__hermaphrodite_mating_efficiencyEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature_dataEdge {
  node: Feature_data
  cursor: String
}

type Feature_dataConnection {
  edges: [Feature_dataEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence__archivedEdge {
  node: Sequence__archived
  cursor: String
}

type Sequence__archivedConnection {
  edges: [Sequence__archivedEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Wbprocess__movieEdge {
  node: Wbprocess__movie
  cursor: String
}

type Wbprocess__movieConnection {
  edges: [Wbprocess__movieEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transcript__db_remarkEdge {
  node: Transcript__db_remark
  cursor: String
}

type Transcript__db_remarkConnection {
  edges: [Transcript__db_remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type SpeciesEdge {
  node: Species
  cursor: String
}

type SpeciesConnection {
  edges: [SpeciesEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Go_annotationEdge {
  node: Go_annotation
  cursor: String
}

type Go_annotationConnection {
  edges: [Go_annotationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type PseudogeneEdge {
  node: Pseudogene
  cursor: String
}

type PseudogeneConnection {
  edges: [PseudogeneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Antibody__antibody_for_diseaseEdge {
  node: Antibody__antibody_for_disease
  cursor: String
}

type Antibody__antibody_for_diseaseConnection {
  edges: [Antibody__antibody_for_diseaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__geneEdge {
  node: Variation__gene
  cursor: String
}

type Variation__geneConnection {
  edges: [Variation__geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Role__highschoolEdge {
  node: Role__highschool
  cursor: String
}

type Role__highschoolConnection {
  edges: [Role__highschoolEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature__source_locationEdge {
  node: Feature__source_location
  cursor: String
}

type Feature__source_locationConnection {
  edges: [Feature__source_locationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Multi_pt_data__geneEdge {
  node: Multi_pt_data__gene
  cursor: String
}

type Multi_pt_data__geneConnection {
  edges: [Multi_pt_data__geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Clone__pmapEdge {
  node: Clone__pmap
  cursor: String
}

type Clone__pmapConnection {
  edges: [Clone__pmapEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Interaction__historical_geneEdge {
  node: Interaction__historical_gene
  cursor: String
}

type Interaction__historical_geneConnection {
  edges: [Interaction__historical_geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature__associated_with_transcriptEdge {
  node: Feature__associated_with_transcript
  cursor: String
}

type Feature__associated_with_transcriptConnection {
  edges: [Feature__associated_with_transcriptEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Clone__canonical_forEdge {
  node: Clone__canonical_for
  cursor: String
}

type Clone__canonical_forConnection {
  edges: [Clone__canonical_forEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type RearrangementEdge {
  node: Rearrangement
  cursor: String
}

type RearrangementConnection {
  edges: [RearrangementEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype__assayEdge {
  node: Phenotype__assay
  cursor: String
}

type Phenotype__assayConnection {
  edges: [Phenotype__assayEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Anatomy_functionEdge {
  node: Anatomy_function
  cursor: String
}

type Anatomy_functionConnection {
  edges: [Anatomy_functionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rnai__geneEdge {
  node: Rnai__gene
  cursor: String
}

type Rnai__geneConnection {
  edges: [Rnai__geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Movie__remarkEdge {
  node: Movie__remark
  cursor: String
}

type Movie__remarkConnection {
  edges: [Movie__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Locus__snp_assayEdge {
  node: Locus__snp_assay
  cursor: String
}

type Locus__snp_assayConnection {
  edges: [Locus__snp_assayEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__caused_by_geneEdge {
  node: Phenotype_info__caused_by_gene
  cursor: String
}

type Phenotype_info__caused_by_geneConnection {
  edges: [Phenotype_info__caused_by_geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transgene__referenceEdge {
  node: Transgene__reference
  cursor: String
}

type Transgene__referenceConnection {
  edges: [Transgene__referenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Anatomy_function__assayEdge {
  node: Anatomy_function__assay
  cursor: String
}

type Anatomy_function__assayConnection {
  edges: [Anatomy_function__assayEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type ConstructEdge {
  node: Construct
  cursor: String
}

type ConstructConnection {
  edges: [ConstructEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Antibody__remarkEdge {
  node: Antibody__remark
  cursor: String
}

type Antibody__remarkConnection {
  edges: [Antibody__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Picture__remarkEdge {
  node: Picture__remark
  cursor: String
}

type Picture__remarkConnection {
  edges: [Picture__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Cds__databaseEdge {
  node: Cds__database
  cursor: String
}

type Cds__databaseConnection {
  edges: [Cds__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Role__sabbaticalEdge {
  node: Role__sabbatical
  cursor: String
}

type Role__sabbaticalConnection {
  edges: [Role__sabbaticalEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type VariationEdge {
  node: Variation
  cursor: String
}

type VariationConnection {
  edges: [VariationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rnai__remarkEdge {
  node: Rnai__remark
  cursor: String
}

type Rnai__remarkConnection {
  edges: [Rnai__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pcr_productEdge {
  node: Pcr_product
  cursor: String
}

type Pcr_productConnection {
  edges: [Pcr_productEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Paper__remarkEdge {
  node: Paper__remark
  cursor: String
}

type Paper__remarkConnection {
  edges: [Paper__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type LibraryEdge {
  node: Library
  cursor: String
}

type LibraryConnection {
  edges: [LibraryEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Anatomy_term__go_termEdge {
  node: Anatomy_term__go_term
  cursor: String
}

type Anatomy_term__go_termConnection {
  edges: [Anatomy_term__go_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Molecule__affects_phenotype_of_strainEdge {
  node: Molecule__affects_phenotype_of_strain
  cursor: String
}

type Molecule__affects_phenotype_of_strainConnection {
  edges: [Molecule__affects_phenotype_of_strainEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Go_annotation__annotation_isoformEdge {
  node: Go_annotation__annotation_isoform
  cursor: String
}

type Go_annotation__annotation_isoformConnection {
  edges: [Go_annotation__annotation_isoformEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Ao_code__remarkEdge {
  node: Ao_code__remark
  cursor: String
}

type Ao_code__remarkConnection {
  edges: [Ao_code__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence_collection__databaseEdge {
  node: Sequence_collection__database
  cursor: String
}

type Sequence_collection__databaseConnection {
  edges: [Sequence_collection__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type DnaEdge {
  node: Dna
  cursor: String
}

type DnaConnection {
  edges: [DnaEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence__db_remarkEdge {
  node: Sequence__db_remark
  cursor: String
}

type Sequence__db_remarkConnection {
  edges: [Sequence__db_remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Interaction__sequence_interactorEdge {
  node: Interaction__sequence_interactor
  cursor: String
}

type Interaction__sequence_interactorConnection {
  edges: [Interaction__sequence_interactorEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Molecule__useEdge {
  node: Molecule__use
  cursor: String
}

type Molecule__useConnection {
  edges: [Molecule__useEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Interaction__interactor_overlapping_cdsEdge {
  node: Interaction__interactor_overlapping_cds
  cursor: String
}

type Interaction__interactor_overlapping_cdsConnection {
  edges: [Interaction__interactor_overlapping_cdsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__expr_patternEdge {
  node: Variation__expr_pattern
  cursor: String
}

type Variation__expr_patternConnection {
  edges: [Variation__expr_patternEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Interaction__pcr_interactorEdge {
  node: Interaction__pcr_interactor
  cursor: String
}

type Interaction__pcr_interactorConnection {
  edges: [Interaction__pcr_interactorEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Person__databaseEdge {
  node: Person__database
  cursor: String
}

type Person__databaseConnection {
  edges: [Person__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Map_position__with_locusEdge {
  node: Map_position__with_locus
  cursor: String
}

type Map_position__with_locusConnection {
  edges: [Map_position__with_locusEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expr_pattern__historical_geneEdge {
  node: Expr_pattern__historical_gene
  cursor: String
}

type Expr_pattern__historical_geneConnection {
  edges: [Expr_pattern__historical_geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Database_fieldEdge {
  node: Database_field
  cursor: String
}

type Database_fieldConnection {
  edges: [Database_fieldEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature__defined_by_analysisEdge {
  node: Feature__defined_by_analysis
  cursor: String
}

type Feature__defined_by_analysisConnection {
  edges: [Feature__defined_by_analysisEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__corresponding_transposonEdge {
  node: Gene__corresponding_transposon
  cursor: String
}

type Gene__corresponding_transposonConnection {
  edges: [Gene__corresponding_transposonEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Mass_spec_peptide__mass_spec_experimentsEdge {
  node: Mass_spec_peptide__mass_spec_experiments
  cursor: String
}

type Mass_spec_peptide__mass_spec_experimentsConnection {
  edges: [Mass_spec_peptide__mass_spec_experimentsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Role__unknownEdge {
  node: Role__unknown
  cursor: String
}

type Role__unknownConnection {
  edges: [Role__unknownEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Cds__detailed_descriptionEdge {
  node: Cds__detailed_description
  cursor: String
}

type Cds__detailed_descriptionConnection {
  edges: [Cds__detailed_descriptionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__ease_of_scoringEdge {
  node: Phenotype_info__ease_of_scoring
  cursor: String
}

type Phenotype_info__ease_of_scoringConnection {
  edges: [Phenotype_info__ease_of_scoringEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Microarray_results__minEdge {
  node: Microarray_results__min
  cursor: String
}

type Microarray_results__minConnection {
  edges: [Microarray_results__minEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transcript__remarkEdge {
  node: Transcript__remark
  cursor: String
}

type Transcript__remarkConnection {
  edges: [Transcript__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Analysis__databaseEdge {
  node: Analysis__database
  cursor: String
}

type Analysis__databaseConnection {
  edges: [Analysis__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Multi_pt_data__remarkEdge {
  node: Multi_pt_data__remark
  cursor: String
}

type Multi_pt_data__remarkConnection {
  edges: [Multi_pt_data__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sage_experimentEdge {
  node: Sage_experiment
  cursor: String
}

type Sage_experimentConnection {
  edges: [Sage_experimentEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Db__sysEdge {
  node: Db__sys
  cursor: String
}

type Db__sysConnection {
  edges: [Db__sysEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transposon__ltr_regionEdge {
  node: Transposon__ltr_region
  cursor: String
}

type Transposon__ltr_regionConnection {
  edges: [Transposon__ltr_regionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Antibody__summaryEdge {
  node: Antibody__summary
  cursor: String
}

type Antibody__summaryConnection {
  edges: [Antibody__summaryEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__dom_selectedEdge {
  node: Two_point_data__dom_selected
  cursor: String
}

type Two_point_data__dom_selectedConnection {
  edges: [Two_point_data__dom_selectedEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Wbprocess__do_termEdge {
  node: Wbprocess__do_term
  cursor: String
}

type Wbprocess__do_termConnection {
  edges: [Wbprocess__do_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Oligo_set__remarkEdge {
  node: Oligo_set__remark
  cursor: String
}

type Oligo_set__remarkConnection {
  edges: [Oligo_set__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Antibody__geneEdge {
  node: Antibody__gene
  cursor: String
}

type Antibody__geneConnection {
  edges: [Antibody__geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Cds__cds_predicted_byEdge {
  node: Cds__cds_predicted_by
  cursor: String
}

type Cds__cds_predicted_byConnection {
  edges: [Cds__cds_predicted_byEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pseudogene__db_remarkEdge {
  node: Pseudogene__db_remark
  cursor: String
}

type Pseudogene__db_remarkConnection {
  edges: [Pseudogene__db_remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Molecular_change__missenseEdge {
  node: Molecular_change__missense
  cursor: String
}

type Molecular_change__missenseConnection {
  edges: [Molecular_change__missenseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Role__undergradEdge {
  node: Role__undergrad
  cursor: String
}

type Role__undergradConnection {
  edges: [Role__undergradEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Map_position__multi_endsEdge {
  node: Map_position__multi_ends
  cursor: String
}

type Map_position__multi_endsConnection {
  edges: [Map_position__multi_endsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__forward_geneticsEdge {
  node: Variation__forward_genetics
  cursor: String
}

type Variation__forward_geneticsConnection {
  edges: [Variation__forward_geneticsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Multi_pt_data__locus_bEdge {
  node: Multi_pt_data__locus_b
  cursor: String
}

type Multi_pt_data__locus_bConnection {
  edges: [Multi_pt_data__locus_bEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Multi_pt_data__locus_aEdge {
  node: Multi_pt_data__locus_a
  cursor: String
}

type Multi_pt_data__locus_aConnection {
  edges: [Multi_pt_data__locus_aEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Operon__merged_intoEdge {
  node: Operon__merged_into
  cursor: String
}

type Operon__merged_intoConnection {
  edges: [Operon__merged_intoEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__reverse_geneticsEdge {
  node: Variation__reverse_genetics
  cursor: String
}

type Variation__reverse_geneticsConnection {
  edges: [Variation__reverse_geneticsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence__from_databaseEdge {
  node: Sequence__from_database
  cursor: String
}

type Sequence__from_databaseConnection {
  edges: [Sequence__from_databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type MapEdge {
  node: Map
  cursor: String
}

type MapConnection {
  edges: [MapEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type MovieEdge {
  node: Movie
  cursor: String
}

type MovieConnection {
  edges: [MovieEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Microarray_results__transcriptEdge {
  node: Microarray_results__transcript
  cursor: String
}

type Microarray_results__transcriptConnection {
  edges: [Microarray_results__transcriptEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type KeywordEdge {
  node: Keyword
  cursor: String
}

type KeywordConnection {
  edges: [KeywordEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transcript__source_exonsEdge {
  node: Transcript__source_exons
  cursor: String
}

type Transcript__source_exonsConnection {
  edges: [Transcript__source_exonsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__testedEdge {
  node: Two_point_data__tested
  cursor: String
}

type Two_point_data__testedConnection {
  edges: [Two_point_data__testedEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pseudogene__typeEdge {
  node: Pseudogene__type
  cursor: String
}

type Pseudogene__typeConnection {
  edges: [Pseudogene__typeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expr_patternEdge {
  node: Expr_pattern
  cursor: String
}

type Expr_patternConnection {
  edges: [Expr_patternEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type AuthorEdge {
  node: Author
  cursor: String
}

type AuthorConnection {
  edges: [AuthorEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Operon__remarkEdge {
  node: Operon__remark
  cursor: String
}

type Operon__remarkConnection {
  edges: [Operon__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__source_locationEdge {
  node: Variation__source_location
  cursor: String
}

type Variation__source_locationConnection {
  edges: [Variation__source_locationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type ConditionEdge {
  node: Condition
  cursor: String
}

type ConditionConnection {
  edges: [ConditionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rearrangement__balancesEdge {
  node: Rearrangement__balances
  cursor: String
}

type Rearrangement__balancesConnection {
  edges: [Rearrangement__balancesEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Anatomy_term__synonymEdge {
  node: Anatomy_term__synonym
  cursor: String
}

type Anatomy_term__synonymConnection {
  edges: [Anatomy_term__synonymEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__temperatureEdge {
  node: Phenotype_info__temperature
  cursor: String
}

type Phenotype_info__temperatureConnection {
  edges: [Phenotype_info__temperatureEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence__dnaEdge {
  node: Sequence__dna
  cursor: String
}

type Sequence__dnaConnection {
  edges: [Sequence__dnaEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__completeEdge {
  node: Phenotype_info__complete
  cursor: String
}

type Phenotype_info__completeConnection {
  edges: [Phenotype_info__completeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence__interpolated_map_positionEdge {
  node: Sequence__interpolated_map_position
  cursor: String
}

type Sequence__interpolated_map_positionConnection {
  edges: [Sequence__interpolated_map_positionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Clone__positive_variationEdge {
  node: Clone__positive_variation
  cursor: String
}

type Clone__positive_variationConnection {
  edges: [Clone__positive_variationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Position_matrix__transcription_factorEdge {
  node: Position_matrix__transcription_factor
  cursor: String
}

type Position_matrix__transcription_factorConnection {
  edges: [Position_matrix__transcription_factorEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Strain__locationEdge {
  node: Strain__location
  cursor: String
}

type Strain__locationConnection {
  edges: [Strain__locationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Structure_dataEdge {
  node: Structure_data
  cursor: String
}

type Structure_dataConnection {
  edges: [Structure_dataEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Clone__outside_rearrEdge {
  node: Clone__outside_rearr
  cursor: String
}

type Clone__outside_rearrConnection {
  edges: [Clone__outside_rearrEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type HomologyEdge {
  node: Homology
  cursor: String
}

type HomologyConnection {
  edges: [HomologyEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Clone__negative_locusEdge {
  node: Clone__negative_locus
  cursor: String
}

type Clone__negative_locusConnection {
  edges: [Clone__negative_locusEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type LongtextEdge {
  node: Longtext
  cursor: String
}

type LongtextConnection {
  edges: [LongtextEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Position_matrix__consensusEdge {
  node: Position_matrix__consensus
  cursor: String
}

type Position_matrix__consensusConnection {
  edges: [Position_matrix__consensusEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature__associated_with_featureEdge {
  node: Feature__associated_with_feature
  cursor: String
}

type Feature__associated_with_featureConnection {
  edges: [Feature__associated_with_featureEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Wbprocess__remarkEdge {
  node: Wbprocess__remark
  cursor: String
}

type Wbprocess__remarkConnection {
  edges: [Wbprocess__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature__deprecatedEdge {
  node: Feature__deprecated
  cursor: String
}

type Feature__deprecatedConnection {
  edges: [Feature__deprecatedEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Wbprocess__anatomy_termEdge {
  node: Wbprocess__anatomy_term
  cursor: String
}

type Wbprocess__anatomy_termConnection {
  edges: [Wbprocess__anatomy_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature__merged_intoEdge {
  node: Feature__merged_into
  cursor: String
}

type Feature__merged_intoConnection {
  edges: [Feature__merged_intoEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pseudogene__brief_identificationEdge {
  node: Pseudogene__brief_identification
  cursor: String
}

type Pseudogene__brief_identificationConnection {
  edges: [Pseudogene__brief_identificationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Microarray_results__remarkEdge {
  node: Microarray_results__remark
  cursor: String
}

type Microarray_results__remarkConnection {
  edges: [Microarray_results__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transcript__matching_cdnaEdge {
  node: Transcript__matching_cdna
  cursor: String
}

type Transcript__matching_cdnaConnection {
  edges: [Transcript__matching_cdnaEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expression_cluster__microarray_resultsEdge {
  node: Expression_cluster__microarray_results
  cursor: String
}

type Expression_cluster__microarray_resultsConnection {
  edges: [Expression_cluster__microarray_resultsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Grid__rowEdge {
  node: Grid__row
  cursor: String
}

type Grid__rowConnection {
  edges: [Grid__rowEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype__remarkEdge {
  node: Phenotype__remark
  cursor: String
}

type Phenotype__remarkConnection {
  edges: [Phenotype__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Neuro_location__sectionEdge {
  node: Neuro_location__section
  cursor: String
}

type Neuro_location__sectionConnection {
  edges: [Neuro_location__sectionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Wbprocess__gene_clusterEdge {
  node: Wbprocess__gene_cluster
  cursor: String
}

type Wbprocess__gene_clusterConnection {
  edges: [Wbprocess__gene_clusterEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__gene_1Edge {
  node: Two_point_data__gene_1
  cursor: String
}

type Two_point_data__gene_1Connection {
  edges: [Two_point_data__gene_1Edge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__gene_2Edge {
  node: Two_point_data__gene_2
  cursor: String
}

type Two_point_data__gene_2Connection {
  edges: [Two_point_data__gene_2Edge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Protein__peptideEdge {
  node: Protein__peptide
  cursor: String
}

type Protein__peptideConnection {
  edges: [Protein__peptideEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence__clone_left_endEdge {
  node: Sequence__clone_left_end
  cursor: String
}

type Sequence__clone_left_endConnection {
  edges: [Sequence__clone_left_endEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Role__research_staffEdge {
  node: Role__research_staff
  cursor: String
}

type Role__research_staffConnection {
  edges: [Role__research_staffEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Strain__remarkEdge {
  node: Strain__remark
  cursor: String
}

type Strain__remarkConnection {
  edges: [Strain__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence__remarkEdge {
  node: Sequence__remark
  cursor: String
}

type Sequence__remarkConnection {
  edges: [Sequence__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Go_annotation__anatomy_relationEdge {
  node: Go_annotation__anatomy_relation
  cursor: String
}

type Go_annotation__anatomy_relationConnection {
  edges: [Go_annotation__anatomy_relationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transposon__copy_statusEdge {
  node: Transposon__copy_status
  cursor: String
}

type Transposon__copy_statusConnection {
  edges: [Transposon__copy_statusEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype__do_termEdge {
  node: Phenotype__do_term
  cursor: String
}

type Phenotype__do_termConnection {
  edges: [Phenotype__do_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__paralogEdge {
  node: Gene__paralog
  cursor: String
}

type Gene__paralogConnection {
  edges: [Gene__paralogEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Wbprocess__geneEdge {
  node: Wbprocess__gene
  cursor: String
}

type Wbprocess__geneConnection {
  edges: [Wbprocess__geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene_class__remarkEdge {
  node: Gene_class__remark
  cursor: String
}

type Gene_class__remarkConnection {
  edges: [Gene_class__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Cds__source_exonsEdge {
  node: Cds__source_exons
  cursor: String
}

type Cds__source_exonsConnection {
  edges: [Cds__source_exonsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__directEdge {
  node: Two_point_data__direct
  cursor: String
}

type Two_point_data__directConnection {
  edges: [Two_point_data__directEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__dom_semiEdge {
  node: Two_point_data__dom_semi
  cursor: String
}

type Two_point_data__dom_semiConnection {
  edges: [Two_point_data__dom_semiEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__maternalEdge {
  node: Phenotype_info__maternal
  cursor: String
}

type Phenotype_info__maternalConnection {
  edges: [Phenotype_info__maternalEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Strain__other_nameEdge {
  node: Strain__other_name
  cursor: String
}

type Strain__other_nameConnection {
  edges: [Strain__other_nameEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Construct__databaseEdge {
  node: Construct__database
  cursor: String
}

type Construct__databaseConnection {
  edges: [Construct__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__other_sequenceEdge {
  node: Gene__other_sequence
  cursor: String
}

type Gene__other_sequenceConnection {
  edges: [Gene__other_sequenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pseudogene__detailed_descriptionEdge {
  node: Pseudogene__detailed_description
  cursor: String
}

type Pseudogene__detailed_descriptionConnection {
  edges: [Pseudogene__detailed_descriptionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transposon_family__remarkEdge {
  node: Transposon_family__remark
  cursor: String
}

type Transposon_family__remarkConnection {
  edges: [Transposon_family__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence__mapEdge {
  node: Sequence__map
  cursor: String
}

type Sequence__mapConnection {
  edges: [Sequence__mapEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type ReconstructionEdge {
  node: Reconstruction
  cursor: String
}

type ReconstructionConnection {
  edges: [ReconstructionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Oligo__pairwise_scoresEdge {
  node: Oligo__pairwise_scores
  cursor: String
}

type Oligo__pairwise_scoresConnection {
  edges: [Oligo__pairwise_scoresEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__predicted_cdsEdge {
  node: Variation__predicted_cds
  cursor: String
}

type Variation__predicted_cdsConnection {
  edges: [Variation__predicted_cdsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__deletion_verificationEdge {
  node: Variation__deletion_verification
  cursor: String
}

type Variation__deletion_verificationConnection {
  edges: [Variation__deletion_verificationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transposon_family__db_annotationEdge {
  node: Transposon_family__db_annotation
  cursor: String
}

type Transposon_family__db_annotationConnection {
  edges: [Transposon_family__db_annotationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type ImporterEdge {
  node: Importer
  cursor: String
}

type ImporterConnection {
  edges: [ImporterEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Life_stageEdge {
  node: Life_stage
  cursor: String
}

type Life_stageConnection {
  edges: [Life_stageEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__provisional_descriptionEdge {
  node: Gene__provisional_description
  cursor: String
}

type Gene__provisional_descriptionConnection {
  edges: [Gene__provisional_descriptionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Map_position__rightEdge {
  node: Map_position__right
  cursor: String
}

type Map_position__rightConnection {
  edges: [Map_position__rightEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__rnaseqEdge {
  node: Gene__rnaseq
  cursor: String
}

type Gene__rnaseqConnection {
  edges: [Gene__rnaseqEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Person__last_attempt_to_contactEdge {
  node: Person__last_attempt_to_contact
  cursor: String
}

type Person__last_attempt_to_contactConnection {
  edges: [Person__last_attempt_to_contactEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Protein__molecular_weightEdge {
  node: Protein__molecular_weight
  cursor: String
}

type Protein__molecular_weightConnection {
  edges: [Protein__molecular_weightEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Ace2soEdge {
  node: Ace2so
  cursor: String
}

type Ace2soConnection {
  edges: [Ace2soEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transcript__detailed_descriptionEdge {
  node: Transcript__detailed_description
  cursor: String
}

type Transcript__detailed_descriptionConnection {
  edges: [Transcript__detailed_descriptionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Neurodata__sendEdge {
  node: Neurodata__send
  cursor: String
}

type Neurodata__sendConnection {
  edges: [Neurodata__sendEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Clone__gelEdge {
  node: Clone__gel
  cursor: String
}

type Clone__gelConnection {
  edges: [Clone__gelEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sage_tag__geneEdge {
  node: Sage_tag__gene
  cursor: String
}

type Sage_tag__geneConnection {
  edges: [Sage_tag__geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__incompleteEdge {
  node: Phenotype_info__incomplete
  cursor: String
}

type Phenotype_info__incompleteConnection {
  edges: [Phenotype_info__incompleteEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type MotifEdge {
  node: Motif
  cursor: String
}

type MotifConnection {
  edges: [MotifEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Role__lab_visitorEdge {
  node: Role__lab_visitor
  cursor: String
}

type Role__lab_visitorConnection {
  edges: [Role__lab_visitorEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Interaction__interactor_overlapping_proteinEdge {
  node: Interaction__interactor_overlapping_protein
  cursor: String
}

type Interaction__interactor_overlapping_proteinConnection {
  edges: [Interaction__interactor_overlapping_proteinEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pseudogene__remarkEdge {
  node: Pseudogene__remark
  cursor: String
}

type Pseudogene__remarkConnection {
  edges: [Pseudogene__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pos_neg_data__gene_2Edge {
  node: Pos_neg_data__gene_2
  cursor: String
}

type Pos_neg_data__gene_2Connection {
  edges: [Pos_neg_data__gene_2Edge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pos_neg_data__gene_1Edge {
  node: Pos_neg_data__gene_1
  cursor: String
}

type Pos_neg_data__gene_1Connection {
  edges: [Pos_neg_data__gene_1Edge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Wbprocess__moleculeEdge {
  node: Wbprocess__molecule
  cursor: String
}

type Wbprocess__moleculeConnection {
  edges: [Wbprocess__moleculeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type PeptideEdge {
  node: Peptide
  cursor: String
}

type PeptideConnection {
  edges: [PeptideEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Wbprocess__interactionEdge {
  node: Wbprocess__interaction
  cursor: String
}

type Wbprocess__interactionConnection {
  edges: [Wbprocess__interactionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type PaceEdge {
  node: Pace
  cursor: String
}

type PaceConnection {
  edges: [PaceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Neurodata__receiveEdge {
  node: Neurodata__receive
  cursor: String
}

type Neurodata__receiveConnection {
  edges: [Neurodata__receiveEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Operon__contains_geneEdge {
  node: Operon__contains_gene
  cursor: String
}

type Operon__contains_geneConnection {
  edges: [Operon__contains_geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Grid__lines_atEdge {
  node: Grid__lines_at
  cursor: String
}

type Grid__lines_atConnection {
  edges: [Grid__lines_atEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expr_profile__referenceEdge {
  node: Expr_profile__reference
  cursor: String
}

type Expr_profile__referenceConnection {
  edges: [Expr_profile__referenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Molecule__affects_phenotype_of_rearrangementEdge {
  node: Molecule__affects_phenotype_of_rearrangement
  cursor: String
}

type Molecule__affects_phenotype_of_rearrangementConnection {
  edges: [Molecule__affects_phenotype_of_rearrangementEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type PhenotypeEdge {
  node: Phenotype
  cursor: String
}

type PhenotypeConnection {
  edges: [PhenotypeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Cds__provisional_descriptionEdge {
  node: Cds__provisional_description
  cursor: String
}

type Cds__provisional_descriptionConnection {
  edges: [Cds__provisional_descriptionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Protein__remarkEdge {
  node: Protein__remark
  cursor: String
}

type Protein__remarkConnection {
  edges: [Protein__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transposon__old_nameEdge {
  node: Transposon__old_name
  cursor: String
}

type Transposon__old_nameConnection {
  edges: [Transposon__old_nameEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type MoleculeEdge {
  node: Molecule
  cursor: String
}

type MoleculeConnection {
  edges: [MoleculeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Antibody__animalEdge {
  node: Antibody__animal
  cursor: String
}

type Antibody__animalConnection {
  edges: [Antibody__animalEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Cds__brief_identificationEdge {
  node: Cds__brief_identification
  cursor: String
}

type Cds__brief_identificationConnection {
  edges: [Cds__brief_identificationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Antibody__antigenEdge {
  node: Antibody__antigen
  cursor: String
}

type Antibody__antigenConnection {
  edges: [Antibody__antigenEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Homology_group__databaseEdge {
  node: Homology_group__database
  cursor: String
}

type Homology_group__databaseConnection {
  edges: [Homology_group__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Molecular_change__splice_siteEdge {
  node: Molecular_change__splice_site
  cursor: String
}

type Molecular_change__splice_siteConnection {
  edges: [Molecular_change__splice_siteEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rnai__transcriptEdge {
  node: Rnai__transcript
  cursor: String
}

type Rnai__transcriptConnection {
  edges: [Rnai__transcriptEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature__remarkEdge {
  node: Feature__remark
  cursor: String
}

type Feature__remarkConnection {
  edges: [Feature__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Paper__personEdge {
  node: Paper__person
  cursor: String
}

type Paper__personConnection {
  edges: [Paper__personEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Map_position__multi_positionEdge {
  node: Map_position__multi_position
  cursor: String
}

type Map_position__multi_positionConnection {
  edges: [Map_position__multi_positionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sage_tag__remarkEdge {
  node: Sage_tag__remark
  cursor: String
}

type Sage_tag__remarkConnection {
  edges: [Sage_tag__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Multi_counts__rearrangementEdge {
  node: Multi_counts__rearrangement
  cursor: String
}

type Multi_counts__rearrangementConnection {
  edges: [Multi_counts__rearrangementEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Wbprocess__expression_clusterEdge {
  node: Wbprocess__expression_cluster
  cursor: String
}

type Wbprocess__expression_clusterConnection {
  edges: [Wbprocess__expression_clusterEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Cds__remarkEdge {
  node: Cds__remark
  cursor: String
}

type Cds__remarkConnection {
  edges: [Cds__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pcr_product__oligoEdge {
  node: Pcr_product__oligo
  cursor: String
}

type Pcr_product__oligoConnection {
  edges: [Pcr_product__oligoEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Strain__elevationEdge {
  node: Strain__elevation
  cursor: String
}

type Strain__elevationConnection {
  edges: [Strain__elevationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence__clone_right_endEdge {
  node: Sequence__clone_right_end
  cursor: String
}

type Sequence__clone_right_endConnection {
  edges: [Sequence__clone_right_endEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Clone__hybridizes_toEdge {
  node: Clone__hybridizes_to
  cursor: String
}

type Clone__hybridizes_toConnection {
  edges: [Clone__hybridizes_toEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Embl_infoEdge {
  node: Embl_info
  cursor: String
}

type Embl_infoConnection {
  edges: [Embl_infoEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transcript__concise_descriptionEdge {
  node: Transcript__concise_description
  cursor: String
}

type Transcript__concise_descriptionConnection {
  edges: [Transcript__concise_descriptionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__corresponding_pseudogeneEdge {
  node: Gene__corresponding_pseudogene
  cursor: String
}

type Gene__corresponding_pseudogeneConnection {
  edges: [Gene__corresponding_pseudogeneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type ProteinEdge {
  node: Protein
  cursor: String
}

type ProteinConnection {
  edges: [ProteinEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Role__mastersEdge {
  node: Role__masters
  cursor: String
}

type Role__mastersConnection {
  edges: [Role__mastersEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Operon__descriptionEdge {
  node: Operon__description
  cursor: String
}

type Operon__descriptionConnection {
  edges: [Operon__descriptionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Microarray_results__geneEdge {
  node: Microarray_results__gene
  cursor: String
}

type Microarray_results__geneConnection {
  edges: [Microarray_results__geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Lane__bandEdge {
  node: Lane__band
  cursor: String
}

type Lane__bandConnection {
  edges: [Lane__bandEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Motif__remarkEdge {
  node: Motif__remark
  cursor: String
}

type Motif__remarkConnection {
  edges: [Motif__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__selectedEdge {
  node: Two_point_data__selected
  cursor: String
}

type Two_point_data__selectedConnection {
  edges: [Two_point_data__selectedEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature__bound_by_product_ofEdge {
  node: Feature__bound_by_product_of
  cursor: String
}

type Feature__bound_by_product_ofConnection {
  edges: [Feature__bound_by_product_ofEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__dom_letEdge {
  node: Two_point_data__dom_let
  cursor: String
}

type Two_point_data__dom_letConnection {
  edges: [Two_point_data__dom_letEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Microarray_results__maxEdge {
  node: Microarray_results__max
  cursor: String
}

type Microarray_results__maxConnection {
  edges: [Microarray_results__maxEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__phenotypeEdge {
  node: Variation__phenotype
  cursor: String
}

type Variation__phenotypeConnection {
  edges: [Variation__phenotypeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transposon__corresponding_pseudogeneEdge {
  node: Transposon__corresponding_pseudogene
  cursor: String
}

type Transposon__corresponding_pseudogeneConnection {
  edges: [Transposon__corresponding_pseudogeneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Oligo_setEdge {
  node: Oligo_set
  cursor: String
}

type Oligo_setConnection {
  edges: [Oligo_setEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Go_annotation__go_referenceEdge {
  node: Go_annotation__go_reference
  cursor: String
}

type Go_annotation__go_referenceConnection {
  edges: [Go_annotation__go_referenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__fullEdge {
  node: Two_point_data__full
  cursor: String
}

type Two_point_data__fullConnection {
  edges: [Two_point_data__fullEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Molecule__affects_phenotype_of_transgeneEdge {
  node: Molecule__affects_phenotype_of_transgene
  cursor: String
}

type Molecule__affects_phenotype_of_transgeneConnection {
  edges: [Molecule__affects_phenotype_of_transgeneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Db__installEdge {
  node: Db__install
  cursor: String
}

type Db__installConnection {
  edges: [Db__installEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__concise_descriptionEdge {
  node: Gene__concise_description
  cursor: String
}

type Gene__concise_descriptionConnection {
  edges: [Gene__concise_descriptionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__referenceEdge {
  node: Variation__reference
  cursor: String
}

type Variation__referenceConnection {
  edges: [Variation__referenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__quantityEdge {
  node: Phenotype_info__quantity
  cursor: String
}

type Phenotype_info__quantityConnection {
  edges: [Phenotype_info__quantityEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pace__xrefEdge {
  node: Pace__xref
  cursor: String
}

type Pace__xrefConnection {
  edges: [Pace__xrefEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Construct__summaryEdge {
  node: Construct__summary
  cursor: String
}

type Construct__summaryConnection {
  edges: [Construct__summaryEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__databaseEdge {
  node: Gene__database
  cursor: String
}

type Gene__databaseConnection {
  edges: [Gene__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__rangeEdge {
  node: Phenotype_info__range
  cursor: String
}

type Phenotype_info__rangeConnection {
  edges: [Phenotype_info__rangeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Clone__positive_geneEdge {
  node: Clone__positive_gene
  cursor: String
}

type Clone__positive_geneConnection {
  edges: [Clone__positive_geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Molecule__remarkEdge {
  node: Molecule__remark
  cursor: String
}

type Molecule__remarkConnection {
  edges: [Molecule__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_dataEdge {
  node: Two_point_data
  cursor: String
}

type Two_point_dataConnection {
  edges: [Two_point_dataEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__molecule_affectedEdge {
  node: Phenotype_info__molecule_affected
  cursor: String
}

type Phenotype_info__molecule_affectedConnection {
  edges: [Phenotype_info__molecule_affectedEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Role__postdocEdge {
  node: Role__postdoc
  cursor: String
}

type Role__postdocConnection {
  edges: [Role__postdocEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__cgc_nameEdge {
  node: Gene__cgc_name
  cursor: String
}

type Gene__cgc_nameConnection {
  edges: [Gene__cgc_nameEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rnai__referenceEdge {
  node: Rnai__reference
  cursor: String
}

type Rnai__referenceConnection {
  edges: [Rnai__referenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Splice_confirmationEdge {
  node: Splice_confirmation
  cursor: String
}

type Splice_confirmationConnection {
  edges: [Splice_confirmationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence__source_exonsEdge {
  node: Sequence__source_exons
  cursor: String
}

type Sequence__source_exonsConnection {
  edges: [Sequence__source_exonsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Molecule__extraction_methodEdge {
  node: Molecule__extraction_method
  cursor: String
}

type Molecule__extraction_methodConnection {
  edges: [Molecule__extraction_methodEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence__databaseEdge {
  node: Sequence__database
  cursor: String
}

type Sequence__databaseConnection {
  edges: [Sequence__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expression_cluster__remarkEdge {
  node: Expression_cluster__remark
  cursor: String
}

type Expression_cluster__remarkConnection {
  edges: [Expression_cluster__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__dom_oneEdge {
  node: Two_point_data__dom_one
  cursor: String
}

type Two_point_data__dom_oneConnection {
  edges: [Two_point_data__dom_oneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Condition__remarkEdge {
  node: Condition__remark
  cursor: String
}

type Condition__remarkConnection {
  edges: [Condition__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Anatomy_term__reconstructionEdge {
  node: Anatomy_term__reconstruction
  cursor: String
}

type Anatomy_term__reconstructionConnection {
  edges: [Anatomy_term__reconstructionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence__gap_rightEdge {
  node: Sequence__gap_right
  cursor: String
}

type Sequence__gap_rightConnection {
  edges: [Sequence__gap_rightEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rearrangement__locus_outsideEdge {
  node: Rearrangement__locus_outside
  cursor: String
}

type Rearrangement__locus_outsideConnection {
  edges: [Rearrangement__locus_outsideEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__reference_alleleEdge {
  node: Gene__reference_allele
  cursor: String
}

type Gene__reference_alleleConnection {
  edges: [Gene__reference_alleleEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transcription_factor__associated_with_geneEdge {
  node: Transcription_factor__associated_with_gene
  cursor: String
}

type Transcription_factor__associated_with_geneConnection {
  edges: [Transcription_factor__associated_with_geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene_history_action__changed_classEdge {
  node: Gene_history_action__changed_class
  cursor: String
}

type Gene_history_action__changed_classConnection {
  edges: [Gene_history_action__changed_classEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Map_position__leftEdge {
  node: Map_position__left
  cursor: String
}

type Map_position__leftConnection {
  edges: [Map_position__leftEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Reconstruction__remarkEdge {
  node: Reconstruction__remark
  cursor: String
}

type Reconstruction__remarkConnection {
  edges: [Reconstruction__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Microarray_data__range_within_paperEdge {
  node: Microarray_data__range_within_paper
  cursor: String
}

type Microarray_data__range_within_paperConnection {
  edges: [Microarray_data__range_within_paperEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature__flanking_sequencesEdge {
  node: Feature__flanking_sequences
  cursor: String
}

type Feature__flanking_sequencesConnection {
  edges: [Feature__flanking_sequencesEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Grid__xy_labellingEdge {
  node: Grid__xy_labelling
  cursor: String
}

type Grid__xy_labellingConnection {
  edges: [Grid__xy_labellingEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Cds__referenceEdge {
  node: Cds__reference
  cursor: String
}

type Cds__referenceConnection {
  edges: [Cds__referenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Cds__corresponding_proteinEdge {
  node: Cds__corresponding_protein
  cursor: String
}

type Cds__corresponding_proteinConnection {
  edges: [Cds__corresponding_proteinEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Go_annotation__interacting_speciesEdge {
  node: Go_annotation__interacting_species
  cursor: String
}

type Go_annotation__interacting_speciesConnection {
  edges: [Go_annotation__interacting_speciesEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type OligoEdge {
  node: Oligo
  cursor: String
}

type OligoConnection {
  edges: [OligoEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Position_matrix__valueEdge {
  node: Position_matrix__value
  cursor: String
}

type Position_matrix__valueConnection {
  edges: [Position_matrix__valueEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Go_annotation__gene_relationEdge {
  node: Go_annotation__gene_relation
  cursor: String
}

type Go_annotation__gene_relationConnection {
  edges: [Go_annotation__gene_relationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Do_termEdge {
  node: Do_term
  cursor: String
}

type Do_termConnection {
  edges: [Do_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__sex_oneEdge {
  node: Two_point_data__sex_one
  cursor: String
}

type Two_point_data__sex_oneConnection {
  edges: [Two_point_data__sex_oneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expression_cluster__geneEdge {
  node: Expression_cluster__gene
  cursor: String
}

type Expression_cluster__geneConnection {
  edges: [Expression_cluster__geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Person__supervised_byEdge {
  node: Person__supervised_by
  cursor: String
}

type Person__supervised_byConnection {
  edges: [Person__supervised_byEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Interaction__remarkEdge {
  node: Interaction__remark
  cursor: String
}

type Interaction__remarkConnection {
  edges: [Interaction__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence_collectionEdge {
  node: Sequence_collection
  cursor: String
}

type Sequence_collectionConnection {
  edges: [Sequence_collectionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Anatomy_function__not_involvedEdge {
  node: Anatomy_function__not_involved
  cursor: String
}

type Anatomy_function__not_involvedConnection {
  edges: [Anatomy_function__not_involvedEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Cds__cdsEdge {
  node: Cds__cds
  cursor: String
}

type Cds__cdsConnection {
  edges: [Cds__cdsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pseudogene__source_exonsEdge {
  node: Pseudogene__source_exons
  cursor: String
}

type Pseudogene__source_exonsConnection {
  edges: [Pseudogene__source_exonsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sage_tag__resultsEdge {
  node: Sage_tag__results
  cursor: String
}

type Sage_tag__resultsConnection {
  edges: [Sage_tag__resultsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transposon_familyEdge {
  node: Transposon_family
  cursor: String
}

type Transposon_familyConnection {
  edges: [Transposon_familyEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Cds__last_reviewedEdge {
  node: Cds__last_reviewed
  cursor: String
}

type Cds__last_reviewedConnection {
  edges: [Cds__last_reviewedEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__one_letEdge {
  node: Two_point_data__one_let
  cursor: String
}

type Two_point_data__one_letConnection {
  edges: [Two_point_data__one_letEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Cds__rnaseqEdge {
  node: Cds__rnaseq
  cursor: String
}

type Cds__rnaseqConnection {
  edges: [Cds__rnaseqEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Person__old_addressEdge {
  node: Person__old_address
  cursor: String
}

type Person__old_addressConnection {
  edges: [Person__old_addressEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rnai__phenotypeEdge {
  node: Rnai__phenotype
  cursor: String
}

type Rnai__phenotypeConnection {
  edges: [Rnai__phenotypeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Molecule__affects_phenotype_of_rnaiEdge {
  node: Molecule__affects_phenotype_of_rnai
  cursor: String
}

type Molecule__affects_phenotype_of_rnaiConnection {
  edges: [Molecule__affects_phenotype_of_rnaiEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype__go_termEdge {
  node: Phenotype__go_term
  cursor: String
}

type Phenotype__go_termConnection {
  edges: [Phenotype__go_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__life_stageEdge {
  node: Phenotype_info__life_stage
  cursor: String
}

type Phenotype_info__life_stageConnection {
  edges: [Phenotype_info__life_stageEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Anatomy_term__definitionEdge {
  node: Anatomy_term__definition
  cursor: String
}

type Anatomy_term__definitionConnection {
  edges: [Anatomy_term__definitionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sk_map__remarkEdge {
  node: Sk_map__remark
  cursor: String
}

type Sk_map__remarkConnection {
  edges: [Sk_map__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expr_pattern__not_in_anatomy_termEdge {
  node: Expr_pattern__not_in_anatomy_term
  cursor: String
}

type Expr_pattern__not_in_anatomy_termConnection {
  edges: [Expr_pattern__not_in_anatomy_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__disease_potential_modelEdge {
  node: Gene__disease_potential_model
  cursor: String
}

type Gene__disease_potential_modelConnection {
  edges: [Gene__disease_potential_modelEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pcr_product__remarkEdge {
  node: Pcr_product__remark
  cursor: String
}

type Pcr_product__remarkConnection {
  edges: [Pcr_product__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rearrangement__remarkEdge {
  node: Rearrangement__remark
  cursor: String
}

type Rearrangement__remarkConnection {
  edges: [Rearrangement__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Interaction__variation_interactorEdge {
  node: Interaction__variation_interactor
  cursor: String
}

type Interaction__variation_interactorConnection {
  edges: [Interaction__variation_interactorEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Microarray_experimentEdge {
  node: Microarray_experiment
  cursor: String
}

type Microarray_experimentConnection {
  edges: [Microarray_experimentEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sk_mapEdge {
  node: Sk_map
  cursor: String
}

type Sk_mapConnection {
  edges: [Sk_mapEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__ortholog_otherEdge {
  node: Gene__ortholog_other
  cursor: String
}

type Gene__ortholog_otherConnection {
  edges: [Gene__ortholog_otherEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene_cluster__referenceEdge {
  node: Gene_cluster__reference
  cursor: String
}

type Gene_cluster__referenceConnection {
  edges: [Gene_cluster__referenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence__assembly_tagsEdge {
  node: Sequence__assembly_tags
  cursor: String
}

type Sequence__assembly_tagsConnection {
  edges: [Sequence__assembly_tagsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type FeatureEdge {
  node: Feature
  cursor: String
}

type FeatureConnection {
  edges: [FeatureEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype__descriptionEdge {
  node: Phenotype__description
  cursor: String
}

type Phenotype__descriptionConnection {
  edges: [Phenotype__descriptionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Splice_confirm__rnaseqEdge {
  node: Splice_confirm__rnaseq
  cursor: String
}

type Splice_confirm__rnaseqConnection {
  edges: [Splice_confirm__rnaseqEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Interaction__other_interactorEdge {
  node: Interaction__other_interactor
  cursor: String
}

type Interaction__other_interactorConnection {
  edges: [Interaction__other_interactorEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transgene__phenotype_not_observedEdge {
  node: Transgene__phenotype_not_observed
  cursor: String
}

type Transgene__phenotype_not_observedConnection {
  edges: [Transgene__phenotype_not_observedEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Strain__referenceEdge {
  node: Strain__reference
  cursor: String
}

type Strain__referenceConnection {
  edges: [Strain__referenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Cds__protein_idEdge {
  node: Cds__protein_id
  cursor: String
}

type Cds__protein_idConnection {
  edges: [Cds__protein_idEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature__associated_with_transcription_factorEdge {
  node: Feature__associated_with_transcription_factor
  cursor: String
}

type Feature__associated_with_transcription_factorConnection {
  edges: [Feature__associated_with_transcription_factorEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Wbprocess__life_stageEdge {
  node: Wbprocess__life_stage
  cursor: String
}

type Wbprocess__life_stageConnection {
  edges: [Wbprocess__life_stageEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transcript__go_termEdge {
  node: Transcript__go_term
  cursor: String
}

type Transcript__go_termConnection {
  edges: [Transcript__go_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Protein__historyEdge {
  node: Protein__history
  cursor: String
}

type Protein__historyConnection {
  edges: [Protein__historyEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__phenotype_remarkEdge {
  node: Variation__phenotype_remark
  cursor: String
}

type Variation__phenotype_remarkConnection {
  edges: [Variation__phenotype_remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Life_stage__referenceEdge {
  node: Life_stage__reference
  cursor: String
}

type Life_stage__referenceConnection {
  edges: [Life_stage__referenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Clone__referenceEdge {
  node: Clone__reference
  cursor: String
}

type Clone__referenceConnection {
  edges: [Clone__referenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pseudogene__matching_cdnaEdge {
  node: Pseudogene__matching_cdna
  cursor: String
}

type Pseudogene__matching_cdnaConnection {
  edges: [Pseudogene__matching_cdnaEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype__short_nameEdge {
  node: Phenotype__short_name
  cursor: String
}

type Phenotype__short_nameConnection {
  edges: [Phenotype__short_nameEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type MethodEdge {
  node: Method
  cursor: String
}

type MethodConnection {
  edges: [MethodEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expression_cluster__referenceEdge {
  node: Expression_cluster__reference
  cursor: String
}

type Expression_cluster__referenceConnection {
  edges: [Expression_cluster__referenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__imageEdge {
  node: Phenotype_info__image
  cursor: String
}

type Phenotype_info__imageConnection {
  edges: [Phenotype_info__imageEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__statusEdge {
  node: Variation__status
  cursor: String
}

type Variation__statusConnection {
  edges: [Variation__statusEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__interpolated_map_positionEdge {
  node: Variation__interpolated_map_position
  cursor: String
}

type Variation__interpolated_map_positionConnection {
  edges: [Variation__interpolated_map_positionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Contig__pmapEdge {
  node: Contig__pmap
  cursor: String
}

type Contig__pmapConnection {
  edges: [Contig__pmapEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__substitutionEdge {
  node: Variation__substitution
  cursor: String
}

type Variation__substitutionConnection {
  edges: [Variation__substitutionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type MicroarrayEdge {
  node: Microarray
  cursor: String
}

type MicroarrayConnection {
  edges: [MicroarrayEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Role__collaboratedEdge {
  node: Role__collaborated
  cursor: String
}

type Role__collaboratedConnection {
  edges: [Role__collaboratedEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Construct__construct_for_diseaseEdge {
  node: Construct__construct_for_disease
  cursor: String
}

type Construct__construct_for_diseaseConnection {
  edges: [Construct__construct_for_diseaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Reference__remarkEdge {
  node: Reference__remark
  cursor: String
}

type Reference__remarkConnection {
  edges: [Reference__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type LaboratoryEdge {
  node: Laboratory
  cursor: String
}

type LaboratoryConnection {
  edges: [LaboratoryEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Paper__typeEdge {
  node: Paper__type
  cursor: String
}

type Paper__typeConnection {
  edges: [Paper__typeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Interaction__feature_interactorEdge {
  node: Interaction__feature_interactor
  cursor: String
}

type Interaction__feature_interactorConnection {
  edges: [Interaction__feature_interactorEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Lab_location__remarkEdge {
  node: Lab_location__remark
  cursor: String
}

type Lab_location__remarkConnection {
  edges: [Lab_location__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type So_termEdge {
  node: So_term
  cursor: String
}

type So_termConnection {
  edges: [So_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pseudogene__provisional_descriptionEdge {
  node: Pseudogene__provisional_description
  cursor: String
}

type Pseudogene__provisional_descriptionConnection {
  edges: [Pseudogene__provisional_descriptionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sage_tag__pseudogeneEdge {
  node: Sage_tag__pseudogene
  cursor: String
}

type Sage_tag__pseudogeneConnection {
  edges: [Sage_tag__pseudogeneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expr_pattern__referenceEdge {
  node: Expr_pattern__reference
  cursor: String
}

type Expr_pattern__referenceConnection {
  edges: [Expr_pattern__referenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Wbprocess__summaryEdge {
  node: Wbprocess__summary
  cursor: String
}

type Wbprocess__summaryConnection {
  edges: [Wbprocess__summaryEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Db__alterEdge {
  node: Db__alter
  cursor: String
}

type Db__alterConnection {
  edges: [Db__alterEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Molecule__essential_forEdge {
  node: Molecule__essential_for
  cursor: String
}

type Molecule__essential_forConnection {
  edges: [Molecule__essential_forEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Oligo_set__overlaps_transcriptEdge {
  node: Oligo_set__overlaps_transcript
  cursor: String
}

type Oligo_set__overlaps_transcriptConnection {
  edges: [Oligo_set__overlaps_transcriptEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Multi_pt_dataEdge {
  node: Multi_pt_data
  cursor: String
}

type Multi_pt_dataConnection {
  edges: [Multi_pt_dataEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature__defined_by_sequenceEdge {
  node: Feature__defined_by_sequence
  cursor: String
}

type Feature__defined_by_sequenceConnection {
  edges: [Feature__defined_by_sequenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Timepoint__xyzEdge {
  node: Timepoint__xyz
  cursor: String
}

type Timepoint__xyzConnection {
  edges: [Timepoint__xyzEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Construct__geneEdge {
  node: Construct__gene
  cursor: String
}

type Construct__geneConnection {
  edges: [Construct__geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Go_termEdge {
  node: Go_term
  cursor: String
}

type Go_termConnection {
  edges: [Go_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Method__remarkEdge {
  node: Method__remark
  cursor: String
}

type Method__remarkConnection {
  edges: [Method__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Wbprocess__phenotypeEdge {
  node: Wbprocess__phenotype
  cursor: String
}

type Wbprocess__phenotypeConnection {
  edges: [Wbprocess__phenotypeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pseudogene__databaseEdge {
  node: Pseudogene__database
  cursor: String
}

type Pseudogene__databaseConnection {
  edges: [Pseudogene__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Anatomy_function__involvedEdge {
  node: Anatomy_function__involved
  cursor: String
}

type Anatomy_function__involvedConnection {
  edges: [Anatomy_function__involvedEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Strain__phenotypeEdge {
  node: Strain__phenotype
  cursor: String
}

type Strain__phenotypeConnection {
  edges: [Strain__phenotypeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Neurodata__gap_junctionEdge {
  node: Neurodata__gap_junction
  cursor: String
}

type Neurodata__gap_junctionConnection {
  edges: [Neurodata__gap_junctionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Library__databaseEdge {
  node: Library__database
  cursor: String
}

type Library__databaseConnection {
  edges: [Library__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expr_profileEdge {
  node: Expr_profile
  cursor: String
}

type Expr_profileConnection {
  edges: [Expr_profileEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Strain__databaseEdge {
  node: Strain__database
  cursor: String
}

type Strain__databaseConnection {
  edges: [Strain__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__lowEdge {
  node: Phenotype_info__low
  cursor: String
}

type Phenotype_info__lowConnection {
  edges: [Phenotype_info__lowEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Homology_group__remarkEdge {
  node: Homology_group__remark
  cursor: String
}

type Homology_group__remarkConnection {
  edges: [Homology_group__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Molecule__affects_phenotype_of_variationEdge {
  node: Molecule__affects_phenotype_of_variation
  cursor: String
}

type Molecule__affects_phenotype_of_variationConnection {
  edges: [Molecule__affects_phenotype_of_variationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expr_pattern__associated_featureEdge {
  node: Expr_pattern__associated_feature
  cursor: String
}

type Expr_pattern__associated_featureConnection {
  edges: [Expr_pattern__associated_featureEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rearrangement__locationEdge {
  node: Rearrangement__location
  cursor: String
}

type Rearrangement__locationConnection {
  edges: [Rearrangement__locationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type GeneEdge {
  node: Gene
  cursor: String
}

type GeneConnection {
  edges: [GeneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type AntibodyEdge {
  node: Antibody
  cursor: String
}

type AntibodyConnection {
  edges: [AntibodyEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Ao_codeEdge {
  node: Ao_code
  cursor: String
}

type Ao_codeConnection {
  edges: [Ao_codeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__orthologEdge {
  node: Gene__ortholog
  cursor: String
}

type Gene__orthologConnection {
  edges: [Gene__orthologEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Construct__three_prime_utrEdge {
  node: Construct__three_prime_utr
  cursor: String
}

type Construct__three_prime_utrConnection {
  edges: [Construct__three_prime_utrEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__other_descriptionEdge {
  node: Gene__other_description
  cursor: String
}

type Gene__other_descriptionConnection {
  edges: [Gene__other_descriptionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__genotypeEdge {
  node: Phenotype_info__genotype
  cursor: String
}

type Phenotype_info__genotypeConnection {
  edges: [Phenotype_info__genotypeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Picture__wbprocessEdge {
  node: Picture__wbprocess
  cursor: String
}

type Picture__wbprocessConnection {
  edges: [Picture__wbprocessEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Multi_pt_data__locusEdge {
  node: Multi_pt_data__locus
  cursor: String
}

type Multi_pt_data__locusConnection {
  edges: [Multi_pt_data__locusEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Operon__deprecatedEdge {
  node: Operon__deprecated
  cursor: String
}

type Operon__deprecatedConnection {
  edges: [Operon__deprecatedEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type OperonEdge {
  node: Operon
  cursor: String
}

type OperonConnection {
  edges: [OperonEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__one_recombinantEdge {
  node: Two_point_data__one_recombinant
  cursor: String
}

type Two_point_data__one_recombinantConnection {
  edges: [Two_point_data__one_recombinantEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Position_matrixEdge {
  node: Position_matrix
  cursor: String
}

type Position_matrixConnection {
  edges: [Position_matrixEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Clone__in_situEdge {
  node: Clone__in_situ
  cursor: String
}

type Clone__in_situConnection {
  edges: [Clone__in_situEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Motif__go_termEdge {
  node: Motif__go_term
  cursor: String
}

type Motif__go_termConnection {
  edges: [Motif__go_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__sequence_featuresEdge {
  node: Gene__sequence_features
  cursor: String
}

type Gene__sequence_featuresConnection {
  edges: [Gene__sequence_featuresEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Paper__speciesEdge {
  node: Paper__species
  cursor: String
}

type Paper__speciesConnection {
  edges: [Paper__speciesEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Go_annotation__go_term_relationEdge {
  node: Go_annotation__go_term_relation
  cursor: String
}

type Go_annotation__go_term_relationConnection {
  edges: [Go_annotation__go_term_relationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Interaction__interaction_summaryEdge {
  node: Interaction__interaction_summary
  cursor: String
}

type Interaction__interaction_summaryConnection {
  edges: [Interaction__interaction_summaryEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Paper__authorEdge {
  node: Paper__author
  cursor: String
}

type Paper__authorConnection {
  edges: [Paper__authorEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expression_cluster__anatomy_termEdge {
  node: Expression_cluster__anatomy_term
  cursor: String
}

type Expression_cluster__anatomy_termConnection {
  edges: [Expression_cluster__anatomy_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transcript__corresponding_cdsEdge {
  node: Transcript__corresponding_cds
  cursor: String
}

type Transcript__corresponding_cdsConnection {
  edges: [Transcript__corresponding_cdsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__automated_descriptionEdge {
  node: Gene__automated_description
  cursor: String
}

type Gene__automated_descriptionConnection {
  edges: [Gene__automated_descriptionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__pathogenEdge {
  node: Phenotype_info__pathogen
  cursor: String
}

type Phenotype_info__pathogenConnection {
  edges: [Phenotype_info__pathogenEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pato_termEdge {
  node: Pato_term
  cursor: String
}

type Pato_termConnection {
  edges: [Pato_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sage_tag__predicted_cdsEdge {
  node: Sage_tag__predicted_cds
  cursor: String
}

type Sage_tag__predicted_cdsConnection {
  edges: [Sage_tag__predicted_cdsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transgene__remarkEdge {
  node: Transgene__remark
  cursor: String
}

type Transgene__remarkConnection {
  edges: [Transgene__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature__scoreEdge {
  node: Feature__score
  cursor: String
}

type Feature__scoreConnection {
  edges: [Feature__scoreEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__treatmentEdge {
  node: Phenotype_info__treatment
  cursor: String
}

type Phenotype_info__treatmentConnection {
  edges: [Phenotype_info__treatmentEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Neurodata__receive_jointEdge {
  node: Neurodata__receive_joint
  cursor: String
}

type Neurodata__receive_jointConnection {
  edges: [Neurodata__receive_jointEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type TranscriptEdge {
  node: Transcript
  cursor: String
}

type TranscriptConnection {
  edges: [TranscriptEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Microarray_results__cdsEdge {
  node: Microarray_results__cds
  cursor: String
}

type Microarray_results__cdsConnection {
  edges: [Microarray_results__cdsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type DatabaseEdge {
  node: Database
  cursor: String
}

type DatabaseConnection {
  edges: [DatabaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rearrangement__locus_insideEdge {
  node: Rearrangement__locus_inside
  cursor: String
}

type Rearrangement__locus_insideConnection {
  edges: [Rearrangement__locus_insideEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__pseudogeneEdge {
  node: Variation__pseudogene
  cursor: String
}

type Variation__pseudogeneConnection {
  edges: [Variation__pseudogeneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type StrainEdge {
  node: Strain
  cursor: String
}

type StrainConnection {
  edges: [StrainEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sage_experiment__remarkEdge {
  node: Sage_experiment__remark
  cursor: String
}

type Sage_experiment__remarkConnection {
  edges: [Sage_experiment__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transcription_factorEdge {
  node: Transcription_factor
  cursor: String
}

type Transcription_factorConnection {
  edges: [Transcription_factorEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Multi_counts__locusEdge {
  node: Multi_counts__locus
  cursor: String
}

type Multi_counts__locusConnection {
  edges: [Multi_counts__locusEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Map_position__with_cloneEdge {
  node: Map_position__with_clone
  cursor: String
}

type Map_position__with_cloneConnection {
  edges: [Map_position__with_cloneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence__protein_idEdge {
  node: Sequence__protein_id
  cursor: String
}

type Sequence__protein_idConnection {
  edges: [Sequence__protein_idEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Interaction__detection_methodEdge {
  node: Interaction__detection_method
  cursor: String
}

type Interaction__detection_methodConnection {
  edges: [Interaction__detection_methodEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__cgh_deleted_probesEdge {
  node: Variation__cgh_deleted_probes
  cursor: String
}

type Variation__cgh_deleted_probesConnection {
  edges: [Variation__cgh_deleted_probesEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transposon__remarkEdge {
  node: Transposon__remark
  cursor: String
}

type Transposon__remarkConnection {
  edges: [Transposon__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Clone__databaseEdge {
  node: Clone__database
  cursor: String
}

type Clone__databaseConnection {
  edges: [Clone__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Method__score_boundsEdge {
  node: Method__score_bounds
  cursor: String
}

type Method__score_boundsConnection {
  edges: [Method__score_boundsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Molecular_change__frameshiftEdge {
  node: Molecular_change__frameshift
  cursor: String
}

type Molecular_change__frameshiftConnection {
  edges: [Molecular_change__frameshiftEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Microarray_results__pseudogeneEdge {
  node: Microarray_results__pseudogene
  cursor: String
}

type Microarray_results__pseudogeneConnection {
  edges: [Microarray_results__pseudogeneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Genetic_codeEdge {
  node: Genetic_code
  cursor: String
}

type Genetic_codeConnection {
  edges: [Genetic_codeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type GridEdge {
  node: Grid
  cursor: String
}

type GridConnection {
  edges: [GridEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rnai__dna_textEdge {
  node: Rnai__dna_text
  cursor: String
}

type Rnai__dna_textConnection {
  edges: [Rnai__dna_textEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Molecular_change__readthroughEdge {
  node: Molecular_change__readthrough
  cursor: String
}

type Molecular_change__readthroughConnection {
  edges: [Molecular_change__readthroughEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__sex_fullEdge {
  node: Two_point_data__sex_full
  cursor: String
}

type Two_point_data__sex_fullConnection {
  edges: [Two_point_data__sex_fullEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expr_pattern__go_termEdge {
  node: Expr_pattern__go_term
  cursor: String
}

type Expr_pattern__go_termConnection {
  edges: [Expr_pattern__go_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Movie__db_infoEdge {
  node: Movie__db_info
  cursor: String
}

type Movie__db_infoConnection {
  edges: [Movie__db_infoEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence__db_annotationEdge {
  node: Sequence__db_annotation
  cursor: String
}

type Sequence__db_annotationConnection {
  edges: [Sequence__db_annotationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__remarkEdge {
  node: Phenotype_info__remark
  cursor: String
}

type Phenotype_info__remarkConnection {
  edges: [Phenotype_info__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__strainEdge {
  node: Variation__strain
  cursor: String
}

type Variation__strainConnection {
  edges: [Variation__strainEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type TransgeneEdge {
  node: Transgene
  cursor: String
}

type TransgeneConnection {
  edges: [TransgeneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__statusEdge {
  node: Gene__status
  cursor: String
}

type Gene__statusConnection {
  edges: [Gene__statusEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__other_nameEdge {
  node: Gene__other_name
  cursor: String
}

type Gene__other_nameConnection {
  edges: [Gene__other_nameEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rearrangement__gene_outsideEdge {
  node: Rearrangement__gene_outside
  cursor: String
}

type Rearrangement__gene_outsideConnection {
  edges: [Rearrangement__gene_outsideEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Go_codeEdge {
  node: Go_code
  cursor: String
}

type Go_codeConnection {
  edges: [Go_codeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Position_matrix__descriptionEdge {
  node: Position_matrix__description
  cursor: String
}

type Position_matrix__descriptionConnection {
  edges: [Position_matrix__descriptionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Molecule__endogenous_inEdge {
  node: Molecule__endogenous_in
  cursor: String
}

type Molecule__endogenous_inConnection {
  edges: [Molecule__endogenous_inEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Molecule__biofunction_roleEdge {
  node: Molecule__biofunction_role
  cursor: String
}

type Molecule__biofunction_roleConnection {
  edges: [Molecule__biofunction_roleEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pseudogene__rnaseqEdge {
  node: Pseudogene__rnaseq
  cursor: String
}

type Pseudogene__rnaseqConnection {
  edges: [Pseudogene__rnaseqEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Interaction__library_screenedEdge {
  node: Interaction__library_screened
  cursor: String
}

type Interaction__library_screenedConnection {
  edges: [Interaction__library_screenedEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Structure_data__remarkEdge {
  node: Structure_data__remark
  cursor: String
}

type Structure_data__remarkConnection {
  edges: [Structure_data__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Go_annotation__databaseEdge {
  node: Go_annotation__database
  cursor: String
}

type Go_annotation__databaseConnection {
  edges: [Go_annotation__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__biological_processEdge {
  node: Gene__biological_process
  cursor: String
}

type Gene__biological_processConnection {
  edges: [Gene__biological_processEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence__referenceEdge {
  node: Sequence__reference
  cursor: String
}

type Sequence__referenceConnection {
  edges: [Sequence__referenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Life_stage__remarkEdge {
  node: Life_stage__remark
  cursor: String
}

type Life_stage__remarkConnection {
  edges: [Life_stage__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__remarkEdge {
  node: Gene__remark
  cursor: String
}

type Gene__remarkConnection {
  edges: [Gene__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Do_term__synonymEdge {
  node: Do_term__synonym
  cursor: String
}

type Do_term__synonymConnection {
  edges: [Do_term__synonymEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Cds__go_termEdge {
  node: Cds__go_term
  cursor: String
}

type Cds__go_termConnection {
  edges: [Cds__go_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transcription_factor__remarkEdge {
  node: Transcription_factor__remark
  cursor: String
}

type Transcription_factor__remarkConnection {
  edges: [Transcription_factor__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence__dateEdge {
  node: Sequence__date
  cursor: String
}

type Sequence__dateConnection {
  edges: [Sequence__dateEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type TreeEdge {
  node: Tree
  cursor: String
}

type TreeConnection {
  edges: [TreeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Interaction__databaseEdge {
  node: Interaction__database
  cursor: String
}

type Interaction__databaseConnection {
  edges: [Interaction__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__insertionEdge {
  node: Variation__insertion
  cursor: String
}

type Variation__insertionConnection {
  edges: [Variation__insertionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type SequenceEdge {
  node: Sequence
  cursor: String
}

type SequenceConnection {
  edges: [SequenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__interpolated_map_positionEdge {
  node: Gene__interpolated_map_position
  cursor: String
}

type Gene__interpolated_map_positionConnection {
  edges: [Gene__interpolated_map_positionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Method__embl_qualifierEdge {
  node: Method__embl_qualifier
  cursor: String
}

type Method__embl_qualifierConnection {
  edges: [Method__embl_qualifierEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Multi_counts__geneEdge {
  node: Multi_counts__gene
  cursor: String
}

type Multi_counts__geneConnection {
  edges: [Multi_counts__geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type PersonEdge {
  node: Person
  cursor: String
}

type PersonConnection {
  edges: [PersonEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Mass_spec_experimentEdge {
  node: Mass_spec_experiment
  cursor: String
}

type Mass_spec_experimentConnection {
  edges: [Mass_spec_experimentEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Homol_dataEdge {
  node: Homol_data
  cursor: String
}

type Homol_dataConnection {
  edges: [Homol_dataEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__flanking_sequencesEdge {
  node: Variation__flanking_sequences
  cursor: String
}

type Variation__flanking_sequencesConnection {
  edges: [Variation__flanking_sequencesEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence__oligoEdge {
  node: Sequence__oligo
  cursor: String
}

type Sequence__oligoConnection {
  edges: [Sequence__oligoEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expression_clusterEdge {
  node: Expression_cluster
  cursor: String
}

type Expression_clusterConnection {
  edges: [Expression_clusterEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__moleculeEdge {
  node: Phenotype_info__molecule
  cursor: String
}

type Phenotype_info__moleculeConnection {
  edges: [Phenotype_info__moleculeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Position_matrix__remarkEdge {
  node: Position_matrix__remark
  cursor: String
}

type Position_matrix__remarkConnection {
  edges: [Position_matrix__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transcription_factor__typeEdge {
  node: Transcription_factor__type
  cursor: String
}

type Transcription_factor__typeConnection {
  edges: [Transcription_factor__typeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Microarray_results__resultsEdge {
  node: Microarray_results__results
  cursor: String
}

type Microarray_results__resultsConnection {
  edges: [Microarray_results__resultsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transgene__transgene_for_diseaseEdge {
  node: Transgene__transgene_for_disease
  cursor: String
}

type Transgene__transgene_for_diseaseConnection {
  edges: [Transgene__transgene_for_diseaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Clone__locationEdge {
  node: Clone__location
  cursor: String
}

type Clone__locationConnection {
  edges: [Clone__locationEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expression_cluster__sage_tagEdge {
  node: Expression_cluster__sage_tag
  cursor: String
}

type Expression_cluster__sage_tagConnection {
  edges: [Expression_cluster__sage_tagEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transgene__summaryEdge {
  node: Transgene__summary
  cursor: String
}

type Transgene__summaryConnection {
  edges: [Transgene__summaryEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Mass_spec_peptideEdge {
  node: Mass_spec_peptide
  cursor: String
}

type Mass_spec_peptideConnection {
  edges: [Mass_spec_peptideEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type ReferenceEdge {
  node: Reference
  cursor: String
}

type ReferenceConnection {
  edges: [ReferenceEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type RnaiEdge {
  node: Rnai
  cursor: String
}

type RnaiConnection {
  edges: [RnaiEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__recs_allEdge {
  node: Two_point_data__recs_all
  cursor: String
}

type Two_point_data__recs_allConnection {
  edges: [Two_point_data__recs_allEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type FressianEdge {
  node: Fressian
  cursor: String
}

type FressianConnection {
  edges: [FressianEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Cds__matching_cdnaEdge {
  node: Cds__matching_cdna
  cursor: String
}

type Cds__matching_cdnaConnection {
  edges: [Cds__matching_cdnaEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__mapEdge {
  node: Variation__map
  cursor: String
}

type Variation__mapConnection {
  edges: [Variation__mapEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transposon__corresponding_cdsEdge {
  node: Transposon__corresponding_cds
  cursor: String
}

type Transposon__corresponding_cdsConnection {
  edges: [Transposon__corresponding_cdsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__locus_1Edge {
  node: Two_point_data__locus_1
  cursor: String
}

type Two_point_data__locus_1Connection {
  edges: [Two_point_data__locus_1Edge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Picture__article_urlEdge {
  node: Picture__article_url
  cursor: String
}

type Picture__article_urlConnection {
  edges: [Picture__article_urlEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Anatomy_term__remarkEdge {
  node: Anatomy_term__remark
  cursor: String
}

type Anatomy_term__remarkConnection {
  edges: [Anatomy_term__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Two_point_data__locus_2Edge {
  node: Two_point_data__locus_2
  cursor: String
}

type Two_point_data__locus_2Connection {
  edges: [Two_point_data__locus_2Edge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype__synonymEdge {
  node: Phenotype__synonym
  cursor: String
}

type Phenotype__synonymConnection {
  edges: [Phenotype__synonymEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Clone__mapEdge {
  node: Clone__map
  cursor: String
}

type Clone__mapConnection {
  edges: [Clone__mapEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__phenotype_not_observedEdge {
  node: Variation__phenotype_not_observed
  cursor: String
}

type Variation__phenotype_not_observedConnection {
  edges: [Variation__phenotype_not_observedEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Rnai__predicted_geneEdge {
  node: Rnai__predicted_gene
  cursor: String
}

type Rnai__predicted_geneConnection {
  edges: [Rnai__predicted_geneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Locus__other_nameEdge {
  node: Locus__other_name
  cursor: String
}

type Locus__other_nameConnection {
  edges: [Locus__other_nameEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Splice_confirmEdge {
  node: Splice_confirm
  cursor: String
}

type Splice_confirmConnection {
  edges: [Splice_confirmEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pos_neg_data__locus_1Edge {
  node: Pos_neg_data__locus_1
  cursor: String
}

type Pos_neg_data__locus_1Connection {
  edges: [Pos_neg_data__locus_1Edge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__male_mating_efficiencyEdge {
  node: Variation__male_mating_efficiency
  cursor: String
}

type Variation__male_mating_efficiencyConnection {
  edges: [Variation__male_mating_efficiencyEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Pos_neg_data__locus_2Edge {
  node: Pos_neg_data__locus_2
  cursor: String
}

type Pos_neg_data__locus_2Connection {
  edges: [Pos_neg_data__locus_2Edge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__quantity_descriptionEdge {
  node: Phenotype_info__quantity_description
  cursor: String
}

type Phenotype_info__quantity_descriptionConnection {
  edges: [Phenotype_info__quantity_descriptionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type LocusEdge {
  node: Locus
  cursor: String
}

type LocusConnection {
  edges: [LocusEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__functional_physical_interactionEdge {
  node: Gene__functional_physical_interaction
  cursor: String
}

type Gene__functional_physical_interactionConnection {
  edges: [Gene__functional_physical_interactionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type InteractionEdge {
  node: Interaction
  cursor: String
}

type InteractionConnection {
  edges: [InteractionEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Phenotype_info__heat_sensitiveEdge {
  node: Phenotype_info__heat_sensitive
  cursor: String
}

type Phenotype_info__heat_sensitiveConnection {
  edges: [Phenotype_info__heat_sensitiveEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Variation__remarkEdge {
  node: Variation__remark
  cursor: String
}

type Variation__remarkConnection {
  edges: [Variation__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Feature__associated_with_pseudogeneEdge {
  node: Feature__associated_with_pseudogene
  cursor: String
}

type Feature__associated_with_pseudogeneConnection {
  edges: [Feature__associated_with_pseudogeneEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Expr_pattern__anatomy_termEdge {
  node: Expr_pattern__anatomy_term
  cursor: String
}

type Expr_pattern__anatomy_termConnection {
  edges: [Expr_pattern__anatomy_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transgene__laboratoryEdge {
  node: Transgene__laboratory
  cursor: String
}

type Transgene__laboratoryConnection {
  edges: [Transgene__laboratoryEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Transgene__phenotypeEdge {
  node: Transgene__phenotype
  cursor: String
}

type Transgene__phenotypeConnection {
  edges: [Transgene__phenotypeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Oligo_set__overlaps_cdsEdge {
  node: Oligo_set__overlaps_cds
  cursor: String
}

type Oligo_set__overlaps_cdsConnection {
  edges: [Oligo_set__overlaps_cdsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Clone__hybridizes_weakEdge {
  node: Clone__hybridizes_weak
  cursor: String
}

type Clone__hybridizes_weakConnection {
  edges: [Clone__hybridizes_weakEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene_class__former_designating_laboratoryEdge {
  node: Gene_class__former_designating_laboratory
  cursor: String
}

type Gene_class__former_designating_laboratoryConnection {
  edges: [Gene_class__former_designating_laboratoryEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Clone__bandsEdge {
  node: Clone__bands
  cursor: String
}

type Clone__bandsConnection {
  edges: [Clone__bandsEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Gene__version_changeEdge {
  node: Gene__version_change
  cursor: String
}

type Gene__version_changeConnection {
  edges: [Gene__version_changeEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Microarray__remarkEdge {
  node: Microarray__remark
  cursor: String
}

type Microarray__remarkConnection {
  edges: [Microarray__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Mass_spec_experiment__remarkEdge {
  node: Mass_spec_experiment__remark
  cursor: String
}

type Mass_spec_experiment__remarkConnection {
  edges: [Mass_spec_experiment__remarkEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Sequence__go_termEdge {
  node: Sequence__go_term
  cursor: String
}

type Sequence__go_termConnection {
  edges: [Sequence__go_termEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type PaperEdge {
  node: Paper
  cursor: String
}

type PaperConnection {
  edges: [PaperEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Paper__databaseEdge {
  node: Paper__database
  cursor: String
}

type Paper__databaseConnection {
  edges: [Paper__databaseEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Locus__mapEdge {
  node: Locus__map
  cursor: String
}

type Locus__mapConnection {
  edges: [Locus__mapEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Go_term__synonymEdge {
  node: Go_term__synonym
  cursor: String
}

type Go_term__synonymConnection {
  edges: [Go_term__synonymEdge]
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
  endCursor: String
}


type Query {
  peptide(id: String!): Peptide
  gene(id: String!): Gene
  ao_code(id: String!): Ao_code
  antibody(id: String!): Antibody
  do_term(id: String!): Do_term
  expr_pattern(id: String!): Expr_pattern
  author(id: String!): Author
  microarray_results(id: String!): Microarray_results
  analysis(id: String!): Analysis
  feature_data(id: String!): Feature_data
  tree(id: String!): Tree
  sequence_collection(id: String!): Sequence_collection
  picture(id: String!): Picture
  phenotype(id: String!): Phenotype
  operon(id: String!): Operon
  sequence(id: String!): Sequence
  position_matrix(id: String!): Position_matrix
  species(id: String!): Species
  pseudogene(id: String!): Pseudogene
  go_annotation(id: String!): Go_annotation
  transposon_family(id: String!): Transposon_family
  condition(id: String!): Condition
  treenode(id: String!): Treenode
  person(id: String!): Person
  molecule(id: String!): Molecule
  mass_spec_experiment(id: String!): Mass_spec_experiment
  homol_data(id: String!): Homol_data
  structure_data(id: String!): Structure_data
  rearrangement(id: String!): Rearrangement
  expression_cluster(id: String!): Expression_cluster
  anatomy_function(id: String!): Anatomy_function
  longtext(id: String!): Longtext
  pato_term(id: String!): Pato_term
  construct(id: String!): Construct
  variation(id: String!): Variation
  microarray_experiment(id: String!): Microarray_experiment
  transcript(id: String!): Transcript
  mass_spec_peptide(id: String!): Mass_spec_peptide
  embl_info(id: String!): Embl_info
  transposon(id: String!): Transposon
  pcr_product(id: String!): Pcr_product
  reference(id: String!): Reference
  sk_map(id: String!): Sk_map
  library(id: String!): Library
  database(id: String!): Database
  gene_cluster(id: String!): Gene_cluster
  protein(id: String!): Protein
  rnai(id: String!): Rnai
  dna(id: String!): Dna
  feature(id: String!): Feature
  strain(id: String!): Strain
  transcription_factor(id: String!): Transcription_factor
  method(id: String!): Method
  oligo_set(id: String!): Oligo_set
  database_field(id: String!): Database_field
  gene_class(id: String!): Gene_class
  cds(id: String!): Cds
  contig(id: String!): Contig
  genetic_code(id: String!): Genetic_code
  microarray(id: String!): Microarray
  two_point_data(id: String!): Two_point_data
  laboratory(id: String!): Laboratory
  sage_tag(id: String!): Sage_tag
  grid(id: String!): Grid
  pos_neg_data(id: String!): Pos_neg_data
  sage_experiment(id: String!): Sage_experiment
  locus(id: String!): Locus
  clone(id: String!): Clone
  so_term(id: String!): So_term
  homology_group(id: String!): Homology_group
  interaction(id: String!): Interaction
  splice_confirmation(id: String!): Splice_confirmation
  reconstruction(id: String!): Reconstruction
  transgene(id: String!): Transgene
  anatomy_term(id: String!): Anatomy_term
  life_stage(id: String!): Life_stage
  go_code(id: String!): Go_code
  multi_pt_data(id: String!): Multi_pt_data
  go_term(id: String!): Go_term
  wbprocess(id: String!): Wbprocess
  ace2so(id: String!): Ace2so
  paper(id: String!): Paper
  expr_profile(id: String!): Expr_profile
  grid_data(id: String!): Grid_data
  map(id: String!): Map
  motif(id: String!): Motif
  movie(id: String!): Movie
  oligo(id: String!): Oligo
  keyword(id: String!): Keyword
  getGenesByNames(names: [String]!, after: String): GeneConnection
}


schema {
  query: Query
}
